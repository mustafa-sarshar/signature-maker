/*! For license information please see index.7d3a0e8e6784655fa3f3.js.LICENSE.txt */
(()=>{var e={584:()=>{document.createElement("canvas").getContext||function(){var e=Math,t=e.round,n=e.sin,r=e.cos,o=e.abs,a=e.sqrt,i=10,s=i/2;function l(){return this.context_||(this.context_=new F(this))}var c=Array.prototype.slice;function u(e){return String(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;")}function d(e,t,n){e.namespaces[t]||e.namespaces.add(t,n,"#default#VML")}function p(e){if(d(e,"g_vml_","urn:schemas-microsoft-com:vml"),d(e,"g_o_","urn:schemas-microsoft-com:office:office"),!e.styleSheets.ex_canvas_){var t=e.createStyleSheet();t.owningElement.id="ex_canvas_",t.cssText="canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}"}}p(document);var f={init:function(e){var t=e||document;t.createElement("canvas"),t.attachEvent("onreadystatechange",function(e,t,n){var r=c.call(arguments,2);return function(){return e.apply(t,r.concat(c.call(arguments)))}}(this.init_,this,t))},init_:function(e){for(var t=e.getElementsByTagName("canvas"),n=0;n<t.length;n++)this.initElement(t[n])},initElement:function(e){if(!e.getContext){e.getContext=l,p(e.ownerDocument),e.innerHTML="",e.attachEvent("onpropertychange",h),e.attachEvent("onresize",g);var t=e.attributes;t.width&&t.width.specified?e.style.width=t.width.nodeValue+"px":e.width=e.clientWidth,t.height&&t.height.specified?e.style.height=t.height.nodeValue+"px":e.height=e.clientHeight}return e}};function h(e){var t=e.srcElement;switch(e.propertyName){case"width":t.getContext().clearRect(),t.style.width=t.attributes.width.nodeValue+"px",t.firstChild.style.width=t.clientWidth+"px";break;case"height":t.getContext().clearRect(),t.style.height=t.attributes.height.nodeValue+"px",t.firstChild.style.height=t.clientHeight+"px"}}function g(e){var t=e.srcElement;t.firstChild&&(t.firstChild.style.width=t.clientWidth+"px",t.firstChild.style.height=t.clientHeight+"px")}f.init();for(var m=[],b=0;b<16;b++)for(var v=0;v<16;v++)m[16*b+v]=b.toString(16)+v.toString(16);function y(e,t){for(var n=[[1,0,0],[0,1,0],[0,0,1]],r=0;r<3;r++)for(var o=0;o<3;o++){for(var a=0,i=0;i<3;i++)a+=e[r][i]*t[i][o];n[r][o]=a}return n}function A(e,t){t.fillStyle=e.fillStyle,t.lineCap=e.lineCap,t.lineJoin=e.lineJoin,t.lineWidth=e.lineWidth,t.miterLimit=e.miterLimit,t.shadowBlur=e.shadowBlur,t.shadowColor=e.shadowColor,t.shadowOffsetX=e.shadowOffsetX,t.shadowOffsetY=e.shadowOffsetY,t.strokeStyle=e.strokeStyle,t.globalAlpha=e.globalAlpha,t.font=e.font,t.textAlign=e.textAlign,t.textBaseline=e.textBaseline,t.arcScaleX_=e.arcScaleX_,t.arcScaleY_=e.arcScaleY_,t.lineScale_=e.lineScale_}var x={aliceblue:"#F0F8FF",antiquewhite:"#FAEBD7",aquamarine:"#7FFFD4",azure:"#F0FFFF",beige:"#F5F5DC",bisque:"#FFE4C4",black:"#000000",blanchedalmond:"#FFEBCD",blueviolet:"#8A2BE2",brown:"#A52A2A",burlywood:"#DEB887",cadetblue:"#5F9EA0",chartreuse:"#7FFF00",chocolate:"#D2691E",coral:"#FF7F50",cornflowerblue:"#6495ED",cornsilk:"#FFF8DC",crimson:"#DC143C",cyan:"#00FFFF",darkblue:"#00008B",darkcyan:"#008B8B",darkgoldenrod:"#B8860B",darkgray:"#A9A9A9",darkgreen:"#006400",darkgrey:"#A9A9A9",darkkhaki:"#BDB76B",darkmagenta:"#8B008B",darkolivegreen:"#556B2F",darkorange:"#FF8C00",darkorchid:"#9932CC",darkred:"#8B0000",darksalmon:"#E9967A",darkseagreen:"#8FBC8F",darkslateblue:"#483D8B",darkslategray:"#2F4F4F",darkslategrey:"#2F4F4F",darkturquoise:"#00CED1",darkviolet:"#9400D3",deeppink:"#FF1493",deepskyblue:"#00BFFF",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1E90FF",firebrick:"#B22222",floralwhite:"#FFFAF0",forestgreen:"#228B22",gainsboro:"#DCDCDC",ghostwhite:"#F8F8FF",gold:"#FFD700",goldenrod:"#DAA520",grey:"#808080",greenyellow:"#ADFF2F",honeydew:"#F0FFF0",hotpink:"#FF69B4",indianred:"#CD5C5C",indigo:"#4B0082",ivory:"#FFFFF0",khaki:"#F0E68C",lavender:"#E6E6FA",lavenderblush:"#FFF0F5",lawngreen:"#7CFC00",lemonchiffon:"#FFFACD",lightblue:"#ADD8E6",lightcoral:"#F08080",lightcyan:"#E0FFFF",lightgoldenrodyellow:"#FAFAD2",lightgreen:"#90EE90",lightgrey:"#D3D3D3",lightpink:"#FFB6C1",lightsalmon:"#FFA07A",lightseagreen:"#20B2AA",lightskyblue:"#87CEFA",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#B0C4DE",lightyellow:"#FFFFE0",limegreen:"#32CD32",linen:"#FAF0E6",magenta:"#FF00FF",mediumaquamarine:"#66CDAA",mediumblue:"#0000CD",mediumorchid:"#BA55D3",mediumpurple:"#9370DB",mediumseagreen:"#3CB371",mediumslateblue:"#7B68EE",mediumspringgreen:"#00FA9A",mediumturquoise:"#48D1CC",mediumvioletred:"#C71585",midnightblue:"#191970",mintcream:"#F5FFFA",mistyrose:"#FFE4E1",moccasin:"#FFE4B5",navajowhite:"#FFDEAD",oldlace:"#FDF5E6",olivedrab:"#6B8E23",orange:"#FFA500",orangered:"#FF4500",orchid:"#DA70D6",palegoldenrod:"#EEE8AA",palegreen:"#98FB98",paleturquoise:"#AFEEEE",palevioletred:"#DB7093",papayawhip:"#FFEFD5",peachpuff:"#FFDAB9",peru:"#CD853F",pink:"#FFC0CB",plum:"#DDA0DD",powderblue:"#B0E0E6",rosybrown:"#BC8F8F",royalblue:"#4169E1",saddlebrown:"#8B4513",salmon:"#FA8072",sandybrown:"#F4A460",seagreen:"#2E8B57",seashell:"#FFF5EE",sienna:"#A0522D",skyblue:"#87CEEB",slateblue:"#6A5ACD",slategray:"#708090",slategrey:"#708090",snow:"#FFFAFA",springgreen:"#00FF7F",steelblue:"#4682B4",tan:"#D2B48C",thistle:"#D8BFD8",tomato:"#FF6347",turquoise:"#40E0D0",violet:"#EE82EE",wheat:"#F5DEB3",whitesmoke:"#F5F5F5",yellowgreen:"#9ACD32"};function E(e){var t=e.indexOf("(",3),n=e.indexOf(")",t+1),r=e.substring(t+1,n).split(",");return 4==r.length&&"a"==e.charAt(3)||(r[3]=1),r}function C(e){return parseFloat(e)/100}function w(e,t,n){return Math.min(n,Math.max(t,e))}function _(e,t,n){return n<0&&n++,n>1&&n--,6*n<1?e+6*(t-e)*n:2*n<1?t:3*n<2?e+(t-e)*(2/3-n)*6:e}var T={};function k(e){if(e in T)return T[e];var t=1;if("#"==(e=String(e)).charAt(0))o=e;else if(/^rgb/.test(e)){for(var n,r=E(e),o="#",a=0;a<3;a++)n=-1!=r[a].indexOf("%")?Math.floor(255*C(r[a])):+r[a],o+=m[w(n,0,255)];t=+r[3]}else/^hsl/.test(e)?(o=function(e){var t,n,r,o,a,i;if((o=parseFloat(e[0])/360%360)<0&&o++,a=w(C(e[1]),0,1),i=w(C(e[2]),0,1),0==a)t=n=r=i;else{var s=i<.5?i*(1+a):i+a-i*a,l=2*i-s;t=_(l,s,o+1/3),n=_(l,s,o),r=_(l,s,o-1/3)}return"#"+m[Math.floor(255*t)]+m[Math.floor(255*n)]+m[Math.floor(255*r)]}(r=E(e)),t=r[3]):o=x[e]||e;return T[e]={color:o,alpha:t}}var S="normal",R="normal",N="normal",O=10,I="sans-serif",L={},M={butt:"flat",round:"round"};function F(e){this.m_=[[1,0,0],[0,1,0],[0,0,1]],this.mStack_=[],this.aStack_=[],this.currentPath_=[],this.strokeStyle="#000",this.fillStyle="#000",this.lineWidth=1,this.lineJoin="miter",this.lineCap="butt",this.miterLimit=1*i,this.globalAlpha=1,this.font="10px sans-serif",this.textAlign="left",this.textBaseline="alphabetic",this.canvas=e;var t="width:"+e.clientWidth+"px;height:"+e.clientHeight+"px;overflow:hidden;position:absolute",n=e.ownerDocument.createElement("div");n.style.cssText=t,e.appendChild(n);var r=n.cloneNode(!1);r.style.backgroundColor="red",r.style.filter="alpha(opacity=0)",e.appendChild(r),this.element_=n,this.arcScaleX_=1,this.arcScaleY_=1,this.lineScale_=1}var B=F.prototype;function D(e,t,n,r){e.currentPath_.push({type:"bezierCurveTo",cp1x:t.x,cp1y:t.y,cp2x:n.x,cp2y:n.y,x:r.x,y:r.y}),e.currentX_=r.x,e.currentY_=r.y}function P(e,t){var n,r=k(e.strokeStyle),o=r.color,a=r.alpha*e.globalAlpha,i=e.lineScale_*e.lineWidth;i<1&&(a*=i),t.push("<g_vml_:stroke",' opacity="',a,'"',' joinstyle="',e.lineJoin,'"',' miterlimit="',e.miterLimit,'"',' endcap="',(n=e.lineCap,M[n]||"square"),'"',' weight="',i,'px"',' color="',o,'" />')}function j(t,n,r,o){var a=t.fillStyle,s=t.arcScaleX_,l=t.arcScaleY_,c=o.x-r.x,u=o.y-r.y;if(a instanceof z){var d=0,p={x:0,y:0},f=0,h=1;if("gradient"==a.type_){var g=a.x0_/s,m=a.y0_/l,b=a.x1_/s,v=a.y1_/l,y=H(t,g,m),A=H(t,b,v),x=A.x-y.x,E=A.y-y.y;(d=180*Math.atan2(x,E)/Math.PI)<0&&(d+=360),d<1e-6&&(d=0)}else{p={x:((y=H(t,a.x0_,a.y0_)).x-r.x)/c,y:(y.y-r.y)/u},c/=s*i,u/=l*i;var C=e.max(c,u);f=2*a.r0_/C,h=2*a.r1_/C-f}var w=a.colors_;w.sort((function(e,t){return e.offset-t.offset}));for(var _=w.length,T=w[0].color,S=w[_-1].color,R=w[0].alpha*t.globalAlpha,N=w[_-1].alpha*t.globalAlpha,O=[],I=0;I<_;I++){var L=w[I];O.push(L.offset*h+f+" "+L.color)}n.push('<g_vml_:fill type="',a.type_,'"',' method="none" focus="100%"',' color="',T,'"',' color2="',S,'"',' colors="',O.join(","),'"',' opacity="',N,'"',' g_o_:opacity2="',R,'"',' angle="',d,'"',' focusposition="',p.x,",",p.y,'" />')}else if(a instanceof W){if(c&&u){var M=-r.x,F=-r.y;n.push("<g_vml_:fill",' position="',M/c*s*s,",",F/u*l*l,'"',' type="tile"',' src="',a.src_,'" />')}}else{var B=k(t.fillStyle),D=B.color,P=B.alpha*t.globalAlpha;n.push('<g_vml_:fill color="',D,'" opacity="',P,'" />')}}function H(e,t,n){var r=e.m_;return{x:i*(t*r[0][0]+n*r[1][0]+r[2][0])-s,y:i*(t*r[0][1]+n*r[1][1]+r[2][1])-s}}function q(e,t,n){if(function(e){return isFinite(e[0][0])&&isFinite(e[0][1])&&isFinite(e[1][0])&&isFinite(e[1][1])&&isFinite(e[2][0])&&isFinite(e[2][1])}(t)&&(e.m_=t,n)){var r=t[0][0]*t[1][1]-t[0][1]*t[1][0];e.lineScale_=a(o(r))}}function z(e){this.type_=e,this.x0_=0,this.y0_=0,this.r0_=0,this.x1_=0,this.y1_=0,this.r1_=0,this.colors_=[]}function W(e,t){switch((n=e)&&1==n.nodeType&&"IMG"==n.tagName||U("TYPE_MISMATCH_ERR"),"complete"!=n.readyState&&U("INVALID_STATE_ERR"),t){case"repeat":case null:case"":this.repetition_="repeat";break;case"repeat-x":case"repeat-y":case"no-repeat":this.repetition_=t;break;default:U("SYNTAX_ERR")}var n;this.src_=e.src,this.width_=e.width,this.height_=e.height}function U(e){throw new G(e)}function G(e){this.code=this[e],this.message=e+": DOM Exception "+this.code}B.clearRect=function(){this.textMeasureEl_&&(this.textMeasureEl_.removeNode(!0),this.textMeasureEl_=null),this.element_.innerHTML=""},B.beginPath=function(){this.currentPath_=[]},B.moveTo=function(e,t){var n=H(this,e,t);this.currentPath_.push({type:"moveTo",x:n.x,y:n.y}),this.currentX_=n.x,this.currentY_=n.y},B.lineTo=function(e,t){var n=H(this,e,t);this.currentPath_.push({type:"lineTo",x:n.x,y:n.y}),this.currentX_=n.x,this.currentY_=n.y},B.bezierCurveTo=function(e,t,n,r,o,a){var i=H(this,o,a);D(this,H(this,e,t),H(this,n,r),i)},B.quadraticCurveTo=function(e,t,n,r){var o=H(this,e,t),a=H(this,n,r),i={x:this.currentX_+2/3*(o.x-this.currentX_),y:this.currentY_+2/3*(o.y-this.currentY_)};D(this,i,{x:i.x+(a.x-this.currentX_)/3,y:i.y+(a.y-this.currentY_)/3},a)},B.arc=function(e,t,o,a,l,c){o*=i;var u=c?"at":"wa",d=e+r(a)*o-s,p=t+n(a)*o-s,f=e+r(l)*o-s,h=t+n(l)*o-s;d!=f||c||(d+=.125);var g=H(this,e,t),m=H(this,d,p),b=H(this,f,h);this.currentPath_.push({type:u,x:g.x,y:g.y,radius:o,xStart:m.x,yStart:m.y,xEnd:b.x,yEnd:b.y})},B.rect=function(e,t,n,r){this.moveTo(e,t),this.lineTo(e+n,t),this.lineTo(e+n,t+r),this.lineTo(e,t+r),this.closePath()},B.strokeRect=function(e,t,n,r){var o=this.currentPath_;this.beginPath(),this.moveTo(e,t),this.lineTo(e+n,t),this.lineTo(e+n,t+r),this.lineTo(e,t+r),this.closePath(),this.stroke(),this.currentPath_=o},B.fillRect=function(e,t,n,r){var o=this.currentPath_;this.beginPath(),this.moveTo(e,t),this.lineTo(e+n,t),this.lineTo(e+n,t+r),this.lineTo(e,t+r),this.closePath(),this.fill(),this.currentPath_=o},B.createLinearGradient=function(e,t,n,r){var o=new z("gradient");return o.x0_=e,o.y0_=t,o.x1_=n,o.y1_=r,o},B.createRadialGradient=function(e,t,n,r,o,a){var i=new z("gradientradial");return i.x0_=e,i.y0_=t,i.r0_=n,i.x1_=r,i.y1_=o,i.r1_=a,i},B.drawImage=function(n,r){var o,a,s,l,c,u,d,p,f=n.runtimeStyle.width,h=n.runtimeStyle.height;n.runtimeStyle.width="auto",n.runtimeStyle.height="auto";var g=n.width,m=n.height;if(n.runtimeStyle.width=f,n.runtimeStyle.height=h,3==arguments.length)o=arguments[1],a=arguments[2],c=u=0,d=s=g,p=l=m;else if(5==arguments.length)o=arguments[1],a=arguments[2],s=arguments[3],l=arguments[4],c=u=0,d=g,p=m;else{if(9!=arguments.length)throw Error("Invalid number of arguments");c=arguments[1],u=arguments[2],d=arguments[3],p=arguments[4],o=arguments[5],a=arguments[6],s=arguments[7],l=arguments[8]}var b=H(this,o,a),v=[];if(v.push(" <g_vml_:group",' coordsize="',10*i,",",10*i,'"',' coordorigin="0,0"',' style="width:',10,"px;height:",10,"px;position:absolute;"),1!=this.m_[0][0]||this.m_[0][1]||1!=this.m_[1][1]||this.m_[1][0]){var y=[];y.push("M11=",this.m_[0][0],",","M12=",this.m_[1][0],",","M21=",this.m_[0][1],",","M22=",this.m_[1][1],",","Dx=",t(b.x/i),",","Dy=",t(b.y/i),"");var A=b,x=H(this,o+s,a),E=H(this,o,a+l),C=H(this,o+s,a+l);A.x=e.max(A.x,x.x,E.x,C.x),A.y=e.max(A.y,x.y,E.y,C.y),v.push("padding:0 ",t(A.x/i),"px ",t(A.y/i),"px 0;filter:progid:DXImageTransform.Microsoft.Matrix(",y.join(""),", sizingmethod='clip');")}else v.push("top:",t(b.y/i),"px;left:",t(b.x/i),"px;");v.push(' ">','<g_vml_:image src="',n.src,'"',' style="width:',i*s,"px;"," height:",i*l,'px"',' cropleft="',c/g,'"',' croptop="',u/m,'"',' cropright="',(g-c-d)/g,'"',' cropbottom="',(m-u-p)/m,'"'," />","</g_vml_:group>"),this.element_.insertAdjacentHTML("BeforeEnd",v.join(""))},B.stroke=function(e){var n=[];n.push("<g_vml_:shape",' filled="',!!e,'"',' style="position:absolute;width:',10,"px;height:",10,'px;"',' coordorigin="0,0"',' coordsize="',10*i,",",10*i,'"',' stroked="',!e,'"',' path="');for(var r={x:null,y:null},o={x:null,y:null},a=0;a<this.currentPath_.length;a++){var s=this.currentPath_[a];switch(s.type){case"moveTo":n.push(" m ",t(s.x),",",t(s.y));break;case"lineTo":n.push(" l ",t(s.x),",",t(s.y));break;case"close":n.push(" x "),s=null;break;case"bezierCurveTo":n.push(" c ",t(s.cp1x),",",t(s.cp1y),",",t(s.cp2x),",",t(s.cp2y),",",t(s.x),",",t(s.y));break;case"at":case"wa":n.push(" ",s.type," ",t(s.x-this.arcScaleX_*s.radius),",",t(s.y-this.arcScaleY_*s.radius)," ",t(s.x+this.arcScaleX_*s.radius),",",t(s.y+this.arcScaleY_*s.radius)," ",t(s.xStart),",",t(s.yStart)," ",t(s.xEnd),",",t(s.yEnd))}s&&((null==r.x||s.x<r.x)&&(r.x=s.x),(null==o.x||s.x>o.x)&&(o.x=s.x),(null==r.y||s.y<r.y)&&(r.y=s.y),(null==o.y||s.y>o.y)&&(o.y=s.y))}n.push(' ">'),e?j(this,n,r,o):P(this,n),n.push("</g_vml_:shape>"),this.element_.insertAdjacentHTML("beforeEnd",n.join(""))},B.fill=function(){this.stroke(!0)},B.closePath=function(){this.currentPath_.push({type:"close"})},B.save=function(){var e={};A(this,e),this.aStack_.push(e),this.mStack_.push(this.m_),this.m_=y([[1,0,0],[0,1,0],[0,0,1]],this.m_)},B.restore=function(){this.aStack_.length&&(A(this.aStack_.pop(),this),this.m_=this.mStack_.pop())},B.translate=function(e,t){q(this,y([[1,0,0],[0,1,0],[e,t,1]],this.m_),!1)},B.rotate=function(e){var t=r(e),o=n(e);q(this,y([[t,o,0],[-o,t,0],[0,0,1]],this.m_),!1)},B.scale=function(e,t){this.arcScaleX_*=e,this.arcScaleY_*=t,q(this,y([[e,0,0],[0,t,0],[0,0,1]],this.m_),!0)},B.transform=function(e,t,n,r,o,a){q(this,y([[e,t,0],[n,r,0],[o,a,1]],this.m_),!0)},B.setTransform=function(e,t,n,r,o,a){q(this,[[e,t,0],[n,r,0],[o,a,1]],!0)},B.drawText_=function(e,n,r,o,a){var s,l=this.m_,c=0,d=1e3,p={x:0,y:0},f=[],h=function(e,t){var n={};for(var r in e)n[r]=e[r];var o=parseFloat(t.currentStyle.fontSize),a=parseFloat(e.size);return"number"==typeof e.size?n.size=e.size:-1!=e.size.indexOf("px")?n.size=a:-1!=e.size.indexOf("em")?n.size=o*a:-1!=e.size.indexOf("%")?n.size=o/100*a:-1!=e.size.indexOf("pt")?n.size=a/.75:n.size=o,n.size*=.981,n}(function(e){if(L[e])return L[e];var t=document.createElement("div").style;try{t.font=e}catch(e){}return L[e]={style:t.fontStyle||S,variant:t.fontVariant||R,weight:t.fontWeight||N,size:t.fontSize||O,family:t.fontFamily||I}}(this.font),this.element_),g=(s=h).style+" "+s.variant+" "+s.weight+" "+s.size+"px "+s.family,m=this.element_.currentStyle,b=this.textAlign.toLowerCase();switch(b){case"left":case"center":case"right":break;case"end":b="ltr"==m.direction?"right":"left";break;case"start":b="rtl"==m.direction?"right":"left";break;default:b="left"}switch(this.textBaseline){case"hanging":case"top":p.y=h.size/1.75;break;case"middle":break;default:p.y=-h.size/2.25}switch(b){case"right":c=1e3,d=.05;break;case"center":c=d=500}var v=H(this,n+p.x,r+p.y);f.push('<g_vml_:line from="',-c,' 0" to="',d,' 0.05" ',' coordsize="100 100" coordorigin="0 0"',' filled="',!a,'" stroked="',!!a,'" style="position:absolute;width:1px;height:1px;">'),a?P(this,f):j(this,f,{x:-c,y:0},{x:d,y:h.size});var y=l[0][0].toFixed(3)+","+l[1][0].toFixed(3)+","+l[0][1].toFixed(3)+","+l[1][1].toFixed(3)+",0,0",A=t(v.x/i)+","+t(v.y/i);f.push('<g_vml_:skew on="t" matrix="',y,'" ',' offset="',A,'" origin="',c,' 0" />','<g_vml_:path textpathok="true" />','<g_vml_:textpath on="true" string="',u(e),'" style="v-text-align:',b,";font:",u(g),'" /></g_vml_:line>'),this.element_.insertAdjacentHTML("beforeEnd",f.join(""))},B.fillText=function(e,t,n,r){this.drawText_(e,t,n,r,!1)},B.strokeText=function(e,t,n,r){this.drawText_(e,t,n,r,!0)},B.measureText=function(e){this.textMeasureEl_||(this.element_.insertAdjacentHTML("beforeEnd",'<span style="position:absolute;top:-20000px;left:0;padding:0;margin:0;border:none;white-space:pre;"></span>'),this.textMeasureEl_=this.element_.lastChild);var t=this.element_.ownerDocument;return this.textMeasureEl_.innerHTML="",this.textMeasureEl_.style.font=this.font,this.textMeasureEl_.appendChild(t.createTextNode(e)),{width:this.textMeasureEl_.offsetWidth}},B.clip=function(){},B.arcTo=function(){},B.createPattern=function(e,t){return new W(e,t)},z.prototype.addColorStop=function(e,t){t=k(t),this.colors_.push({offset:e,color:t.color,alpha:t.alpha})};var V=G.prototype=new Error;V.INDEX_SIZE_ERR=1,V.DOMSTRING_SIZE_ERR=2,V.HIERARCHY_REQUEST_ERR=3,V.WRONG_DOCUMENT_ERR=4,V.INVALID_CHARACTER_ERR=5,V.NO_DATA_ALLOWED_ERR=6,V.NO_MODIFICATION_ALLOWED_ERR=7,V.NOT_FOUND_ERR=8,V.NOT_SUPPORTED_ERR=9,V.INUSE_ATTRIBUTE_ERR=10,V.INVALID_STATE_ERR=11,V.SYNTAX_ERR=12,V.INVALID_MODIFICATION_ERR=13,V.NAMESPACE_ERR=14,V.INVALID_ACCESS_ERR=15,V.VALIDATION_ERR=16,V.TYPE_MISMATCH_ERR=17,G_vmlCanvasManager=f,CanvasRenderingContext2D=F,CanvasGradient=z,CanvasPattern=W,DOMException=G}()},766:()=>{!function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){(function(e){"use strict";var t=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();n(43);var r=n(1),o=n(17),a=n(35);n(42);var i=function(){function n(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,n),this.activePlugin=null}return t(n,[{key:"handlePluginClick",value:function(e){e===this.activePlugin?(e.deactivate(),this.activePlugin=null):(this.activePlugin&&this.activePlugin.deactivate(),e.activate(),this.activePlugin=e)}},{key:"appendTo",value:function(t){var n=this,i=r(a()),s=void 0,l=o.default.map((function(t){return e(t,{onClick:n.handlePluginClick.bind(n)})})),c=null;o.experimental.length&&(c=e("li",null,e("div",{className:"tota11y-plugins-separator"},"Experimental"),e("ul",null,o.experimental.map((function(t){return e(t,{onClick:n.handlePluginClick.bind(n)})})))));var u=e("ul",{className:"tota11y-plugins"},l,c),d=e("button",{"aria-controls":"tota11y-toolbar",className:"tota11y-toolbar-toggle",onClick:function(e){e.preventDefault(),e.stopPropagation(),s.toggleClass("tota11y-expanded"),s.attr("aria-expanded",s.is(".tota11y-expanded"))},"aria-label":"[tota11y] Toggle menu"},e("div",{"aria-hidden":"true",className:"tota11y-toolbar-logo"},i));s=e("div",{id:"tota11y-toolbar",className:"tota11y tota11y-toolbar",role:"region","aria-expanded":"false"},e("div",{className:"tota11y-toolbar-body"},u),d),t.append(s)}}]),n}();r((function(){(new i).appendTo(r("body"))}))}).call(t,n(4))},function(e,t,n){var r;!function(t,n){"object"==typeof e&&"object"==typeof e.exports?e.exports=t.document?n(t,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return n(e)}:n(t)}("undefined"!=typeof window?window:this,(function(n,o){function a(e){var t=!!e&&"length"in e&&e.length,n=re.type(e);return"function"!==n&&!re.isWindow(e)&&("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e)}function i(e,t,n){if(re.isFunction(t))return re.grep(e,(function(e,r){return!!t.call(e,r,e)!==n}));if(t.nodeType)return re.grep(e,(function(e){return e===t!==n}));if("string"==typeof t){if(fe.test(t))return re.filter(t,e,n);t=re.filter(t,e)}return re.grep(e,(function(e){return K.call(t,e)>-1!==n}))}function s(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function l(){Y.removeEventListener("DOMContentLoaded",l),n.removeEventListener("load",l),re.ready()}function c(){this.expando=re.expando+c.uid++}function u(e,t,n){var r;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(Te,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(r))){try{n="true"===n||"false"!==n&&("null"===n?null:+n+""===n?+n:_e.test(n)?re.parseJSON(n):n)}catch(e){}we.set(e,t,n)}else n=void 0;return n}function d(e,t,n,r){var o,a=1,i=20,s=r?function(){return r.cur()}:function(){return re.css(e,t,"")},l=s(),c=n&&n[3]||(re.cssNumber[t]?"":"px"),u=(re.cssNumber[t]||"px"!==c&&+l)&&Se.exec(re.css(e,t));if(u&&u[3]!==c){c=c||u[3],n=n||[],u=+l||1;do{u/=a=a||".5",re.style(e,t,u+c)}while(a!==(a=s()/l)&&1!==a&&--i)}return n&&(u=+u||+l||0,o=n[1]?u+(n[1]+1)*n[2]:+n[2],r&&(r.unit=c,r.start=u,r.end=o)),o}function p(e,t){var n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&re.nodeName(e,t)?re.merge([e],n):n}function f(e,t){for(var n=0,r=e.length;r>n;n++)Ce.set(e[n],"globalEval",!t||Ce.get(t[n],"globalEval"))}function h(e,t,n,r,o){for(var a,i,s,l,c,u,d=t.createDocumentFragment(),h=[],g=0,m=e.length;m>g;g++)if((a=e[g])||0===a)if("object"===re.type(a))re.merge(h,a.nodeType?[a]:a);else if(Fe.test(a)){for(i=i||d.appendChild(t.createElement("div")),s=(Ie.exec(a)||["",""])[1].toLowerCase(),l=Me[s]||Me._default,i.innerHTML=l[1]+re.htmlPrefilter(a)+l[2],u=l[0];u--;)i=i.lastChild;re.merge(h,i.childNodes),(i=d.firstChild).textContent=""}else h.push(t.createTextNode(a));for(d.textContent="",g=0;a=h[g++];)if(r&&re.inArray(a,r)>-1)o&&o.push(a);else if(c=re.contains(a.ownerDocument,a),i=p(d.appendChild(a),"script"),c&&f(i),n)for(u=0;a=i[u++];)Le.test(a.type||"")&&n.push(a);return d}function g(){return!0}function m(){return!1}function b(){try{return Y.activeElement}catch(e){}}function v(e,t,n,r,o,a){var i,s;if("object"==typeof t){for(s in"string"!=typeof n&&(r=r||n,n=void 0),t)v(e,s,n,r,t[s],a);return e}if(null==r&&null==o?(o=n,r=n=void 0):null==o&&("string"==typeof n?(o=r,r=void 0):(o=r,r=n,n=void 0)),!1===o)o=m;else if(!o)return e;return 1===a&&(i=o,o=function(e){return re().off(e),i.apply(this,arguments)},o.guid=i.guid||(i.guid=re.guid++)),e.each((function(){re.event.add(this,t,o,r,n)}))}function y(e,t){return re.nodeName(e,"table")&&re.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function A(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function x(e){var t=ze.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function E(e,t){var n,r,o,a,i,s,l,c;if(1===t.nodeType){if(Ce.hasData(e)&&(a=Ce.access(e),i=Ce.set(t,a),c=a.events))for(o in delete i.handle,i.events={},c)for(n=0,r=c[o].length;r>n;n++)re.event.add(t,o,c[o][n]);we.hasData(e)&&(s=we.access(e),l=re.extend({},s),we.set(t,l))}}function C(e,t){var n=t.nodeName.toLowerCase();"input"===n&&Oe.test(e.type)?t.checked=e.checked:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}function w(e,t,n,r){t=X.apply([],t);var o,a,i,s,l,c,u=0,d=e.length,f=d-1,g=t[0],m=re.isFunction(g);if(m||d>1&&"string"==typeof g&&!te.checkClone&&qe.test(g))return e.each((function(o){var a=e.eq(o);m&&(t[0]=g.call(this,o,a.html())),w(a,t,n,r)}));if(d&&(a=(o=h(t,e[0].ownerDocument,!1,e,r)).firstChild,1===o.childNodes.length&&(o=a),a||r)){for(s=(i=re.map(p(o,"script"),A)).length;d>u;u++)l=o,u!==f&&(l=re.clone(l,!0,!0),s&&re.merge(i,p(l,"script"))),n.call(e[u],l,u);if(s)for(c=i[i.length-1].ownerDocument,re.map(i,x),u=0;s>u;u++)l=i[u],Le.test(l.type||"")&&!Ce.access(l,"globalEval")&&re.contains(c,l)&&(l.src?re._evalUrl&&re._evalUrl(l.src):re.globalEval(l.textContent.replace(We,"")))}return e}function _(e,t,n){for(var r,o=t?re.filter(t,e):e,a=0;null!=(r=o[a]);a++)n||1!==r.nodeType||re.cleanData(p(r)),r.parentNode&&(n&&re.contains(r.ownerDocument,r)&&f(p(r,"script")),r.parentNode.removeChild(r));return e}function T(e,t){var n=re(t.createElement(e)).appendTo(t.body),r=re.css(n[0],"display");return n.detach(),r}function k(e){var t=Y,n=Ge[e];return n||("none"!==(n=T(e,t))&&n||((t=(Ue=(Ue||re("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement))[0].contentDocument).write(),t.close(),n=T(e,t),Ue.detach()),Ge[e]=n),n}function S(e,t,n){var r,o,a,i,s=e.style;return""!==(i=(n=n||$e(e))?n.getPropertyValue(t)||n[t]:void 0)&&void 0!==i||re.contains(e.ownerDocument,e)||(i=re.style(e,t)),n&&!te.pixelMarginRight()&&Ye.test(i)&&Ve.test(t)&&(r=s.width,o=s.minWidth,a=s.maxWidth,s.minWidth=s.maxWidth=s.width=i,i=n.width,s.width=r,s.minWidth=o,s.maxWidth=a),void 0!==i?i+"":i}function R(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function N(e){if(e in tt)return e;for(var t=e[0].toUpperCase()+e.slice(1),n=et.length;n--;)if((e=et[n]+t)in tt)return e}function O(e,t,n){var r=Se.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function I(e,t,n,r,o){for(var a=n===(r?"border":"content")?4:"width"===t?1:0,i=0;4>a;a+=2)"margin"===n&&(i+=re.css(e,n+Re[a],!0,o)),r?("content"===n&&(i-=re.css(e,"padding"+Re[a],!0,o)),"margin"!==n&&(i-=re.css(e,"border"+Re[a]+"Width",!0,o))):(i+=re.css(e,"padding"+Re[a],!0,o),"padding"!==n&&(i+=re.css(e,"border"+Re[a]+"Width",!0,o)));return i}function L(e,t,n){var r=!0,o="width"===t?e.offsetWidth:e.offsetHeight,a=$e(e),i="border-box"===re.css(e,"boxSizing",!1,a);if(0>=o||null==o){if((0>(o=S(e,t,a))||null==o)&&(o=e.style[t]),Ye.test(o))return o;r=i&&(te.boxSizingReliable()||o===e.style[t]),o=parseFloat(o)||0}return o+I(e,t,n||(i?"border":"content"),r,a)+"px"}function M(e,t){for(var n,r,o,a=[],i=0,s=e.length;s>i;i++)(r=e[i]).style&&(a[i]=Ce.get(r,"olddisplay"),n=r.style.display,t?(a[i]||"none"!==n||(r.style.display=""),""===r.style.display&&Ne(r)&&(a[i]=Ce.access(r,"olddisplay",k(r.nodeName)))):(o=Ne(r),"none"===n&&o||Ce.set(r,"olddisplay",o?n:re.css(r,"display"))));for(i=0;s>i;i++)(r=e[i]).style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?a[i]||"":"none"));return e}function F(e,t,n,r,o){return new F.prototype.init(e,t,n,r,o)}function B(){return n.setTimeout((function(){nt=void 0})),nt=re.now()}function D(e,t){var n,r=0,o={height:e};for(t=t?1:0;4>r;r+=2-t)o["margin"+(n=Re[r])]=o["padding"+n]=e;return t&&(o.opacity=o.width=e),o}function P(e,t,n){for(var r,o=(j.tweeners[t]||[]).concat(j.tweeners["*"]),a=0,i=o.length;i>a;a++)if(r=o[a].call(n,t,e))return r}function j(e,t,n){var r,o,a=0,i=j.prefilters.length,s=re.Deferred().always((function(){delete l.elem})),l=function(){if(o)return!1;for(var t=nt||B(),n=Math.max(0,c.startTime+c.duration-t),r=1-(n/c.duration||0),a=0,i=c.tweens.length;i>a;a++)c.tweens[a].run(r);return s.notifyWith(e,[c,r,n]),1>r&&i?n:(s.resolveWith(e,[c]),!1)},c=s.promise({elem:e,props:re.extend({},t),opts:re.extend(!0,{specialEasing:{},easing:re.easing._default},n),originalProperties:t,originalOptions:n,startTime:nt||B(),duration:n.duration,tweens:[],createTween:function(t,n){var r=re.Tween(e,c.opts,t,n,c.opts.specialEasing[t]||c.opts.easing);return c.tweens.push(r),r},stop:function(t){var n=0,r=t?c.tweens.length:0;if(o)return this;for(o=!0;r>n;n++)c.tweens[n].run(1);return t?(s.notifyWith(e,[c,1,0]),s.resolveWith(e,[c,t])):s.rejectWith(e,[c,t]),this}}),u=c.props;for(function(e,t){var n,r,o,a,i;for(n in e)if(o=t[r=re.camelCase(n)],a=e[n],re.isArray(a)&&(o=a[1],a=e[n]=a[0]),n!==r&&(e[r]=a,delete e[n]),(i=re.cssHooks[r])&&"expand"in i)for(n in a=i.expand(a),delete e[r],a)n in e||(e[n]=a[n],t[n]=o);else t[r]=o}(u,c.opts.specialEasing);i>a;a++)if(r=j.prefilters[a].call(c,e,u,c.opts))return re.isFunction(r.stop)&&(re._queueHooks(c.elem,c.opts.queue).stop=re.proxy(r.stop,r)),r;return re.map(u,P,c),re.isFunction(c.opts.start)&&c.opts.start.call(e,c),re.fx.timer(re.extend(l,{elem:e,anim:c,queue:c.opts.queue})),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always)}function H(e){return e.getAttribute&&e.getAttribute("class")||""}function q(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,o=0,a=t.toLowerCase().match(Ae)||[];if(re.isFunction(n))for(;r=a[o++];)"+"===r[0]?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function z(e,t,n,r){function o(s){var l;return a[s]=!0,re.each(e[s]||[],(function(e,s){var c=s(t,n,r);return"string"!=typeof c||i||a[c]?i?!(l=c):void 0:(t.dataTypes.unshift(c),o(c),!1)})),l}var a={},i=e===Ct;return o(t.dataTypes[0])||!a["*"]&&o("*")}function W(e,t){var n,r,o=re.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((o[n]?e:r||(r={}))[n]=t[n]);return r&&re.extend(!0,e,r),e}function U(e,t,n,r){var o;if(re.isArray(t))re.each(t,(function(t,o){n||kt.test(e)?r(e,o):U(e+"["+("object"==typeof o&&null!=o?t:"")+"]",o,n,r)}));else if(n||"object"!==re.type(t))r(e,t);else for(o in t)U(e+"["+o+"]",t[o],n,r)}function G(e){return re.isWindow(e)?e:9===e.nodeType&&e.defaultView}var V=[],Y=n.document,$=V.slice,X=V.concat,J=V.push,K=V.indexOf,Z={},Q=Z.toString,ee=Z.hasOwnProperty,te={},ne="2.2.4",re=function(e,t){return new re.fn.init(e,t)},oe=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ae=/^-ms-/,ie=/-([\da-z])/gi,se=function(e,t){return t.toUpperCase()};re.fn=re.prototype={jquery:ne,constructor:re,selector:"",length:0,toArray:function(){return $.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:$.call(this)},pushStack:function(e){var t=re.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e){return re.each(this,e)},map:function(e){return this.pushStack(re.map(this,(function(t,n){return e.call(t,n,t)})))},slice:function(){return this.pushStack($.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:J,sort:V.sort,splice:V.splice},re.extend=re.fn.extend=function(){var e,t,n,r,o,a,i=arguments[0]||{},s=1,l=arguments.length,c=!1;for("boolean"==typeof i&&(c=i,i=arguments[s]||{},s++),"object"==typeof i||re.isFunction(i)||(i={}),s===l&&(i=this,s--);l>s;s++)if(null!=(e=arguments[s]))for(t in e)n=i[t],i!==(r=e[t])&&(c&&r&&(re.isPlainObject(r)||(o=re.isArray(r)))?(o?(o=!1,a=n&&re.isArray(n)?n:[]):a=n&&re.isPlainObject(n)?n:{},i[t]=re.extend(c,a,r)):void 0!==r&&(i[t]=r));return i},re.extend({expando:"jQuery"+(ne+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===re.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=e&&e.toString();return!re.isArray(e)&&t-parseFloat(t)+1>=0},isPlainObject:function(e){var t;if("object"!==re.type(e)||e.nodeType||re.isWindow(e))return!1;if(e.constructor&&!ee.call(e,"constructor")&&!ee.call(e.constructor.prototype||{},"isPrototypeOf"))return!1;for(t in e);return void 0===t||ee.call(e,t)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?Z[Q.call(e)]||"object":typeof e},globalEval:function(e){var t,n=eval;(e=re.trim(e))&&(1===e.indexOf("use strict")?((t=Y.createElement("script")).text=e,Y.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(ae,"ms-").replace(ie,se)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var n,r=0;if(a(e))for(n=e.length;n>r&&!1!==t.call(e[r],r,e[r]);r++);else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},trim:function(e){return null==e?"":(e+"").replace(oe,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(a(Object(e))?re.merge(n,"string"==typeof e?[e]:e):J.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:K.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,o=e.length;n>r;r++)e[o++]=t[r];return e.length=o,e},grep:function(e,t,n){for(var r=[],o=0,a=e.length,i=!n;a>o;o++)!t(e[o],o)!==i&&r.push(e[o]);return r},map:function(e,t,n){var r,o,i=0,s=[];if(a(e))for(r=e.length;r>i;i++)null!=(o=t(e[i],i,n))&&s.push(o);else for(i in e)null!=(o=t(e[i],i,n))&&s.push(o);return X.apply([],s)},guid:1,proxy:function(e,t){var n,r,o;return"string"==typeof t&&(n=e[t],t=e,e=n),re.isFunction(e)?(r=$.call(arguments,2),o=function(){return e.apply(t||this,r.concat($.call(arguments)))},o.guid=e.guid=e.guid||re.guid++,o):void 0},now:Date.now,support:te}),"function"==typeof Symbol&&(re.fn[Symbol.iterator]=V[Symbol.iterator]),re.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(e,t){Z["[object "+t+"]"]=t.toLowerCase()}));var le=function(e){function t(e,t,n,r){var o,a,i,s,l,c,d,f,h=t&&t.ownerDocument,g=t?t.nodeType:9;if(n=n||[],"string"!=typeof e||!e||1!==g&&9!==g&&11!==g)return n;if(!r&&((t?t.ownerDocument||t:H)!==I&&O(t),t=t||I,M)){if(11!==g&&(c=be.exec(e)))if(o=c[1]){if(9===g){if(!(i=t.getElementById(o)))return n;if(i.id===o)return n.push(i),n}else if(h&&(i=h.getElementById(o))&&P(t,i)&&i.id===o)return n.push(i),n}else{if(c[2])return Z.apply(n,t.getElementsByTagName(e)),n;if((o=c[3])&&x.getElementsByClassName&&t.getElementsByClassName)return Z.apply(n,t.getElementsByClassName(o)),n}if(x.qsa&&!G[e+" "]&&(!F||!F.test(e))){if(1!==g)h=t,f=e;else if("object"!==t.nodeName.toLowerCase()){for((s=t.getAttribute("id"))?s=s.replace(ye,"\\$&"):t.setAttribute("id",s=j),a=(d=_(e)).length,l=pe.test(s)?"#"+s:"[id='"+s+"']";a--;)d[a]=l+" "+p(d[a]);f=d.join(","),h=ve.test(e)&&u(t.parentNode)||t}if(f)try{return Z.apply(n,h.querySelectorAll(f)),n}catch(e){}finally{s===j&&t.removeAttribute("id")}}}return k(e.replace(se,"$1"),t,n,r)}function n(){var e=[];return function t(n,r){return e.push(n+" ")>E.cacheLength&&delete t[e.shift()],t[n+" "]=r}}function r(e){return e[j]=!0,e}function o(e){var t=I.createElement("div");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function a(e,t){for(var n=e.split("|"),r=n.length;r--;)E.attrHandle[n[r]]=t}function i(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||Y)-(~e.sourceIndex||Y);if(r)return r;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function s(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function l(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function c(e){return r((function(t){return t=+t,r((function(n,r){for(var o,a=e([],n.length,t),i=a.length;i--;)n[o=a[i]]&&(n[o]=!(r[o]=n[o]))}))}))}function u(e){return e&&void 0!==e.getElementsByTagName&&e}function d(){}function p(e){for(var t=0,n=e.length,r="";n>t;t++)r+=e[t].value;return r}function f(e,t,n){var r=t.dir,o=n&&"parentNode"===r,a=z++;return t.first?function(t,n,a){for(;t=t[r];)if(1===t.nodeType||o)return e(t,n,a)}:function(t,n,i){var s,l,c,u=[q,a];if(i){for(;t=t[r];)if((1===t.nodeType||o)&&e(t,n,i))return!0}else for(;t=t[r];)if(1===t.nodeType||o){if((s=(l=(c=t[j]||(t[j]={}))[t.uniqueID]||(c[t.uniqueID]={}))[r])&&s[0]===q&&s[1]===a)return u[2]=s[2];if(l[r]=u,u[2]=e(t,n,i))return!0}}}function h(e){return e.length>1?function(t,n,r){for(var o=e.length;o--;)if(!e[o](t,n,r))return!1;return!0}:e[0]}function g(e,n,r){for(var o=0,a=n.length;a>o;o++)t(e,n[o],r);return r}function m(e,t,n,r,o){for(var a,i=[],s=0,l=e.length,c=null!=t;l>s;s++)(a=e[s])&&(n&&!n(a,r,o)||(i.push(a),c&&t.push(s)));return i}function b(e,t,n,o,a,i){return o&&!o[j]&&(o=b(o)),a&&!a[j]&&(a=b(a,i)),r((function(r,i,s,l){var c,u,d,p=[],f=[],h=i.length,b=r||g(t||"*",s.nodeType?[s]:s,[]),v=!e||!r&&t?b:m(b,p,e,s,l),y=n?a||(r?e:h||o)?[]:i:v;if(n&&n(v,y,s,l),o)for(c=m(y,f),o(c,[],s,l),u=c.length;u--;)(d=c[u])&&(y[f[u]]=!(v[f[u]]=d));if(r){if(a||e){if(a){for(c=[],u=y.length;u--;)(d=y[u])&&c.push(v[u]=d);a(null,y=[],c,l)}for(u=y.length;u--;)(d=y[u])&&(c=a?ee(r,d):p[u])>-1&&(r[c]=!(i[c]=d))}}else y=m(y===i?y.splice(h,y.length):y),a?a(null,i,y,l):Z.apply(i,y)}))}function v(e){for(var t,n,r,o=e.length,a=E.relative[e[0].type],i=a||E.relative[" "],s=a?1:0,l=f((function(e){return e===t}),i,!0),c=f((function(e){return ee(t,e)>-1}),i,!0),u=[function(e,n,r){var o=!a&&(r||n!==S)||((t=n).nodeType?l(e,n,r):c(e,n,r));return t=null,o}];o>s;s++)if(n=E.relative[e[s].type])u=[f(h(u),n)];else{if((n=E.filter[e[s].type].apply(null,e[s].matches))[j]){for(r=++s;o>r&&!E.relative[e[r].type];r++);return b(s>1&&h(u),s>1&&p(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(se,"$1"),n,r>s&&v(e.slice(s,r)),o>r&&v(e=e.slice(r)),o>r&&p(e))}u.push(n)}return h(u)}function y(e,n){var o=n.length>0,a=e.length>0,i=function(r,i,s,l,c){var u,d,p,f=0,h="0",g=r&&[],b=[],v=S,y=r||a&&E.find.TAG("*",c),A=q+=null==v?1:Math.random()||.1,x=y.length;for(c&&(S=i===I||i||c);h!==x&&null!=(u=y[h]);h++){if(a&&u){for(d=0,i||u.ownerDocument===I||(O(u),s=!M);p=e[d++];)if(p(u,i||I,s)){l.push(u);break}c&&(q=A)}o&&((u=!p&&u)&&f--,r&&g.push(u))}if(f+=h,o&&h!==f){for(d=0;p=n[d++];)p(g,b,i,s);if(r){if(f>0)for(;h--;)g[h]||b[h]||(b[h]=J.call(l));b=m(b)}Z.apply(l,b),c&&!r&&b.length>0&&f+n.length>1&&t.uniqueSort(l)}return c&&(q=A,S=v),g};return o?r(i):i}var A,x,E,C,w,_,T,k,S,R,N,O,I,L,M,F,B,D,P,j="sizzle"+1*new Date,H=e.document,q=0,z=0,W=n(),U=n(),G=n(),V=function(e,t){return e===t&&(N=!0),0},Y=1<<31,$={}.hasOwnProperty,X=[],J=X.pop,K=X.push,Z=X.push,Q=X.slice,ee=function(e,t){for(var n=0,r=e.length;r>n;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",re="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",oe="\\["+ne+"*("+re+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+re+"))|)"+ne+"*\\]",ae=":("+re+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+oe+")*)|.*)\\)|)",ie=new RegExp(ne+"+","g"),se=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),le=new RegExp("^"+ne+"*,"+ne+"*"),ce=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),ue=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),de=new RegExp(ae),pe=new RegExp("^"+re+"$"),fe={ID:new RegExp("^#("+re+")"),CLASS:new RegExp("^\\.("+re+")"),TAG:new RegExp("^("+re+"|[*])"),ATTR:new RegExp("^"+oe),PSEUDO:new RegExp("^"+ae),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},he=/^(?:input|select|textarea|button)$/i,ge=/^h\d$/i,me=/^[^{]+\{\s*\[native \w/,be=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ve=/[+~]/,ye=/'|\\/g,Ae=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),xe=function(e,t,n){var r="0x"+t-65536;return r!=r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},Ee=function(){O()};try{Z.apply(X=Q.call(H.childNodes),H.childNodes),X[H.childNodes.length].nodeType}catch(e){Z={apply:X.length?function(e,t){K.apply(e,Q.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}for(A in x=t.support={},w=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},O=t.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:H;return r!==I&&9===r.nodeType&&r.documentElement?(L=(I=r).documentElement,M=!w(I),(n=I.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",Ee,!1):n.attachEvent&&n.attachEvent("onunload",Ee)),x.attributes=o((function(e){return e.className="i",!e.getAttribute("className")})),x.getElementsByTagName=o((function(e){return e.appendChild(I.createComment("")),!e.getElementsByTagName("*").length})),x.getElementsByClassName=me.test(I.getElementsByClassName),x.getById=o((function(e){return L.appendChild(e).id=j,!I.getElementsByName||!I.getElementsByName(j).length})),x.getById?(E.find.ID=function(e,t){if(void 0!==t.getElementById&&M){var n=t.getElementById(e);return n?[n]:[]}},E.filter.ID=function(e){var t=e.replace(Ae,xe);return function(e){return e.getAttribute("id")===t}}):(delete E.find.ID,E.filter.ID=function(e){var t=e.replace(Ae,xe);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}}),E.find.TAG=x.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):x.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],o=0,a=t.getElementsByTagName(e);if("*"===e){for(;n=a[o++];)1===n.nodeType&&r.push(n);return r}return a},E.find.CLASS=x.getElementsByClassName&&function(e,t){return void 0!==t.getElementsByClassName&&M?t.getElementsByClassName(e):void 0},B=[],F=[],(x.qsa=me.test(I.querySelectorAll))&&(o((function(e){L.appendChild(e).innerHTML="<a id='"+j+"'></a><select id='"+j+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&F.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||F.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+j+"-]").length||F.push("~="),e.querySelectorAll(":checked").length||F.push(":checked"),e.querySelectorAll("a#"+j+"+*").length||F.push(".#.+[+~]")})),o((function(e){var t=I.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&F.push("name"+ne+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||F.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),F.push(",.*:")}))),(x.matchesSelector=me.test(D=L.matches||L.webkitMatchesSelector||L.mozMatchesSelector||L.oMatchesSelector||L.msMatchesSelector))&&o((function(e){x.disconnectedMatch=D.call(e,"div"),D.call(e,"[s!='']:x"),B.push("!=",ae)})),F=F.length&&new RegExp(F.join("|")),B=B.length&&new RegExp(B.join("|")),t=me.test(L.compareDocumentPosition),P=t||me.test(L.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},V=t?function(e,t){if(e===t)return N=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!x.sortDetached&&t.compareDocumentPosition(e)===n?e===I||e.ownerDocument===H&&P(H,e)?-1:t===I||t.ownerDocument===H&&P(H,t)?1:R?ee(R,e)-ee(R,t):0:4&n?-1:1)}:function(e,t){if(e===t)return N=!0,0;var n,r=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(!o||!a)return e===I?-1:t===I?1:o?-1:a?1:R?ee(R,e)-ee(R,t):0;if(o===a)return i(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)l.unshift(n);for(;s[r]===l[r];)r++;return r?i(s[r],l[r]):s[r]===H?-1:l[r]===H?1:0},I):I},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==I&&O(e),n=n.replace(ue,"='$1']"),x.matchesSelector&&M&&!G[n+" "]&&(!B||!B.test(n))&&(!F||!F.test(n)))try{var r=D.call(e,n);if(r||x.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(e){}return t(n,I,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==I&&O(e),P(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==I&&O(e);var n=E.attrHandle[t.toLowerCase()],r=n&&$.call(E.attrHandle,t.toLowerCase())?n(e,t,!M):void 0;return void 0!==r?r:x.attributes||!M?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],r=0,o=0;if(N=!x.detectDuplicates,R=!x.sortStable&&e.slice(0),e.sort(V),N){for(;t=e[o++];)t===e[o]&&(r=n.push(o));for(;r--;)e.splice(n[r],1)}return R=null,e},C=t.getText=function(e){var t,n="",r=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=C(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[r++];)n+=C(t);return n},E=t.selectors={cacheLength:50,createPseudo:r,match:fe,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(Ae,xe),e[3]=(e[3]||e[4]||e[5]||"").replace(Ae,xe),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return fe.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&de.test(n)&&(t=_(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(Ae,xe).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=W[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&W(e,(function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")}))},ATTR:function(e,n,r){return function(o){var a=t.attr(o,e);return null==a?"!="===n:!n||(a+="","="===n?a===r:"!="===n?a!==r:"^="===n?r&&0===a.indexOf(r):"*="===n?r&&a.indexOf(r)>-1:"$="===n?r&&a.slice(-r.length)===r:"~="===n?(" "+a.replace(ie," ")+" ").indexOf(r)>-1:"|="===n&&(a===r||a.slice(0,r.length+1)===r+"-"))}},CHILD:function(e,t,n,r,o){var a="nth"!==e.slice(0,3),i="last"!==e.slice(-4),s="of-type"===t;return 1===r&&0===o?function(e){return!!e.parentNode}:function(t,n,l){var c,u,d,p,f,h,g=a!==i?"nextSibling":"previousSibling",m=t.parentNode,b=s&&t.nodeName.toLowerCase(),v=!l&&!s,y=!1;if(m){if(a){for(;g;){for(p=t;p=p[g];)if(s?p.nodeName.toLowerCase()===b:1===p.nodeType)return!1;h=g="only"===e&&!h&&"nextSibling"}return!0}if(h=[i?m.firstChild:m.lastChild],i&&v){for(y=(f=(c=(u=(d=(p=m)[j]||(p[j]={}))[p.uniqueID]||(d[p.uniqueID]={}))[e]||[])[0]===q&&c[1])&&c[2],p=f&&m.childNodes[f];p=++f&&p&&p[g]||(y=f=0)||h.pop();)if(1===p.nodeType&&++y&&p===t){u[e]=[q,f,y];break}}else if(v&&(y=f=(c=(u=(d=(p=t)[j]||(p[j]={}))[p.uniqueID]||(d[p.uniqueID]={}))[e]||[])[0]===q&&c[1]),!1===y)for(;(p=++f&&p&&p[g]||(y=f=0)||h.pop())&&((s?p.nodeName.toLowerCase()!==b:1!==p.nodeType)||!++y||(v&&((u=(d=p[j]||(p[j]={}))[p.uniqueID]||(d[p.uniqueID]={}))[e]=[q,y]),p!==t)););return(y-=o)===r||y%r==0&&y/r>=0}}},PSEUDO:function(e,n){var o,a=E.pseudos[e]||E.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return a[j]?a(n):a.length>1?(o=[e,e,"",n],E.setFilters.hasOwnProperty(e.toLowerCase())?r((function(e,t){for(var r,o=a(e,n),i=o.length;i--;)e[r=ee(e,o[i])]=!(t[r]=o[i])})):function(e){return a(e,0,o)}):a}},pseudos:{not:r((function(e){var t=[],n=[],o=T(e.replace(se,"$1"));return o[j]?r((function(e,t,n,r){for(var a,i=o(e,null,r,[]),s=e.length;s--;)(a=i[s])&&(e[s]=!(t[s]=a))})):function(e,r,a){return t[0]=e,o(t,null,a,n),t[0]=null,!n.pop()}})),has:r((function(e){return function(n){return t(e,n).length>0}})),contains:r((function(e){return e=e.replace(Ae,xe),function(t){return(t.textContent||t.innerText||C(t)).indexOf(e)>-1}})),lang:r((function(e){return pe.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(Ae,xe).toLowerCase(),function(t){var n;do{if(n=M?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}})),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===L},focus:function(e){return e===I.activeElement&&(!I.hasFocus||I.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return!1===e.disabled},disabled:function(e){return!0===e.disabled},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!E.pseudos.empty(e)},header:function(e){return ge.test(e.nodeName)},input:function(e){return he.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:c((function(){return[0]})),last:c((function(e,t){return[t-1]})),eq:c((function(e,t,n){return[0>n?n+t:n]})),even:c((function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e})),odd:c((function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e})),lt:c((function(e,t,n){for(var r=0>n?n+t:n;--r>=0;)e.push(r);return e})),gt:c((function(e,t,n){for(var r=0>n?n+t:n;++r<t;)e.push(r);return e}))}},E.pseudos.nth=E.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})E.pseudos[A]=s(A);for(A in{submit:!0,reset:!0})E.pseudos[A]=l(A);return d.prototype=E.filters=E.pseudos,E.setFilters=new d,_=t.tokenize=function(e,n){var r,o,a,i,s,l,c,u=U[e+" "];if(u)return n?0:u.slice(0);for(s=e,l=[],c=E.preFilter;s;){for(i in r&&!(o=le.exec(s))||(o&&(s=s.slice(o[0].length)||s),l.push(a=[])),r=!1,(o=ce.exec(s))&&(r=o.shift(),a.push({value:r,type:o[0].replace(se," ")}),s=s.slice(r.length)),E.filter)!(o=fe[i].exec(s))||c[i]&&!(o=c[i](o))||(r=o.shift(),a.push({value:r,type:i,matches:o}),s=s.slice(r.length));if(!r)break}return n?s.length:s?t.error(e):U(e,l).slice(0)},T=t.compile=function(e,t){var n,r=[],o=[],a=G[e+" "];if(!a){for(t||(t=_(e)),n=t.length;n--;)(a=v(t[n]))[j]?r.push(a):o.push(a);(a=G(e,y(o,r))).selector=e}return a},k=t.select=function(e,t,n,r){var o,a,i,s,l,c="function"==typeof e&&e,d=!r&&_(e=c.selector||e);if(n=n||[],1===d.length){if((a=d[0]=d[0].slice(0)).length>2&&"ID"===(i=a[0]).type&&x.getById&&9===t.nodeType&&M&&E.relative[a[1].type]){if(!(t=(E.find.ID(i.matches[0].replace(Ae,xe),t)||[])[0]))return n;c&&(t=t.parentNode),e=e.slice(a.shift().value.length)}for(o=fe.needsContext.test(e)?0:a.length;o--&&(i=a[o],!E.relative[s=i.type]);)if((l=E.find[s])&&(r=l(i.matches[0].replace(Ae,xe),ve.test(a[0].type)&&u(t.parentNode)||t))){if(a.splice(o,1),!(e=r.length&&p(a)))return Z.apply(n,r),n;break}}return(c||T(e,d))(r,t,!M,n,!t||ve.test(e)&&u(t.parentNode)||t),n},x.sortStable=j.split("").sort(V).join("")===j,x.detectDuplicates=!!N,O(),x.sortDetached=o((function(e){return 1&e.compareDocumentPosition(I.createElement("div"))})),o((function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")}))||a("type|href|height|width",(function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)})),x.attributes&&o((function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")}))||a("value",(function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue})),o((function(e){return null==e.getAttribute("disabled")}))||a(te,(function(e,t,n){var r;return n?void 0:!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null})),t}(n);re.find=le,re.expr=le.selectors,re.expr[":"]=re.expr.pseudos,re.uniqueSort=re.unique=le.uniqueSort,re.text=le.getText,re.isXMLDoc=le.isXML,re.contains=le.contains;var ce=function(e,t,n){for(var r=[],o=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&re(e).is(n))break;r.push(e)}return r},ue=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},de=re.expr.match.needsContext,pe=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,fe=/^.[^:#\[\.,]*$/;re.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?re.find.matchesSelector(r,e)?[r]:[]:re.find.matches(e,re.grep(t,(function(e){return 1===e.nodeType})))},re.fn.extend({find:function(e){var t,n=this.length,r=[],o=this;if("string"!=typeof e)return this.pushStack(re(e).filter((function(){for(t=0;n>t;t++)if(re.contains(o[t],this))return!0})));for(t=0;n>t;t++)re.find(e,o[t],r);return(r=this.pushStack(n>1?re.unique(r):r)).selector=this.selector?this.selector+" "+e:e,r},filter:function(e){return this.pushStack(i(this,e||[],!1))},not:function(e){return this.pushStack(i(this,e||[],!0))},is:function(e){return!!i(this,"string"==typeof e&&de.test(e)?re(e):e||[],!1).length}});var he,ge=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,me=re.fn.init=function(e,t,n){var r,o;if(!e)return this;if(n=n||he,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:ge.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof re?t[0]:t,re.merge(this,re.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:Y,!0)),pe.test(r[1])&&re.isPlainObject(t))for(r in t)re.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(o=Y.getElementById(r[2]))&&o.parentNode&&(this.length=1,this[0]=o),this.context=Y,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):re.isFunction(e)?void 0!==n.ready?n.ready(e):e(re):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),re.makeArray(e,this))};me.prototype=re.fn,he=re(Y);var be=/^(?:parents|prev(?:Until|All))/,ve={children:!0,contents:!0,next:!0,prev:!0};re.fn.extend({has:function(e){var t=re(e,this),n=t.length;return this.filter((function(){for(var e=0;n>e;e++)if(re.contains(this,t[e]))return!0}))},closest:function(e,t){for(var n,r=0,o=this.length,a=[],i=de.test(e)||"string"!=typeof e?re(e,t||this.context):0;o>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(i?i.index(n)>-1:1===n.nodeType&&re.find.matchesSelector(n,e))){a.push(n);break}return this.pushStack(a.length>1?re.uniqueSort(a):a)},index:function(e){return e?"string"==typeof e?K.call(re(e),this[0]):K.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(re.uniqueSort(re.merge(this.get(),re(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),re.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return ce(e,"parentNode")},parentsUntil:function(e,t,n){return ce(e,"parentNode",n)},next:function(e){return s(e,"nextSibling")},prev:function(e){return s(e,"previousSibling")},nextAll:function(e){return ce(e,"nextSibling")},prevAll:function(e){return ce(e,"previousSibling")},nextUntil:function(e,t,n){return ce(e,"nextSibling",n)},prevUntil:function(e,t,n){return ce(e,"previousSibling",n)},siblings:function(e){return ue((e.parentNode||{}).firstChild,e)},children:function(e){return ue(e.firstChild)},contents:function(e){return e.contentDocument||re.merge([],e.childNodes)}},(function(e,t){re.fn[e]=function(n,r){var o=re.map(this,t,n);return"Until"!==e.slice(-5)&&(r=n),r&&"string"==typeof r&&(o=re.filter(r,o)),this.length>1&&(ve[e]||re.uniqueSort(o),be.test(e)&&o.reverse()),this.pushStack(o)}}));var ye,Ae=/\S+/g;re.Callbacks=function(e){e="string"==typeof e?function(e){var t={};return re.each(e.match(Ae)||[],(function(e,n){t[n]=!0})),t}(e):re.extend({},e);var t,n,r,o,a=[],i=[],s=-1,l=function(){for(o=e.once,r=t=!0;i.length;s=-1)for(n=i.shift();++s<a.length;)!1===a[s].apply(n[0],n[1])&&e.stopOnFalse&&(s=a.length,n=!1);e.memory||(n=!1),t=!1,o&&(a=n?[]:"")},c={add:function(){return a&&(n&&!t&&(s=a.length-1,i.push(n)),function t(n){re.each(n,(function(n,r){re.isFunction(r)?e.unique&&c.has(r)||a.push(r):r&&r.length&&"string"!==re.type(r)&&t(r)}))}(arguments),n&&!t&&l()),this},remove:function(){return re.each(arguments,(function(e,t){for(var n;(n=re.inArray(t,a,n))>-1;)a.splice(n,1),s>=n&&s--})),this},has:function(e){return e?re.inArray(e,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return o=i=[],a=n="",this},disabled:function(){return!a},lock:function(){return o=i=[],n||(a=n=""),this},locked:function(){return!!o},fireWith:function(e,n){return o||(n=[e,(n=n||[]).slice?n.slice():n],i.push(n),t||l()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},re.extend({Deferred:function(e){var t=[["resolve","done",re.Callbacks("once memory"),"resolved"],["reject","fail",re.Callbacks("once memory"),"rejected"],["notify","progress",re.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},then:function(){var e=arguments;return re.Deferred((function(n){re.each(t,(function(t,a){var i=re.isFunction(e[t])&&e[t];o[a[1]]((function(){var e=i&&i.apply(this,arguments);e&&re.isFunction(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[a[0]+"With"](this===r?n.promise():this,i?[e]:arguments)}))})),e=null})).promise()},promise:function(e){return null!=e?re.extend(e,r):r}},o={};return r.pipe=r.then,re.each(t,(function(e,a){var i=a[2],s=a[3];r[a[1]]=i.add,s&&i.add((function(){n=s}),t[1^e][2].disable,t[2][2].lock),o[a[0]]=function(){return o[a[0]+"With"](this===o?r:this,arguments),this},o[a[0]+"With"]=i.fireWith})),r.promise(o),e&&e.call(o,o),o},when:function(e){var t,n,r,o=0,a=$.call(arguments),i=a.length,s=1!==i||e&&re.isFunction(e.promise)?i:0,l=1===s?e:re.Deferred(),c=function(e,n,r){return function(o){n[e]=this,r[e]=arguments.length>1?$.call(arguments):o,r===t?l.notifyWith(n,r):--s||l.resolveWith(n,r)}};if(i>1)for(t=new Array(i),n=new Array(i),r=new Array(i);i>o;o++)a[o]&&re.isFunction(a[o].promise)?a[o].promise().progress(c(o,n,t)).done(c(o,r,a)).fail(l.reject):--s;return s||l.resolveWith(r,a),l.promise()}}),re.fn.ready=function(e){return re.ready.promise().done(e),this},re.extend({isReady:!1,readyWait:1,holdReady:function(e){e?re.readyWait++:re.ready(!0)},ready:function(e){(!0===e?--re.readyWait:re.isReady)||(re.isReady=!0,!0!==e&&--re.readyWait>0||(ye.resolveWith(Y,[re]),re.fn.triggerHandler&&(re(Y).triggerHandler("ready"),re(Y).off("ready"))))}}),re.ready.promise=function(e){return ye||(ye=re.Deferred(),"complete"===Y.readyState||"loading"!==Y.readyState&&!Y.documentElement.doScroll?n.setTimeout(re.ready):(Y.addEventListener("DOMContentLoaded",l),n.addEventListener("load",l))),ye.promise(e)},re.ready.promise();var xe=function(e,t,n,r,o,a,i){var s=0,l=e.length,c=null==n;if("object"===re.type(n))for(s in o=!0,n)xe(e,t,s,n[s],!0,a,i);else if(void 0!==r&&(o=!0,re.isFunction(r)||(i=!0),c&&(i?(t.call(e,r),t=null):(c=t,t=function(e,t,n){return c.call(re(e),n)})),t))for(;l>s;s++)t(e[s],n,i?r:r.call(e[s],s,t(e[s],n)));return o?e:c?t.call(e):l?t(e[0],n):a},Ee=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};c.uid=1,c.prototype={register:function(e,t){var n=t||{};return e.nodeType?e[this.expando]=n:Object.defineProperty(e,this.expando,{value:n,writable:!0,configurable:!0}),e[this.expando]},cache:function(e){if(!Ee(e))return{};var t=e[this.expando];return t||(t={},Ee(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,o=this.cache(e);if("string"==typeof t)o[t]=n;else for(r in t)o[r]=t[r];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][t]},access:function(e,t,n){var r;return void 0===t||t&&"string"==typeof t&&void 0===n?void 0!==(r=this.get(e,t))?r:this.get(e,re.camelCase(t)):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r,o,a=e[this.expando];if(void 0!==a){if(void 0===t)this.register(e);else{re.isArray(t)?r=t.concat(t.map(re.camelCase)):(o=re.camelCase(t),r=t in a?[t,o]:(r=o)in a?[r]:r.match(Ae)||[]),n=r.length;for(;n--;)delete a[r[n]]}(void 0===t||re.isEmptyObject(a))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!re.isEmptyObject(t)}};var Ce=new c,we=new c,_e=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Te=/[A-Z]/g;re.extend({hasData:function(e){return we.hasData(e)||Ce.hasData(e)},data:function(e,t,n){return we.access(e,t,n)},removeData:function(e,t){we.remove(e,t)},_data:function(e,t,n){return Ce.access(e,t,n)},_removeData:function(e,t){Ce.remove(e,t)}}),re.fn.extend({data:function(e,t){var n,r,o,a=this[0],i=a&&a.attributes;if(void 0===e){if(this.length&&(o=we.get(a),1===a.nodeType&&!Ce.get(a,"hasDataAttrs"))){for(n=i.length;n--;)i[n]&&0===(r=i[n].name).indexOf("data-")&&(r=re.camelCase(r.slice(5)),u(a,r,o[r]));Ce.set(a,"hasDataAttrs",!0)}return o}return"object"==typeof e?this.each((function(){we.set(this,e)})):xe(this,(function(t){var n,r;if(a&&void 0===t){if(void 0!==(n=we.get(a,e)||we.get(a,e.replace(Te,"-$&").toLowerCase())))return n;if(r=re.camelCase(e),void 0!==(n=we.get(a,r)))return n;if(void 0!==(n=u(a,r,void 0)))return n}else r=re.camelCase(e),this.each((function(){var n=we.get(this,r);we.set(this,r,t),e.indexOf("-")>-1&&void 0!==n&&we.set(this,e,t)}))}),null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each((function(){we.remove(this,e)}))}}),re.extend({queue:function(e,t,n){var r;return e?(t=(t||"fx")+"queue",r=Ce.get(e,t),n&&(!r||re.isArray(n)?r=Ce.access(e,t,re.makeArray(n)):r.push(n)),r||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=re.queue(e,t),r=n.length,o=n.shift(),a=re._queueHooks(e,t);"inprogress"===o&&(o=n.shift(),r--),o&&("fx"===t&&n.unshift("inprogress"),delete a.stop,o.call(e,(function(){re.dequeue(e,t)}),a)),!r&&a&&a.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Ce.get(e,n)||Ce.access(e,n,{empty:re.Callbacks("once memory").add((function(){Ce.remove(e,[t+"queue",n])}))})}}),re.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?re.queue(this[0],e):void 0===t?this:this.each((function(){var n=re.queue(this,e,t);re._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&re.dequeue(this,e)}))},dequeue:function(e){return this.each((function(){re.dequeue(this,e)}))},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,o=re.Deferred(),a=this,i=this.length,s=function(){--r||o.resolveWith(a,[a])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";i--;)(n=Ce.get(a[i],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),o.promise(t)}});var ke=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Se=new RegExp("^(?:([+-])=|)("+ke+")([a-z%]*)$","i"),Re=["Top","Right","Bottom","Left"],Ne=function(e,t){return e=t||e,"none"===re.css(e,"display")||!re.contains(e.ownerDocument,e)},Oe=/^(?:checkbox|radio)$/i,Ie=/<([\w:-]+)/,Le=/^$|\/(?:java|ecma)script/i,Me={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Me.optgroup=Me.option,Me.tbody=Me.tfoot=Me.colgroup=Me.caption=Me.thead,Me.th=Me.td;var Fe=/<|&#?\w+;/;!function(){var e=Y.createDocumentFragment().appendChild(Y.createElement("div")),t=Y.createElement("input");t.setAttribute("type","radio"),t.setAttribute("checked","checked"),t.setAttribute("name","t"),e.appendChild(t),te.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",te.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Be=/^key/,De=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Pe=/^([^.]*)(?:\.(.+)|)/;re.event={global:{},add:function(e,t,n,r,o){var a,i,s,l,c,u,d,p,f,h,g,m=Ce.get(e);if(m)for(n.handler&&(n=(a=n).handler,o=a.selector),n.guid||(n.guid=re.guid++),(l=m.events)||(l=m.events={}),(i=m.handle)||(i=m.handle=function(t){return void 0!==re&&re.event.triggered!==t.type?re.event.dispatch.apply(e,arguments):void 0}),c=(t=(t||"").match(Ae)||[""]).length;c--;)f=g=(s=Pe.exec(t[c])||[])[1],h=(s[2]||"").split(".").sort(),f&&(d=re.event.special[f]||{},f=(o?d.delegateType:d.bindType)||f,d=re.event.special[f]||{},u=re.extend({type:f,origType:g,data:r,handler:n,guid:n.guid,selector:o,needsContext:o&&re.expr.match.needsContext.test(o),namespace:h.join(".")},a),(p=l[f])||((p=l[f]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(e,r,h,i)||e.addEventListener&&e.addEventListener(f,i)),d.add&&(d.add.call(e,u),u.handler.guid||(u.handler.guid=n.guid)),o?p.splice(p.delegateCount++,0,u):p.push(u),re.event.global[f]=!0)},remove:function(e,t,n,r,o){var a,i,s,l,c,u,d,p,f,h,g,m=Ce.hasData(e)&&Ce.get(e);if(m&&(l=m.events)){for(c=(t=(t||"").match(Ae)||[""]).length;c--;)if(f=g=(s=Pe.exec(t[c])||[])[1],h=(s[2]||"").split(".").sort(),f){for(d=re.event.special[f]||{},p=l[f=(r?d.delegateType:d.bindType)||f]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=a=p.length;a--;)u=p[a],!o&&g!==u.origType||n&&n.guid!==u.guid||s&&!s.test(u.namespace)||r&&r!==u.selector&&("**"!==r||!u.selector)||(p.splice(a,1),u.selector&&p.delegateCount--,d.remove&&d.remove.call(e,u));i&&!p.length&&(d.teardown&&!1!==d.teardown.call(e,h,m.handle)||re.removeEvent(e,f,m.handle),delete l[f])}else for(f in l)re.event.remove(e,f+t[c],n,r,!0);re.isEmptyObject(l)&&Ce.remove(e,"handle events")}},dispatch:function(e){e=re.event.fix(e);var t,n,r,o,a,i=[],s=$.call(arguments),l=(Ce.get(this,"events")||{})[e.type]||[],c=re.event.special[e.type]||{};if(s[0]=e,e.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,e)){for(i=re.event.handlers.call(this,e,l),t=0;(o=i[t++])&&!e.isPropagationStopped();)for(e.currentTarget=o.elem,n=0;(a=o.handlers[n++])&&!e.isImmediatePropagationStopped();)e.rnamespace&&!e.rnamespace.test(a.namespace)||(e.handleObj=a,e.data=a.data,void 0!==(r=((re.event.special[a.origType]||{}).handle||a.handler).apply(o.elem,s))&&!1===(e.result=r)&&(e.preventDefault(),e.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,r,o,a,i=[],s=t.delegateCount,l=e.target;if(s&&l.nodeType&&("click"!==e.type||isNaN(e.button)||e.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(!0!==l.disabled||"click"!==e.type)){for(r=[],n=0;s>n;n++)void 0===r[o=(a=t[n]).selector+" "]&&(r[o]=a.needsContext?re(o,this).index(l)>-1:re.find(o,this,null,[l]).length),r[o]&&r.push(a);r.length&&i.push({elem:l,handlers:r})}return s<t.length&&i.push({elem:this,handlers:t.slice(s)}),i},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,r,o,a=t.button;return null==e.pageX&&null!=t.clientX&&(r=(n=e.target.ownerDocument||Y).documentElement,o=n.body,e.pageX=t.clientX+(r&&r.scrollLeft||o&&o.scrollLeft||0)-(r&&r.clientLeft||o&&o.clientLeft||0),e.pageY=t.clientY+(r&&r.scrollTop||o&&o.scrollTop||0)-(r&&r.clientTop||o&&o.clientTop||0)),e.which||void 0===a||(e.which=1&a?1:2&a?3:4&a?2:0),e}},fix:function(e){if(e[re.expando])return e;var t,n,r,o=e.type,a=e,i=this.fixHooks[o];for(i||(this.fixHooks[o]=i=De.test(o)?this.mouseHooks:Be.test(o)?this.keyHooks:{}),r=i.props?this.props.concat(i.props):this.props,e=new re.Event(a),t=r.length;t--;)e[n=r[t]]=a[n];return e.target||(e.target=Y),3===e.target.nodeType&&(e.target=e.target.parentNode),i.filter?i.filter(e,a):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==b()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===b()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&re.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return re.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},re.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},re.Event=function(e,t){return this instanceof re.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?g:m):this.type=e,t&&re.extend(this,t),this.timeStamp=e&&e.timeStamp||re.now(),void(this[re.expando]=!0)):new re.Event(e,t)},re.Event.prototype={constructor:re.Event,isDefaultPrevented:m,isPropagationStopped:m,isImmediatePropagationStopped:m,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=g,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=g,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=g,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},re.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(e,t){re.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=e.relatedTarget,o=e.handleObj;return r&&(r===this||re.contains(this,r))||(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}})),re.fn.extend({on:function(e,t,n,r){return v(this,e,t,n,r)},one:function(e,t,n,r){return v(this,e,t,n,r,1)},off:function(e,t,n){var r,o;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,re(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(o in e)this.off(o,t,e[o]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=m),this.each((function(){re.event.remove(this,e,n,t)}))}});var je=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,He=/<script|<style|<link/i,qe=/checked\s*(?:[^=]|=\s*.checked.)/i,ze=/^true\/(.*)/,We=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;re.extend({htmlPrefilter:function(e){return e.replace(je,"<$1></$2>")},clone:function(e,t,n){var r,o,a,i,s=e.cloneNode(!0),l=re.contains(e.ownerDocument,e);if(!(te.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||re.isXMLDoc(e)))for(i=p(s),r=0,o=(a=p(e)).length;o>r;r++)C(a[r],i[r]);if(t)if(n)for(a=a||p(e),i=i||p(s),r=0,o=a.length;o>r;r++)E(a[r],i[r]);else E(e,s);return(i=p(s,"script")).length>0&&f(i,!l&&p(e,"script")),s},cleanData:function(e){for(var t,n,r,o=re.event.special,a=0;void 0!==(n=e[a]);a++)if(Ee(n)){if(t=n[Ce.expando]){if(t.events)for(r in t.events)o[r]?re.event.remove(n,r):re.removeEvent(n,r,t.handle);n[Ce.expando]=void 0}n[we.expando]&&(n[we.expando]=void 0)}}}),re.fn.extend({domManip:w,detach:function(e){return _(this,e,!0)},remove:function(e){return _(this,e)},text:function(e){return xe(this,(function(e){return void 0===e?re.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)}))}),null,e,arguments.length)},append:function(){return w(this,arguments,(function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||y(this,e).appendChild(e)}))},prepend:function(){return w(this,arguments,(function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=y(this,e);t.insertBefore(e,t.firstChild)}}))},before:function(){return w(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this)}))},after:function(){return w(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)}))},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(re.cleanData(p(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map((function(){return re.clone(this,e,t)}))},html:function(e){return xe(this,(function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!He.test(e)&&!Me[(Ie.exec(e)||["",""])[1].toLowerCase()]){e=re.htmlPrefilter(e);try{for(;r>n;n++)1===(t=this[n]||{}).nodeType&&(re.cleanData(p(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)}),null,e,arguments.length)},replaceWith:function(){var e=[];return w(this,arguments,(function(t){var n=this.parentNode;re.inArray(this,e)<0&&(re.cleanData(p(this)),n&&n.replaceChild(t,this))}),e)}}),re.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(e,t){re.fn[e]=function(e){for(var n,r=[],o=re(e),a=o.length-1,i=0;a>=i;i++)n=i===a?this:this.clone(!0),re(o[i])[t](n),J.apply(r,n.get());return this.pushStack(r)}}));var Ue,Ge={HTML:"block",BODY:"block"},Ve=/^margin/,Ye=new RegExp("^("+ke+")(?!px)[a-z%]+$","i"),$e=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=n),t.getComputedStyle(e)},Xe=function(e,t,n,r){var o,a,i={};for(a in t)i[a]=e.style[a],e.style[a]=t[a];for(a in o=n.apply(e,r||[]),t)e.style[a]=i[a];return o},Je=Y.documentElement;!function(){function e(){s.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",s.innerHTML="",Je.appendChild(i);var e=n.getComputedStyle(s);t="1%"!==e.top,a="2px"===e.marginLeft,r="4px"===e.width,s.style.marginRight="50%",o="4px"===e.marginRight,Je.removeChild(i)}var t,r,o,a,i=Y.createElement("div"),s=Y.createElement("div");s.style&&(s.style.backgroundClip="content-box",s.cloneNode(!0).style.backgroundClip="",te.clearCloneStyle="content-box"===s.style.backgroundClip,i.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",i.appendChild(s),re.extend(te,{pixelPosition:function(){return e(),t},boxSizingReliable:function(){return null==r&&e(),r},pixelMarginRight:function(){return null==r&&e(),o},reliableMarginLeft:function(){return null==r&&e(),a},reliableMarginRight:function(){var e,t=s.appendChild(Y.createElement("div"));return t.style.cssText=s.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",t.style.marginRight=t.style.width="0",s.style.width="1px",Je.appendChild(i),e=!parseFloat(n.getComputedStyle(t).marginRight),Je.removeChild(i),s.removeChild(t),e}}))}();var Ke=/^(none|table(?!-c[ea]).+)/,Ze={position:"absolute",visibility:"hidden",display:"block"},Qe={letterSpacing:"0",fontWeight:"400"},et=["Webkit","O","Moz","ms"],tt=Y.createElement("div").style;re.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=S(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,i,s=re.camelCase(t),l=e.style;return t=re.cssProps[s]||(re.cssProps[s]=N(s)||s),i=re.cssHooks[t]||re.cssHooks[s],void 0===n?i&&"get"in i&&void 0!==(o=i.get(e,!1,r))?o:l[t]:("string"==(a=typeof n)&&(o=Se.exec(n))&&o[1]&&(n=d(e,t,o),a="number"),void(null!=n&&n==n&&("number"===a&&(n+=o&&o[3]||(re.cssNumber[s]?"":"px")),te.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),i&&"set"in i&&void 0===(n=i.set(e,n,r))||(l[t]=n))))}},css:function(e,t,n,r){var o,a,i,s=re.camelCase(t);return t=re.cssProps[s]||(re.cssProps[s]=N(s)||s),(i=re.cssHooks[t]||re.cssHooks[s])&&"get"in i&&(o=i.get(e,!0,n)),void 0===o&&(o=S(e,t,r)),"normal"===o&&t in Qe&&(o=Qe[t]),""===n||n?(a=parseFloat(o),!0===n||isFinite(a)?a||0:o):o}}),re.each(["height","width"],(function(e,t){re.cssHooks[t]={get:function(e,n,r){return n?Ke.test(re.css(e,"display"))&&0===e.offsetWidth?Xe(e,Ze,(function(){return L(e,t,r)})):L(e,t,r):void 0},set:function(e,n,r){var o,a=r&&$e(e),i=r&&I(e,t,r,"border-box"===re.css(e,"boxSizing",!1,a),a);return i&&(o=Se.exec(n))&&"px"!==(o[3]||"px")&&(e.style[t]=n,n=re.css(e,t)),O(0,n,i)}}})),re.cssHooks.marginLeft=R(te.reliableMarginLeft,(function(e,t){return t?(parseFloat(S(e,"marginLeft"))||e.getBoundingClientRect().left-Xe(e,{marginLeft:0},(function(){return e.getBoundingClientRect().left})))+"px":void 0})),re.cssHooks.marginRight=R(te.reliableMarginRight,(function(e,t){return t?Xe(e,{display:"inline-block"},S,[e,"marginRight"]):void 0})),re.each({margin:"",padding:"",border:"Width"},(function(e,t){re.cssHooks[e+t]={expand:function(n){for(var r=0,o={},a="string"==typeof n?n.split(" "):[n];4>r;r++)o[e+Re[r]+t]=a[r]||a[r-2]||a[0];return o}},Ve.test(e)||(re.cssHooks[e+t].set=O)})),re.fn.extend({css:function(e,t){return xe(this,(function(e,t,n){var r,o,a={},i=0;if(re.isArray(t)){for(r=$e(e),o=t.length;o>i;i++)a[t[i]]=re.css(e,t[i],!1,r);return a}return void 0!==n?re.style(e,t,n):re.css(e,t)}),e,t,arguments.length>1)},show:function(){return M(this,!0)},hide:function(){return M(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each((function(){Ne(this)?re(this).show():re(this).hide()}))}}),re.Tween=F,F.prototype={constructor:F,init:function(e,t,n,r,o,a){this.elem=e,this.prop=n,this.easing=o||re.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=a||(re.cssNumber[n]?"":"px")},cur:function(){var e=F.propHooks[this.prop];return e&&e.get?e.get(this):F.propHooks._default.get(this)},run:function(e){var t,n=F.propHooks[this.prop];return this.options.duration?this.pos=t=re.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):F.propHooks._default.set(this),this}},F.prototype.init.prototype=F.prototype,F.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=re.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){re.fx.step[e.prop]?re.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[re.cssProps[e.prop]]&&!re.cssHooks[e.prop]?e.elem[e.prop]=e.now:re.style(e.elem,e.prop,e.now+e.unit)}}},F.propHooks.scrollTop=F.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},re.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},re.fx=F.prototype.init,re.fx.step={};var nt,rt,ot=/^(?:toggle|show|hide)$/,at=/queueHooks$/;re.Animation=re.extend(j,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return d(n.elem,e,Se.exec(t),n),n}]},tweener:function(e,t){re.isFunction(e)?(t=e,e=["*"]):e=e.match(Ae);for(var n,r=0,o=e.length;o>r;r++)n=e[r],j.tweeners[n]=j.tweeners[n]||[],j.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,o,a,i,s,l,c,u=this,d={},p=e.style,f=e.nodeType&&Ne(e),h=Ce.get(e,"fxshow");for(r in n.queue||(null==(s=re._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,l=s.empty.fire,s.empty.fire=function(){s.unqueued||l()}),s.unqueued++,u.always((function(){u.always((function(){s.unqueued--,re.queue(e,"fx").length||s.empty.fire()}))}))),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],"inline"===("none"===(c=re.css(e,"display"))?Ce.get(e,"olddisplay")||k(e.nodeName):c)&&"none"===re.css(e,"float")&&(p.display="inline-block")),n.overflow&&(p.overflow="hidden",u.always((function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}))),t)if(o=t[r],ot.exec(o)){if(delete t[r],a=a||"toggle"===o,o===(f?"hide":"show")){if("show"!==o||!h||void 0===h[r])continue;f=!0}d[r]=h&&h[r]||re.style(e,r)}else c=void 0;if(re.isEmptyObject(d))"inline"===("none"===c?k(e.nodeName):c)&&(p.display=c);else for(r in h?"hidden"in h&&(f=h.hidden):h=Ce.access(e,"fxshow",{}),a&&(h.hidden=!f),f?re(e).show():u.done((function(){re(e).hide()})),u.done((function(){var t;for(t in Ce.remove(e,"fxshow"),d)re.style(e,t,d[t])})),d)i=P(f?h[r]:0,r,u),r in h||(h[r]=i.start,f&&(i.end=i.start,i.start="width"===r||"height"===r?1:0))}],prefilter:function(e,t){t?j.prefilters.unshift(e):j.prefilters.push(e)}}),re.speed=function(e,t,n){var r=e&&"object"==typeof e?re.extend({},e):{complete:n||!n&&t||re.isFunction(e)&&e,duration:e,easing:n&&t||t&&!re.isFunction(t)&&t};return r.duration=re.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in re.fx.speeds?re.fx.speeds[r.duration]:re.fx.speeds._default,null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){re.isFunction(r.old)&&r.old.call(this),r.queue&&re.dequeue(this,r.queue)},r},re.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Ne).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var o=re.isEmptyObject(e),a=re.speed(t,n,r),i=function(){var t=j(this,re.extend({},e),a);(o||Ce.get(this,"finish"))&&t.stop(!0)};return i.finish=i,o||!1===a.queue?this.each(i):this.queue(a.queue,i)},stop:function(e,t,n){var r=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&!1!==e&&this.queue(e||"fx",[]),this.each((function(){var t=!0,o=null!=e&&e+"queueHooks",a=re.timers,i=Ce.get(this);if(o)i[o]&&i[o].stop&&r(i[o]);else for(o in i)i[o]&&i[o].stop&&at.test(o)&&r(i[o]);for(o=a.length;o--;)a[o].elem!==this||null!=e&&a[o].queue!==e||(a[o].anim.stop(n),t=!1,a.splice(o,1));!t&&n||re.dequeue(this,e)}))},finish:function(e){return!1!==e&&(e=e||"fx"),this.each((function(){var t,n=Ce.get(this),r=n[e+"queue"],o=n[e+"queueHooks"],a=re.timers,i=r?r.length:0;for(n.finish=!0,re.queue(this,e,[]),o&&o.stop&&o.stop.call(this,!0),t=a.length;t--;)a[t].elem===this&&a[t].queue===e&&(a[t].anim.stop(!0),a.splice(t,1));for(t=0;i>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish}))}}),re.each(["toggle","show","hide"],(function(e,t){var n=re.fn[t];re.fn[t]=function(e,r,o){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(D(t,!0),e,r,o)}})),re.each({slideDown:D("show"),slideUp:D("hide"),slideToggle:D("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(e,t){re.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}})),re.timers=[],re.fx.tick=function(){var e,t=0,n=re.timers;for(nt=re.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||re.fx.stop(),nt=void 0},re.fx.timer=function(e){re.timers.push(e),e()?re.fx.start():re.timers.pop()},re.fx.interval=13,re.fx.start=function(){rt||(rt=n.setInterval(re.fx.tick,re.fx.interval))},re.fx.stop=function(){n.clearInterval(rt),rt=null},re.fx.speeds={slow:600,fast:200,_default:400},re.fn.delay=function(e,t){return e=re.fx&&re.fx.speeds[e]||e,t=t||"fx",this.queue(t,(function(t,r){var o=n.setTimeout(t,e);r.stop=function(){n.clearTimeout(o)}}))},function(){var e=Y.createElement("input"),t=Y.createElement("select"),n=t.appendChild(Y.createElement("option"));e.type="checkbox",te.checkOn=""!==e.value,te.optSelected=n.selected,t.disabled=!0,te.optDisabled=!n.disabled,(e=Y.createElement("input")).value="t",e.type="radio",te.radioValue="t"===e.value}();var it,st=re.expr.attrHandle;re.fn.extend({attr:function(e,t){return xe(this,re.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each((function(){re.removeAttr(this,e)}))}}),re.extend({attr:function(e,t,n){var r,o,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return void 0===e.getAttribute?re.prop(e,t,n):(1===a&&re.isXMLDoc(e)||(t=t.toLowerCase(),o=re.attrHooks[t]||(re.expr.match.bool.test(t)?it:void 0)),void 0!==n?null===n?void re.removeAttr(e,t):o&&"set"in o&&void 0!==(r=o.set(e,n,t))?r:(e.setAttribute(t,n+""),n):o&&"get"in o&&null!==(r=o.get(e,t))?r:null==(r=re.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!te.radioValue&&"radio"===t&&re.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r,o=0,a=t&&t.match(Ae);if(a&&1===e.nodeType)for(;n=a[o++];)r=re.propFix[n]||n,re.expr.match.bool.test(n)&&(e[r]=!1),e.removeAttribute(n)}}),it={set:function(e,t,n){return!1===t?re.removeAttr(e,n):e.setAttribute(n,n),n}},re.each(re.expr.match.bool.source.match(/\w+/g),(function(e,t){var n=st[t]||re.find.attr;st[t]=function(e,t,r){var o,a;return r||(a=st[t],st[t]=o,o=null!=n(e,t,r)?t.toLowerCase():null,st[t]=a),o}}));var lt=/^(?:input|select|textarea|button)$/i,ct=/^(?:a|area)$/i;re.fn.extend({prop:function(e,t){return xe(this,re.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each((function(){delete this[re.propFix[e]||e]}))}}),re.extend({prop:function(e,t,n){var r,o,a=e.nodeType;if(3!==a&&8!==a&&2!==a)return 1===a&&re.isXMLDoc(e)||(t=re.propFix[t]||t,o=re.propHooks[t]),void 0!==n?o&&"set"in o&&void 0!==(r=o.set(e,n,t))?r:e[t]=n:o&&"get"in o&&null!==(r=o.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=re.find.attr(e,"tabindex");return t?parseInt(t,10):lt.test(e.nodeName)||ct.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),te.optSelected||(re.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),re.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){re.propFix[this.toLowerCase()]=this}));var ut=/[\t\r\n\f]/g;re.fn.extend({addClass:function(e){var t,n,r,o,a,i,s,l=0;if(re.isFunction(e))return this.each((function(t){re(this).addClass(e.call(this,t,H(this)))}));if("string"==typeof e&&e)for(t=e.match(Ae)||[];n=this[l++];)if(o=H(n),r=1===n.nodeType&&(" "+o+" ").replace(ut," ")){for(i=0;a=t[i++];)r.indexOf(" "+a+" ")<0&&(r+=a+" ");o!==(s=re.trim(r))&&n.setAttribute("class",s)}return this},removeClass:function(e){var t,n,r,o,a,i,s,l=0;if(re.isFunction(e))return this.each((function(t){re(this).removeClass(e.call(this,t,H(this)))}));if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(Ae)||[];n=this[l++];)if(o=H(n),r=1===n.nodeType&&(" "+o+" ").replace(ut," ")){for(i=0;a=t[i++];)for(;r.indexOf(" "+a+" ")>-1;)r=r.replace(" "+a+" "," ");o!==(s=re.trim(r))&&n.setAttribute("class",s)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):re.isFunction(e)?this.each((function(n){re(this).toggleClass(e.call(this,n,H(this),t),t)})):this.each((function(){var t,r,o,a;if("string"===n)for(r=0,o=re(this),a=e.match(Ae)||[];t=a[r++];)o.hasClass(t)?o.removeClass(t):o.addClass(t);else void 0!==e&&"boolean"!==n||((t=H(this))&&Ce.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===e?"":Ce.get(this,"__className__")||""))}))},hasClass:function(e){var t,n,r=0;for(t=" "+e+" ";n=this[r++];)if(1===n.nodeType&&(" "+H(n)+" ").replace(ut," ").indexOf(t)>-1)return!0;return!1}});var dt=/\r/g,pt=/[\x20\t\r\n\f]+/g;re.fn.extend({val:function(e){var t,n,r,o=this[0];return arguments.length?(r=re.isFunction(e),this.each((function(n){var o;1===this.nodeType&&(null==(o=r?e.call(this,n,re(this).val()):e)?o="":"number"==typeof o?o+="":re.isArray(o)&&(o=re.map(o,(function(e){return null==e?"":e+""}))),(t=re.valHooks[this.type]||re.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&void 0!==t.set(this,o,"value")||(this.value=o))}))):o?(t=re.valHooks[o.type]||re.valHooks[o.nodeName.toLowerCase()])&&"get"in t&&void 0!==(n=t.get(o,"value"))?n:"string"==typeof(n=o.value)?n.replace(dt,""):null==n?"":n:void 0}}),re.extend({valHooks:{option:{get:function(e){var t=re.find.attr(e,"value");return null!=t?t:re.trim(re.text(e)).replace(pt," ")}},select:{get:function(e){for(var t,n,r=e.options,o=e.selectedIndex,a="select-one"===e.type||0>o,i=a?null:[],s=a?o+1:r.length,l=0>o?s:a?o:0;s>l;l++)if(((n=r[l]).selected||l===o)&&(te.optDisabled?!n.disabled:null===n.getAttribute("disabled"))&&(!n.parentNode.disabled||!re.nodeName(n.parentNode,"optgroup"))){if(t=re(n).val(),a)return t;i.push(t)}return i},set:function(e,t){for(var n,r,o=e.options,a=re.makeArray(t),i=o.length;i--;)((r=o[i]).selected=re.inArray(re.valHooks.option.get(r),a)>-1)&&(n=!0);return n||(e.selectedIndex=-1),a}}}}),re.each(["radio","checkbox"],(function(){re.valHooks[this]={set:function(e,t){return re.isArray(t)?e.checked=re.inArray(re(e).val(),t)>-1:void 0}},te.checkOn||(re.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}));var ft=/^(?:focusinfocus|focusoutblur)$/;re.extend(re.event,{trigger:function(e,t,r,o){var a,i,s,l,c,u,d,p=[r||Y],f=ee.call(e,"type")?e.type:e,h=ee.call(e,"namespace")?e.namespace.split("."):[];if(i=s=r=r||Y,3!==r.nodeType&&8!==r.nodeType&&!ft.test(f+re.event.triggered)&&(f.indexOf(".")>-1&&(h=f.split("."),f=h.shift(),h.sort()),c=f.indexOf(":")<0&&"on"+f,(e=e[re.expando]?e:new re.Event(f,"object"==typeof e&&e)).isTrigger=o?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=r),t=null==t?[e]:re.makeArray(t,[e]),d=re.event.special[f]||{},o||!d.trigger||!1!==d.trigger.apply(r,t))){if(!o&&!d.noBubble&&!re.isWindow(r)){for(l=d.delegateType||f,ft.test(l+f)||(i=i.parentNode);i;i=i.parentNode)p.push(i),s=i;s===(r.ownerDocument||Y)&&p.push(s.defaultView||s.parentWindow||n)}for(a=0;(i=p[a++])&&!e.isPropagationStopped();)e.type=a>1?l:d.bindType||f,(u=(Ce.get(i,"events")||{})[e.type]&&Ce.get(i,"handle"))&&u.apply(i,t),(u=c&&i[c])&&u.apply&&Ee(i)&&(e.result=u.apply(i,t),!1===e.result&&e.preventDefault());return e.type=f,o||e.isDefaultPrevented()||d._default&&!1!==d._default.apply(p.pop(),t)||!Ee(r)||c&&re.isFunction(r[f])&&!re.isWindow(r)&&((s=r[c])&&(r[c]=null),re.event.triggered=f,r[f](),re.event.triggered=void 0,s&&(r[c]=s)),e.result}},simulate:function(e,t,n){var r=re.extend(new re.Event,n,{type:e,isSimulated:!0});re.event.trigger(r,null,t)}}),re.fn.extend({trigger:function(e,t){return this.each((function(){re.event.trigger(e,t,this)}))},triggerHandler:function(e,t){var n=this[0];return n?re.event.trigger(e,t,n,!0):void 0}}),re.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),(function(e,t){re.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}})),re.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),te.focusin="onfocusin"in n,te.focusin||re.each({focus:"focusin",blur:"focusout"},(function(e,t){var n=function(e){re.event.simulate(t,e.target,re.event.fix(e))};re.event.special[t]={setup:function(){var r=this.ownerDocument||this,o=Ce.access(r,t);o||r.addEventListener(e,n,!0),Ce.access(r,t,(o||0)+1)},teardown:function(){var r=this.ownerDocument||this,o=Ce.access(r,t)-1;o?Ce.access(r,t,o):(r.removeEventListener(e,n,!0),Ce.remove(r,t))}}}));var ht=n.location,gt=re.now(),mt=/\?/;re.parseJSON=function(e){return JSON.parse(e+"")},re.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new n.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||re.error("Invalid XML: "+e),t};var bt=/#.*$/,vt=/([?&])_=[^&]*/,yt=/^(.*?):[ \t]*([^\r\n]*)$/gm,At=/^(?:GET|HEAD)$/,xt=/^\/\//,Et={},Ct={},wt="*/".concat("*"),_t=Y.createElement("a");_t.href=ht.href,re.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ht.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(ht.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":wt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":re.parseJSON,"text xml":re.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?W(W(e,re.ajaxSettings),t):W(re.ajaxSettings,e)},ajaxPrefilter:q(Et),ajaxTransport:q(Ct),ajax:function(e,t){function r(e,t,r,s){var c,d,v,y,x,C=t;2!==A&&(A=2,l&&n.clearTimeout(l),o=void 0,i=s||"",E.readyState=e>0?4:0,c=e>=200&&300>e||304===e,r&&(y=function(e,t,n){for(var r,o,a,i,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(o in s)if(s[o]&&s[o].test(r)){l.unshift(o);break}if(l[0]in n)a=l[0];else{for(o in n){if(!l[0]||e.converters[o+" "+l[0]]){a=o;break}i||(i=o)}a=a||i}return a?(a!==l[0]&&l.unshift(a),n[a]):void 0}(p,E,r)),y=function(e,t,n,r){var o,a,i,s,l,c={},u=e.dataTypes.slice();if(u[1])for(i in e.converters)c[i.toLowerCase()]=e.converters[i];for(a=u.shift();a;)if(e.responseFields[a]&&(n[e.responseFields[a]]=t),!l&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=a,a=u.shift())if("*"===a)a=l;else if("*"!==l&&l!==a){if(!(i=c[l+" "+a]||c["* "+a]))for(o in c)if((s=o.split(" "))[1]===a&&(i=c[l+" "+s[0]]||c["* "+s[0]])){!0===i?i=c[o]:!0!==c[o]&&(a=s[0],u.unshift(s[1]));break}if(!0!==i)if(i&&e.throws)t=i(t);else try{t=i(t)}catch(e){return{state:"parsererror",error:i?e:"No conversion from "+l+" to "+a}}}return{state:"success",data:t}}(p,y,E,c),c?(p.ifModified&&((x=E.getResponseHeader("Last-Modified"))&&(re.lastModified[a]=x),(x=E.getResponseHeader("etag"))&&(re.etag[a]=x)),204===e||"HEAD"===p.type?C="nocontent":304===e?C="notmodified":(C=y.state,d=y.data,c=!(v=y.error))):(v=C,!e&&C||(C="error",0>e&&(e=0))),E.status=e,E.statusText=(t||C)+"",c?g.resolveWith(f,[d,C,E]):g.rejectWith(f,[E,C,v]),E.statusCode(b),b=void 0,u&&h.trigger(c?"ajaxSuccess":"ajaxError",[E,p,c?d:v]),m.fireWith(f,[E,C]),u&&(h.trigger("ajaxComplete",[E,p]),--re.active||re.event.trigger("ajaxStop")))}"object"==typeof e&&(t=e,e=void 0),t=t||{};var o,a,i,s,l,c,u,d,p=re.ajaxSetup({},t),f=p.context||p,h=p.context&&(f.nodeType||f.jquery)?re(f):re.event,g=re.Deferred(),m=re.Callbacks("once memory"),b=p.statusCode||{},v={},y={},A=0,x="canceled",E={readyState:0,getResponseHeader:function(e){var t;if(2===A){if(!s)for(s={};t=yt.exec(i);)s[t[1].toLowerCase()]=t[2];t=s[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===A?i:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return A||(e=y[n]=y[n]||e,v[e]=t),this},overrideMimeType:function(e){return A||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>A)for(t in e)b[t]=[b[t],e[t]];else E.always(e[E.status]);return this},abort:function(e){var t=e||x;return o&&o.abort(t),r(0,t),this}};if(g.promise(E).complete=m.add,E.success=E.done,E.error=E.fail,p.url=((e||p.url||ht.href)+"").replace(bt,"").replace(xt,ht.protocol+"//"),p.type=t.method||t.type||p.method||p.type,p.dataTypes=re.trim(p.dataType||"*").toLowerCase().match(Ae)||[""],null==p.crossDomain){c=Y.createElement("a");try{c.href=p.url,c.href=c.href,p.crossDomain=_t.protocol+"//"+_t.host!=c.protocol+"//"+c.host}catch(e){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=re.param(p.data,p.traditional)),z(Et,p,t,E),2===A)return E;for(d in(u=re.event&&p.global)&&0==re.active++&&re.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!At.test(p.type),a=p.url,p.hasContent||(p.data&&(a=p.url+=(mt.test(a)?"&":"?")+p.data,delete p.data),!1===p.cache&&(p.url=vt.test(a)?a.replace(vt,"$1_="+gt++):a+(mt.test(a)?"&":"?")+"_="+gt++)),p.ifModified&&(re.lastModified[a]&&E.setRequestHeader("If-Modified-Since",re.lastModified[a]),re.etag[a]&&E.setRequestHeader("If-None-Match",re.etag[a])),(p.data&&p.hasContent&&!1!==p.contentType||t.contentType)&&E.setRequestHeader("Content-Type",p.contentType),E.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+wt+"; q=0.01":""):p.accepts["*"]),p.headers)E.setRequestHeader(d,p.headers[d]);if(p.beforeSend&&(!1===p.beforeSend.call(f,E,p)||2===A))return E.abort();for(d in x="abort",{success:1,error:1,complete:1})E[d](p[d]);if(o=z(Ct,p,t,E)){if(E.readyState=1,u&&h.trigger("ajaxSend",[E,p]),2===A)return E;p.async&&p.timeout>0&&(l=n.setTimeout((function(){E.abort("timeout")}),p.timeout));try{A=1,o.send(v,r)}catch(e){if(!(2>A))throw e;r(-1,e)}}else r(-1,"No Transport");return E},getJSON:function(e,t,n){return re.get(e,t,n,"json")},getScript:function(e,t){return re.get(e,void 0,t,"script")}}),re.each(["get","post"],(function(e,t){re[t]=function(e,n,r,o){return re.isFunction(n)&&(o=o||r,r=n,n=void 0),re.ajax(re.extend({url:e,type:t,dataType:o,data:n,success:r},re.isPlainObject(e)&&e))}})),re._evalUrl=function(e){return re.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,throws:!0})},re.fn.extend({wrapAll:function(e){var t;return re.isFunction(e)?this.each((function(t){re(this).wrapAll(e.call(this,t))})):(this[0]&&(t=re(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map((function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e})).append(this)),this)},wrapInner:function(e){return re.isFunction(e)?this.each((function(t){re(this).wrapInner(e.call(this,t))})):this.each((function(){var t=re(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)}))},wrap:function(e){var t=re.isFunction(e);return this.each((function(n){re(this).wrapAll(t?e.call(this,n):e)}))},unwrap:function(){return this.parent().each((function(){re.nodeName(this,"body")||re(this).replaceWith(this.childNodes)})).end()}}),re.expr.filters.hidden=function(e){return!re.expr.filters.visible(e)},re.expr.filters.visible=function(e){return e.offsetWidth>0||e.offsetHeight>0||e.getClientRects().length>0};var Tt=/%20/g,kt=/\[\]$/,St=/\r?\n/g,Rt=/^(?:submit|button|image|reset|file)$/i,Nt=/^(?:input|select|textarea|keygen)/i;re.param=function(e,t){var n,r=[],o=function(e,t){t=re.isFunction(t)?t():null==t?"":t,r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=re.ajaxSettings&&re.ajaxSettings.traditional),re.isArray(e)||e.jquery&&!re.isPlainObject(e))re.each(e,(function(){o(this.name,this.value)}));else for(n in e)U(n,e[n],t,o);return r.join("&").replace(Tt,"+")},re.fn.extend({serialize:function(){return re.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var e=re.prop(this,"elements");return e?re.makeArray(e):this})).filter((function(){var e=this.type;return this.name&&!re(this).is(":disabled")&&Nt.test(this.nodeName)&&!Rt.test(e)&&(this.checked||!Oe.test(e))})).map((function(e,t){var n=re(this).val();return null==n?null:re.isArray(n)?re.map(n,(function(e){return{name:t.name,value:e.replace(St,"\r\n")}})):{name:t.name,value:n.replace(St,"\r\n")}})).get()}}),re.ajaxSettings.xhr=function(){try{return new n.XMLHttpRequest}catch(e){}};var Ot={0:200,1223:204},It=re.ajaxSettings.xhr();te.cors=!!It&&"withCredentials"in It,te.ajax=It=!!It,re.ajaxTransport((function(e){var t,r;return te.cors||It&&!e.crossDomain?{send:function(o,a){var i,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(i in e.xhrFields)s[i]=e.xhrFields[i];for(i in e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||o["X-Requested-With"]||(o["X-Requested-With"]="XMLHttpRequest"),o)s.setRequestHeader(i,o[i]);t=function(e){return function(){t&&(t=r=s.onload=s.onerror=s.onabort=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?a(0,"error"):a(s.status,s.statusText):a(Ot[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=t(),r=s.onerror=t("error"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&n.setTimeout((function(){t&&r()}))},t=t("abort");try{s.send(e.hasContent&&e.data||null)}catch(e){if(t)throw e}},abort:function(){t&&t()}}:void 0})),re.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return re.globalEval(e),e}}}),re.ajaxPrefilter("script",(function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")})),re.ajaxTransport("script",(function(e){var t,n;if(e.crossDomain)return{send:function(r,o){t=re("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&o("error"===e.type?404:200,e.type)}),Y.head.appendChild(t[0])},abort:function(){n&&n()}}}));var Lt=[],Mt=/(=)\?(?=&|$)|\?\?/;re.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Lt.pop()||re.expando+"_"+gt++;return this[e]=!0,e}}),re.ajaxPrefilter("json jsonp",(function(e,t,r){var o,a,i,s=!1!==e.jsonp&&(Mt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Mt.test(e.data)&&"data");return s||"jsonp"===e.dataTypes[0]?(o=e.jsonpCallback=re.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Mt,"$1"+o):!1!==e.jsonp&&(e.url+=(mt.test(e.url)?"&":"?")+e.jsonp+"="+o),e.converters["script json"]=function(){return i||re.error(o+" was not called"),i[0]},e.dataTypes[0]="json",a=n[o],n[o]=function(){i=arguments},r.always((function(){void 0===a?re(n).removeProp(o):n[o]=a,e[o]&&(e.jsonpCallback=t.jsonpCallback,Lt.push(o)),i&&re.isFunction(a)&&a(i[0]),i=a=void 0})),"script"):void 0})),re.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||Y;var r=pe.exec(e),o=!n&&[];return r?[t.createElement(r[1])]:(r=h([e],t,o),o&&o.length&&re(o).remove(),re.merge([],r.childNodes))};var Ft=re.fn.load;re.fn.load=function(e,t,n){if("string"!=typeof e&&Ft)return Ft.apply(this,arguments);var r,o,a,i=this,s=e.indexOf(" ");return s>-1&&(r=re.trim(e.slice(s)),e=e.slice(0,s)),re.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(o="POST"),i.length>0&&re.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done((function(e){a=arguments,i.html(r?re("<div>").append(re.parseHTML(e)).find(r):e)})).always(n&&function(e,t){i.each((function(){n.apply(this,a||[e.responseText,t,e])}))}),this},re.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(e,t){re.fn[t]=function(e){return this.on(t,e)}})),re.expr.filters.animated=function(e){return re.grep(re.timers,(function(t){return e===t.elem})).length},re.offset={setOffset:function(e,t,n){var r,o,a,i,s,l,c=re.css(e,"position"),u=re(e),d={};"static"===c&&(e.style.position="relative"),s=u.offset(),a=re.css(e,"top"),l=re.css(e,"left"),("absolute"===c||"fixed"===c)&&(a+l).indexOf("auto")>-1?(i=(r=u.position()).top,o=r.left):(i=parseFloat(a)||0,o=parseFloat(l)||0),re.isFunction(t)&&(t=t.call(e,n,re.extend({},s))),null!=t.top&&(d.top=t.top-s.top+i),null!=t.left&&(d.left=t.left-s.left+o),"using"in t?t.using.call(e,d):u.css(d)}},re.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each((function(t){re.offset.setOffset(this,e,t)}));var t,n,r=this[0],o={top:0,left:0},a=r&&r.ownerDocument;return a?(t=a.documentElement,re.contains(t,r)?(o=r.getBoundingClientRect(),n=G(a),{top:o.top+n.pageYOffset-t.clientTop,left:o.left+n.pageXOffset-t.clientLeft}):o):void 0},position:function(){if(this[0]){var e,t,n=this[0],r={top:0,left:0};return"fixed"===re.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),re.nodeName(e[0],"html")||(r=e.offset()),r.top+=re.css(e[0],"borderTopWidth",!0),r.left+=re.css(e[0],"borderLeftWidth",!0)),{top:t.top-r.top-re.css(n,"marginTop",!0),left:t.left-r.left-re.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var e=this.offsetParent;e&&"static"===re.css(e,"position");)e=e.offsetParent;return e||Je}))}}),re.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(e,t){var n="pageYOffset"===t;re.fn[e]=function(r){return xe(this,(function(e,r,o){var a=G(e);return void 0===o?a?a[t]:e[r]:void(a?a.scrollTo(n?a.pageXOffset:o,n?o:a.pageYOffset):e[r]=o)}),e,r,arguments.length)}})),re.each(["top","left"],(function(e,t){re.cssHooks[t]=R(te.pixelPosition,(function(e,n){return n?(n=S(e,t),Ye.test(n)?re(e).position()[t]+"px":n):void 0}))})),re.each({Height:"height",Width:"width"},(function(e,t){re.each({padding:"inner"+e,content:t,"":"outer"+e},(function(n,r){re.fn[r]=function(r,o){var a=arguments.length&&(n||"boolean"!=typeof r),i=n||(!0===r||!0===o?"margin":"border");return xe(this,(function(t,n,r){var o;return re.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(o=t.documentElement,Math.max(t.body["scroll"+e],o["scroll"+e],t.body["offset"+e],o["offset"+e],o["client"+e])):void 0===r?re.css(t,n,i):re.style(t,n,r,i)}),t,a?r:void 0,a,null)}}))})),re.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},size:function(){return this.length}}),re.fn.andSelf=re.fn.addBack,void 0===(r=function(){return re}.apply(t,[]))||(e.exports=r);var Bt=n.jQuery,Dt=n.$;return re.noConflict=function(e){return n.$===re&&(n.$=Dt),e&&n.jQuery===re&&(n.jQuery=Bt),re},o||(n.jQuery=n.$=re),re}))},function(e,t,n){(function(t){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(21);n(49);var a=function(){function e(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.panel=new o(this),this.$checkbox=null}return r(e,[{key:"getTitle",value:function(){return"New plugin"}},{key:"getDescription",value:function(){return""}},{key:"summary",value:function(e){return this.panel.setSummary(e)}},{key:"about",value:function(e){return this.panel.setAbout(e)}},{key:"error",value:function(e,t,n){return this.panel.addError(e,t,n)}},{key:"render",value:function(e){var n=this;this.$checkbox=t("input",{className:"tota11y-plugin-checkbox tota11y-sr-only",type:"checkbox",onClick:function(){return e(n)}});var r=t("label",{className:"tota11y-plugin-switch"},this.$checkbox,t("div",{"aria-hidden":"true",className:"tota11y-plugin-indicator"},"✓"),t("div",{className:"tota11y-plugin-info"},t("div",{className:"tota11y-plugin-title"},this.getTitle()),t("div",{className:"tota11y-plugin-description"},this.getDescription())));return t("li",{role:"menu-item",className:"tota11y-plugin"},r)}},{key:"activate",value:function(){this.run(),this.panel.render()}},{key:"deactivate",value:function(){this.cleanup(),this.panel.destroy(),this.$checkbox.prop("checked",!1)}}]),e}();e.exports=a}).call(t,n(4))},function(e,t,n){"use strict";var r=n(1),o=n(33);n(47),window.requestAnimationFrame=window.requestAnimationFrame||function(e){window.setTimeout(e,16)},e.exports=function(e){var t="tota11y-annotation-"+e,n=[],a=function(e,o){var a=r("<div>").addClass("tota11y").addClass(t).addClass(o).css(e.position()).data({$el:e});return n.push({$annotation:a,$parent:e.offsetParent()}),a};return function e(){for(var t=0;n.length>0&&20>t;t++){var r=n.shift();r.$parent.append(r.$annotation)}window.requestAnimationFrame(e)}(),r(window).resize((function(){var e=r("."+t),n=e.map((function(e,t){return r(t).data("$el").position()}));e.each((function(e,t){r(t).css({top:n[e].top,left:n[e].left})}))})),{label:function(e){var t=arguments.length<=1||void 0===arguments[1]?e.prop("tagName").toLowerCase():arguments[1];return a(e,"tota11y-label").html(t)},errorLabel:function(e,t,n,a){var i=r(o({text:t,detail:n,hasErrorEntry:!!a}));return a&&(i.find(".tota11y-label-link").click((function(e){e.preventDefault(),e.stopPropagation(),a.show()})),i.hover((function(){a.$trigger.addClass("trigger-highlight")}),(function(){a.$trigger.removeClass("trigger-highlight")}))),this.label(e).addClass("tota11y-label-error").html(i)},highlight:function(e){return a(e,"tota11y-highlight").css({width:Math.max(25,e.outerWidth(!0)),height:Math.max(25,e.outerHeight(!0))})},toggleHighlight:function(e,t){var n=this,r=void 0;t.on("mouseenter focus",(function(){r&&r.remove(),r=n.highlight(e)})),t.on("mouseleave blur",(function(){r&&(r.remove(),r=null)}))},hide:function(){r(".tota11y.tota11y-label").hide()},show:function(){r(".tota11y.tota11y-label").show()},removeAll:function(){r("."+t).remove()}}}},function(e,t,n){"use strict";e.exports=function e(t,r){var o=arguments,a=n(1);if(void 0===r)return t;if(t.render)return t.render(r&&r.onClick);var i,s,l,c=function(){var n=a("<"+t+">");if(null!==r)for(var c in r)if("onClick"===c){var u=r[c];n.click(u)}else if(/^aria-/.test(c)||"role"===c){var d=r[c];n.attr(c,d)}else d=r[c],n.prop(c,d);for(i=o.length,s=Array(i>2?i-2:0),l=2;i>l;l++)s[l-2]=o[l];return s.forEach((function(t){n.append(e(t))})),{v:n}}();return"object"==typeof c?c.v:void 0}},function(e,t){e.exports=function(){var e=[];return e.toString=function(){for(var e=[],t=0;t<this.length;t++){var n=this[t];n[2]?e.push("@media "+n[2]+"{"+n[1]+"}"):e.push(n[1])}return e.join("")},e.i=function(t,n){"string"==typeof t&&(t=[[null,t,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];"number"==typeof a&&(r[a]=!0)}for(o=0;o<t.length;o++){var i=t[o];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),e.push(i))}},e}},function(e,t,n){e.exports=n(36).default},function(e,t,n){function r(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=u[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(i(r.parts[a],t))}else{var s=[];for(a=0;a<r.parts.length;a++)s.push(i(r.parts[a],t));u[r.id]={id:r.id,refs:1,parts:s}}}}function o(e){for(var t=[],n={},r=0;r<e.length;r++){var o=e[r],a=o[0],i={css:o[1],media:o[2],sourceMap:o[3]};n[a]?n[a].parts.push(i):t.push(n[a]={id:a,parts:[i]})}return t}function a(){var e=document.createElement("style"),t=f();return e.type="text/css",t.appendChild(e),e}function i(e,t){var n,r,o;if(t.singleton){var i=g++;n=h||(h=a()),r=s.bind(null,n,i,!1),o=s.bind(null,n,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(){var e=document.createElement("link"),t=f();return e.rel="stylesheet",t.appendChild(e),e}(),r=c.bind(null,n),o=function(){n.parentNode.removeChild(n),n.href&&URL.revokeObjectURL(n.href)}):(n=a(),r=l.bind(null,n),o=function(){n.parentNode.removeChild(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}function s(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=m(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}function l(e,t){var n=t.css,r=t.media;if(t.sourceMap,r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function c(e,t){var n=t.css,r=(t.media,t.sourceMap);r&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(JSON.stringify(r))+" */");var o=new Blob([n],{type:"text/css"}),a=e.href;e.href=URL.createObjectURL(o),a&&URL.revokeObjectURL(a)}var u={},d=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}},p=d((function(){return/msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())})),f=d((function(){return document.head||document.getElementsByTagName("head")[0]})),h=null,g=0;e.exports=function(e,t){void 0===(t=t||{}).singleton&&(t.singleton=p());var n=o(e);return r(n,t),function(e){for(var a=[],i=0;i<n.length;i++){var s=n[i];(l=u[s.id]).refs--,a.push(l)}for(e&&r(o(e),t),i=0;i<a.length;i++){var l;if(0===(l=a[i]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete u[l.id]}}}};var m=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},,function(e,t){"use strict";function n(e,t){var o=t&&t.loc,a=void 0,i=void 0;o&&(e+=" - "+(a=o.start.line)+":"+(i=o.start.column));for(var s=Error.prototype.constructor.call(this,e),l=0;l<r.length;l++)this[r[l]]=s[r[l]];Error.captureStackTrace&&Error.captureStackTrace(this,n),o&&(this.lineNumber=a,this.column=i)}t.__esModule=!0;var r=["description","fileName","lineNumber","message","name","number","stack"];n.prototype=new Error,t.default=n,e.exports=t.default},function(e,t){"use strict";function n(e){return r[e]}t.__esModule=!0,t.extend=function(e){for(var t=1;t<arguments.length;t++)for(var n in arguments[t])Object.prototype.hasOwnProperty.call(arguments[t],n)&&(e[n]=arguments[t][n]);return e},t.indexOf=function(e,t){for(var n=0,r=e.length;r>n;n++)if(e[n]===t)return n;return-1},t.escapeExpression=function(e){if("string"!=typeof e){if(e&&e.toHTML)return e.toHTML();if(null==e)return"";if(!e)return e+"";e=""+e}return a.test(e)?e.replace(o,n):e},t.isEmpty=function(e){return!e&&0!==e||!(!l(e)||0!==e.length)},t.blockParams=function(e,t){return e.path=t,e},t.appendContextPath=function(e,t){return(e?e+".":"")+t};var r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},o=/[&<>"'`]/g,a=/[&<>"'`]/,i=Object.prototype.toString;t.toString=i;var s=function(e){return"function"==typeof e};s(/x/)&&(t.isFunction=s=function(e){return"function"==typeof e&&"[object Function]"===i.call(e)}),t.isFunction=s;var l=Array.isArray||function(e){return!(!e||"object"!=typeof e)&&"[object Array]"===i.call(e)};t.isArray=l},function(e,t){"use strict";e.exports=function(e){var t=function(e){var t=new axs.AuditConfiguration;return t.showUnsupportedRulesWarning=!1,t.ignoreSelectors(e,".tota11y *"),axs.AuditRules.getRules().map((function(e){return e.name})).forEach((function(n){n!==e&&t.ignoreSelectors(n,"*")})),t}(e);return axs.AuditRule.collectMatchingElements=function(e,t,n,r){if(e.nodeType===Node.ELEMENT_NODE)var o=e;if(o&&t.call(null,o)&&n.push(o),o){var a=o.shadowRoot||o.webkitShadowRoot;if(a)return void axs.AuditRule.collectMatchingElements(a,t,n,a)}if(o&&"content"==o.localName)for(var i=o.getDistributedNodes(),s=0;s<i.length;s++)axs.AuditRule.collectMatchingElements(i[s],t,n,r);else{if(o&&"shadow"==o.localName)if(r)for(i=o.getDistributedNodes(),s=0;s<i.length;s++)axs.AuditRule.collectMatchingElements(i[s],t,n,r);else console.warn("ShadowRoot not provided for",o);for(var l=e.firstChild;null!=l;)axs.AuditRule.collectMatchingElements(l,t,n,r),l=l.nextSibling}},axs.Audit.run(t).filter((function(t){return t.rule.name===e}))[0]}},function(e,t,n){"use strict";function r(e,t){this.helpers=e||{},this.partials=t||{},function(e){e.registerHelper("helperMissing",(function(){if(1!==arguments.length)throw new s.default('Missing helper: "'+arguments[arguments.length-1].name+'"')})),e.registerHelper("blockHelperMissing",(function(t,n){var r=n.inverse,a=n.fn;if(!0===t)return a(this);if(!1===t||null==t)return r(this);if(l(t))return t.length>0?(n.ids&&(n.ids=[n.name]),e.helpers.each(t,n)):r(this);if(n.data&&n.ids){var s=o(n.data);s.contextPath=i.appendContextPath(n.data.contextPath,n.name),n={data:s}}return a(t,n)})),e.registerHelper("each",(function(e,t){function n(t,n,o){p&&(p.key=t,p.index=n,p.first=0===n,p.last=!!o,f&&(p.contextPath=f+t)),d+=r(e[t],{data:p,blockParams:i.blockParams([e[t],t],[f+t,null])})}if(!t)throw new s.default("Must pass iterator to #each");var r=t.fn,a=t.inverse,u=0,d="",p=void 0,f=void 0;if(t.data&&t.ids&&(f=i.appendContextPath(t.data.contextPath,t.ids[0])+"."),c(e)&&(e=e.call(this)),t.data&&(p=o(t.data)),e&&"object"==typeof e)if(l(e))for(var h=e.length;h>u;u++)n(u,u,u===e.length-1);else{var g=void 0;for(var m in e)e.hasOwnProperty(m)&&(g&&n(g,u-1),g=m,u++);g&&n(g,u-1,!0)}return 0===u&&(d=a(this)),d})),e.registerHelper("if",(function(e,t){return c(e)&&(e=e.call(this)),!t.hash.includeZero&&!e||i.isEmpty(e)?t.inverse(this):t.fn(this)})),e.registerHelper("unless",(function(t,n){return e.helpers.if.call(this,t,{fn:n.inverse,inverse:n.fn,hash:n.hash})})),e.registerHelper("with",(function(e,t){c(e)&&(e=e.call(this));var n=t.fn;if(i.isEmpty(e))return t.inverse(this);if(t.data&&t.ids){var r=o(t.data);r.contextPath=i.appendContextPath(t.data.contextPath,t.ids[0]),t={data:r}}return n(e,t)})),e.registerHelper("log",(function(t,n){var r=n.data&&null!=n.data.level?parseInt(n.data.level,10):1;e.log(r,t)})),e.registerHelper("lookup",(function(e,t){return e&&e[t]}))}(this)}function o(e){var t=i.extend({},e);return t._parent=e,t}var a=function(e){return e&&e.__esModule?e:{default:e}};t.__esModule=!0,t.HandlebarsEnvironment=r,t.createFrame=o;var i=a(n(10)),s=a(n(9));t.VERSION="3.0.1",t.COMPILER_REVISION=6,t.REVISION_CHANGES={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1"};var l=i.isArray,c=i.isFunction,u=i.toString,d="[object Object]";r.prototype={constructor:r,logger:p,log:f,registerHelper:function(e,t){if(u.call(e)===d){if(t)throw new s.default("Arg not supported with multiple helpers");i.extend(this.helpers,e)}else this.helpers[e]=t},unregisterHelper:function(e){delete this.helpers[e]},registerPartial:function(e,t){if(u.call(e)===d)i.extend(this.partials,e);else{if(void 0===t)throw new s.default("Attempting to register a partial as undefined");this.partials[e]=t}},unregisterPartial:function(e){delete this.partials[e]}};var p={methodMap:{0:"debug",1:"info",2:"warn",3:"error"},DEBUG:0,INFO:1,WARN:2,ERROR:3,level:1,log:function(e,t){if("undefined"!=typeof console&&p.level<=e){var n=p.methodMap[e];(console[n]||console.log).call(console,t)}}};t.logger=p;var f=p.log;t.log=f},function(e,t,n){(function(t){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e,t,n){for(var r=!0;r;){var o=e,a=t,i=n;r=!1,null===o&&(o=Function.prototype);var s=Object.getOwnPropertyDescriptor(o,a);if(void 0!==s){if("value"in s)return s.value;var l=s.get;if(void 0===l)return;return l.call(i)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=a,n=i,r=!0,s=c=void 0}},a=n(1),i=n(2);n(44);var s=function(e){function n(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,e),r(n,[{key:"getTitle",value:function(){return"Screen Reader Wand"}},{key:"getDescription",value:function(){return"Hover over elements to view them as a screen reader would"}},{key:"run",value:function(){this.summary(" "),this.panel.render(),a(document).on("mousemove.wand",(function(e){var n=document.elementFromPoint(e.clientX,e.clientY),r=axs.properties.findTextAlternatives(n,{});a(".tota11y-outlined").removeClass("tota11y-outlined"),a(n).addClass("tota11y-outlined"),r?a(".tota11y-info-section.active").text(r):a(".tota11y-info-section.active").html(t("i",{className:"tota11y-nothingness"},"No text visible to a screen reader"))}))}},{key:"cleanup",value:function(){a(".tota11y-outlined").removeClass("tota11y-outlined"),a(document).off("mousemove.wand")}}]),n}(i);e.exports=s}).call(t,n(4))},function(e,t,n){(function(t){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e,t,n){for(var r=!0;r;){var o=e,a=t,i=n;r=!1,null===o&&(o=Function.prototype);var s=Object.getOwnPropertyDescriptor(o,a);if(void 0!==s){if("value"in s)return s.value;var l=s.get;if(void 0===l)return;return l.call(i)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=a,n=i,r=!0,s=c=void 0}},a=n(1),i=n(2),s=n(3)("alt-text"),l=n(11),c=function(e){function n(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,e),r(n,[{key:"getTitle",value:function(){return"Image alt-text"}},{key:"getDescription",value:function(){return"Annotates images without alt text"}},{key:"reportError",value:function(e){var n=a(e),r=n.attr("src")||"..",o="Image is missing alt text",i=t("div",null,t("p",null,'This image does not have an associated "alt" attribute. Please specify the alt text for this image like so:'),t("pre",null,t("code",null,'&lt;img src="'+r+'" alt="Image description"&gt')),t("p",null,'If the image is decorative and does not convey any information to the surrounding content, however, you may leave this "alt" attribute empty, or specify a "role" attribute with a value of "presentation."'),t("pre",null,t("code",null,'&lt;img src="'+r+'" alt=""&gt;',t("br",null),'&lt;img src="'+r+'" role="presentation"&gt;'))),l=this.error(o,i,n);s.errorLabel(n,"",o,l)}},{key:"run",value:function(){var e=l("imagesWithoutAltText"),t=e.result,n=e.elements;"FAIL"===t&&n.forEach(this.reportError.bind(this)),a('img[role="presentation"], img[alt=""]').each((function(e,t){s.errorLabel(a(t),"","This image is decorative").addClass("tota11y-label-warning")}))}},{key:"cleanup",value:function(){s.removeAll()}}]),n}(i);e.exports=c}).call(t,n(4))},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e,t,n){for(var r=!0;r;){var o=e,a=t,i=n;r=!1,null===o&&(o=Function.prototype);var s=Object.getOwnPropertyDescriptor(o,a);if(void 0!==s){if("value"in s)return s.value;var l=s.get;if(void 0===l)return;return l.call(i)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=a,n=i,r=!0,s=c=void 0}},a=n(1),i=n(2),s=n(3)("contrast"),l=n(30),c=n(29);n(45);var u=function(e){function t(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,t),o(Object.getPrototypeOf(t.prototype),"constructor",this).call(this),this.preservedColors=[]}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"getTitle",value:function(){return"Contrast"}},{key:"getDescription",value:function(){return"Labels elements with insufficient contrast"}},{key:"addError",value:function(e,t){var n=e.style,r=e.fgColor,o=e.bgColor,i=e.contrastRatio,s=e.requiredRatio,u=axs.color.suggestColors(o,r,{AA:s}).AA,d={fgColorHex:axs.color.colorToString(r),bgColorHex:axs.color.colorToString(o),contrastRatio:i,requiredRatio:s,suggestedFgColorHex:u.fg,suggestedBgColorHex:u.bg,suggestedColorsRatio:u.contrast},p=a(c(d)),f=n.color,h=n.backgroundColor;return p.find(".preview-contrast-fix").click((function(e){a(e.target).prop("checked")?(a(t).css("color",u.fg),a(t).css("background-color",u.bg)):(a(t).css("color",f),a(t).css("background-color",h))})),this.error(l(d),p,a(t))}},{key:"run",value:function(){var e=this,t={};a("*").each((function(n,r){if(axs.properties.hasDirectTextDescendant(r)&&!(a(r).parents(".tota11y").length>0||axs.utils.elementIsTransparent(r)||axs.utils.elementHasZeroArea(r))){var o=getComputedStyle(r),i=axs.utils.getBgColor(o,r),l=axs.utils.getFgColor(o,r,i),c=axs.color.calculateContrastRatio(l,i).toFixed(2),u=axs.utils.isLargeFont(o)?3:4.5,d=axs.color.colorToString(l)+"/"+axs.color.colorToString(i)+"/"+u;if(axs.utils.isLowContrast(c,o)){if(!t[d]){var p=e.addError({style:o,fgColor:l,bgColor:i,contrastRatio:c,requiredRatio:u},r);e.preservedColors.push({$el:a(r),fg:o.color,bg:o.backgroundColor}),t[d]=p}s.errorLabel(a(r),c,"This contrast is insufficient at this size.",t[d])}else t[d]||(s.label(a(r),c).addClass("tota11y-label-success"),t[d]=!0)}}))}},{key:"cleanup",value:function(){this.preservedColors.forEach((function(e){e.$el.css("color",e.fg),e.$el.css("background-color",e.bg)})),s.removeAll()}}]),t}(i);e.exports=u},function(e,t,n){(function(t){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e,t,n){for(var r=!0;r;){var o=e,a=t,i=n;r=!1,null===o&&(o=Function.prototype);var s=Object.getOwnPropertyDescriptor(o,a);if(void 0!==s){if("value"in s)return s.value;var l=s.get;if(void 0===l)return;return l.call(i)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=a,n=i,r=!0,s=c=void 0}},a=n(1),i=n(2),s=n(3)("headings"),l=n(31);n(46);var c=function(e){function n(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,e),r(n,[{key:"getTitle",value:function(){return"Headings"}},{key:"getDescription",value:function(){return"\n            Highlights headings (&lt;h1&gt;, &lt;h2&gt;, etc) and\n            order violations\n        "}},{key:"outline",value:function(e){var t=this,n=[],r=void 0;return e.each((function(e,o){var i=a(o),c=+i.prop("tagName").slice(1),u=void 0;0===e&&1!==c?u=function(e){return{title:"First heading is not an &lt;h1&gt;",description:"\n                <div>\n                    To give your document a proper structure for assistive\n                    technologies, it is important to lay out your headings\n                    beginning with an <code>&lt;h1&gt;</code>. We found an\n                    <code>&lt;h"+e+"&gt;</code> instead.\n                </div>\n            "}}(c):r&&c-r>1&&(u=function(e,t){var n=function(e){return"<code>&lt;h"+e+"&gt;</code>"},r="\n            <div>\n                This document contains an "+n(t)+" tag directly\n                following an "+n(e)+". In order to maintain a consistent\n                outline of the page for assistive technologies, reduce the gap in\n                the heading level by upgrading this tag to an\n                "+n(e+1);return 1!==e&&(r+=" or "+n(e)),{title:"\n                Nonconsecutive heading level used (h"+e+" &rarr;\n                h"+t+")\n            ",description:r+=".</div>"}}(r,c)),r=c;var d=a(l({level:c,text:i.text()}));if(n.push(d),s.toggleHighlight(i,d),u){var p=t.error(u.title,a(u.description),i);s.errorLabel(i,i.prop("tagName").toLowerCase(),u.title,p),d.find(".tota11y-heading-outline-level").addClass("tota11y-label-error")}else s.label(i).addClass("tota11y-label-success"),d.find(".tota11y-heading-outline-level").addClass("tota11y-label-success")})),n}},{key:"run",value:function(){var e=a("h1, h2, h3, h4, h5, h6"),n=this.outline(e);if(n.length){var r=t("div",{className:"tota11y-heading-outline"},n);this.summary(r)}}},{key:"cleanup",value:function(){s.removeAll()}}]),n}(i);e.exports=c}).call(t,n(4))},function(e,t,n){"use strict";var r=n(14),o=n(15),a=n(16),i=n(18),s=n(19),l=n(20),c=n(13);e.exports={default:[new a,new o,new l,new i,new r,new s],experimental:[new c]}},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e,t,n){for(var r=!0;r;){var o=e,a=t,i=n;r=!1,null===o&&(o=Function.prototype);var s=Object.getOwnPropertyDescriptor(o,a);if(void 0!==s){if("value"in s)return s.value;var l=s.get;if(void 0===l)return;return l.call(i)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=a,n=i,r=!0,s=c=void 0}},a=n(1),i=n(2),s=n(3)("labels"),l=n(11),c=n(32),u=function(e){function t(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,t),o(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"getTitle",value:function(){return"Labels"}},{key:"getDescription",value:function(){return"Identifies inputs with missing labels"}},{key:"errorMessage",value:function(e){return c({placeholder:e.attr("placeholder"),id:e.attr("id"),tagName:e.prop("tagName").toLowerCase()})}},{key:"run",value:function(){var e=this,t=l("controlsWithoutLabel"),n=t.result,r=t.elements;"FAIL"===n&&r.forEach((function(t){var n=a(t),r="Input is missing a label",o=e.error(r,a(e.errorMessage(n)),n);s.errorLabel(n,"",r,o)}))}},{key:"cleanup",value:function(){s.removeAll()}}]),t}(i);e.exports=u},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e,t,n){for(var r=!0;r;){var o=e,a=t,i=n;r=!1,null===o&&(o=Function.prototype);var s=Object.getOwnPropertyDescriptor(o,a);if(void 0!==s){if("value"in s)return s.value;var l=s.get;if(void 0===l)return;return l.call(i)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=a,n=i,r=!0,s=c=void 0}},a=n(1),i=n(2),s=n(3)("landmarks"),l=function(e){function t(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,t),o(Object.getPrototypeOf(t.prototype),"constructor",this).apply(this,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),r(t,[{key:"getTitle",value:function(){return"Landmarks"}},{key:"getDescription",value:function(){return"Labels all ARIA landmarks"}},{key:"run",value:function(){a("[role]:not(.tota11y-toolbar,.tota11y-plugin)").each((function(){s.label(a(this),a(this).attr("role"))}))}},{key:"cleanup",value:function(){s.removeAll()}}]),t}(i);e.exports=l},function(e,t,n){(function(t){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=function(e,t,n){for(var r=!0;r;){var o=e,a=t,i=n;r=!1,null===o&&(o=Function.prototype);var s=Object.getOwnPropertyDescriptor(o,a);if(void 0!==s){if("value"in s)return s.value;var l=s.get;if(void 0===l)return;return l.call(i)}var c=Object.getPrototypeOf(o);if(null===c)return;e=c,t=a,n=i,r=!0,s=c=void 0}},a=n(1),i=n(2),s=n(3)("link-text"),l=function(e){function n(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,n),o(Object.getPrototypeOf(n.prototype),"constructor",this).apply(this,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,e),r(n,[{key:"getTitle",value:function(){return"Link text"}},{key:"getDescription",value:function(){return"\n            Identifies links that may be confusing when read by a screen\n            reader\n        "}},{key:"isDescriptiveText",value:function(e){if(null==e)return!1;var t=new RegExp("\\b("+["click","tap","go","here","learn","more","this","page","link","about"].join("|")+")\\b","ig");return""!==(e=e.replace(/[^a-zA-Z ]/g,"").replace(t,"")).trim()}},{key:"reportError",value:function(e,t,n){var r=this.error("Link text is unclear",t,e);s.errorLabel(e,"",'Link text "'+n+'" is unclear',r)}},{key:"run",value:function(){var e=this;a("a").each((function(n,r){var o=a(r);if(!o.parents(".tota11y").length&&!axs.utils.isElementOrAncestorHidden(r)){var i=axs.properties.findTextAlternatives(r,{});if(!e.isDescriptiveText(i)){var s=t("div",null,"The text"," ",t("i",null,'"',i,'"')," ","is unclear without context and may be confusing to screen readers. Consider rearranging the"," ",t("code",null,"&lt;a&gt;&lt;/a&gt;")," ","tags or including special screen reader text.");e.reportError(o,s,i)}}}))}},{key:"cleanup",value:function(){s.removeAll()}}]),n}(i);e.exports=l}).call(t,n(4))},function(e,t,n){(function(t){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(1),a=n(3)("info-panel"),i=n(34);n(48);var s="tota11y-collapsed",l="tota11y-info-hidden",c=function(){function e(t){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.plugin=t,this.about=null,this.summary=null,this.errors=[],this.$el=null}return r(e,[{key:"setAbout",value:function(e){this.about=e}},{key:"setSummary",value:function(e){this.summary=e}},{key:"addError",value:function(e,t,n){var r={title:e,$description:t,$el:n};return this.errors.push(r),r}},{key:"_addTab",value:function(e,n){var r=this,a=t("li",{className:"tota11y-info-tab"},t("a",{className:"tota11y-info-tab-anchor",href:"#"},t("span",{className:"tota11y-info-tab-anchor-text"},e)));this.$el.find(".tota11y-info-tabs").append(a);var i=o("<div>").addClass("tota11y-info-section").html(n);return this.$el.find(".tota11y-info-sections").append(i),a.on("activate",(function(){r.$el.find(".tota11y-info-tab.active").removeClass("active"),r.$el.find(".tota11y-info-section.active").removeClass("active"),a.addClass("active"),i.addClass("active")})),a.on("click",(function(e){e.preventDefault(),e.stopPropagation(),a.trigger("activate")})),a}},{key:"initAndPosition",value:function(){var e=this,t=void 0,n=void 0;this.$el.find(".tota11y-info-dismiss-trigger").click((function(t){t.preventDefault(),t.stopPropagation(),e.$el.addClass(l),e.plugin.$checkbox.focus()})),o("body").append(this.$el),t=window.innerWidth-this.$el.width()-10,n=window.innerHeight-this.$el.height()-10;var r=this.$el.find(".tota11y-info-title"),a=!1,i=void 0,s=void 0,c=void 0,u=void 0;r.on("mousedown",(function(e){e.preventDefault(),a=!0,i=e.pageX,s=e.pageY,c=t,u=n})).on("mouseup",(function(e){e.preventDefault(),a=!1})),o(window).on("mousemove",(function(r){if(a){r.preventDefault();var o=r.pageX-i,l=r.pageY-s;t=c+o,n=u+l,e.$el.css({left:t,top:n})}})),this.$el.css({left:t,top:n})}},{key:"render",value:function(){var e=this;this.$el&&this.$el.remove();var n=!1;this.$el=t("div",{className:"tota11y tota11y-info",tabindex:"-1"},t("header",{className:"tota11y-info-title"},this.plugin.getTitle(),t("span",{className:"tota11y-info-controls"},t("label",{className:"tota11y-info-annotation-toggle"},"Annotate:"," ",t("input",{className:"toggle-annotation",type:"checkbox",checked:"checked"})),t("a",{"aria-label":"Close info panel",href:"#",className:"tota11y-info-dismiss-trigger"},"×"))),t("div",{className:"tota11y-info-body"},t("div",{className:"tota11y-info-sections"}),t("ul",{role:"tablist",className:"tota11y-info-tabs"})));var r=void 0;return this.about&&(r=this._addTab("About",this.about)),this.summary&&(r=this._addTab("Summary",this.summary)),this.$el.find(".toggle-annotation").click((function(e){o(e.target).prop("checked")?a.show():a.hide()})),this.errors.length>0&&function(){var t=o("<ul>").addClass("tota11y-info-errors"),n=void 0;e.errors.forEach((function(r,c){var u=o(i(r));u.find(".tota11y-info-error-description").prepend(r.$description),t.append(u);var d=u.find(".tota11y-info-error-trigger"),p=u.find(".tota11y-info-error-description");d.click((function(e){e.preventDefault(),e.stopPropagation(),d.toggleClass(s),p.toggleClass(s)})),r.show=function(){e.$el.removeClass(l),d.removeClass(s),p.removeClass(s),n.trigger("activate"),d.parents(".tota11y-info-section")[0].scrollTop=d[0].offsetTop-10},r.$trigger=d;var f=u.find(".tota11y-info-error-scroll");f.click((function(e){e.preventDefault(),e.stopPropagation(),o(document).scrollTop(r.$el.offset().top-80)})),0===c&&(p.toggleClass(s),d.toggleClass(s)),a.toggleHighlight(r.$el,d),a.toggleHighlight(r.$el,f);var h=r.$el[0].outerHTML;h.length>300&&(h=h.substring(0,300)+"..."),u.find(".tota11y-info-error-description-code-container code").text(h)})),n=r=e._addTab("Errors",t);var c=o("<div>").addClass("tota11y-info-error-count").text(e.errors.length);r.find(".tota11y-info-tab-anchor").append(c)}(),r&&(r.trigger("activate"),n=!0),n&&this.initAndPosition(),this.$el.focus(),this.$el}},{key:"destroy",value:function(){this.about=null,this.summary=null,this.errors=[],this.$el&&(this.$el.remove(),this.$el=null),a.removeAll()}}]),e}();e.exports=c}).call(t,n(4))},function(e,t,n){(e.exports=n(5)()).push([e.id,".tota11y-dark-color-scheme{background-color:#333!important;color:#f2f2f2!important}.tota11y-no-select{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.tota11y,.tota11y *{border:none!important;background-color:inherit!important;box-sizing:border-box!important;color:#f2f2f2!important;font-family:Arial!important;font-size:14px!important;font-style:normal!important;font-weight:400!important;line-height:1.35!important;margin:0!important;padding:0!important;text-align:left!important;text-shadow:none!important}.tota11y p,.tota11y pre{margin:0 0 10px!important}.tota11y *{height:auto!important;width:auto!important}.tota11y-toolbar-logo,.tota11y-toolbar-logo svg{height:25px!important}.tota11y strong{font-weight:700!important}.tota11y code,.tota11y pre{background-color:#ddd!important;border:none!important;border-radius:0!important;color:inherit!important;font-family:monospace!important;font-size:inherit!important;line-height:inherit!important}.tota11y pre{padding:5px 10px!important;overflow-x:scroll!important}.tota11y code{border-radius:2px!important;display:inline!important;padding:1px!important}.tota11y em,.tota11y i{font-style:italic!important}.tota11y a,.tota11y a:focus,.tota11y a:hover{background-color:inherit!important;color:inherit!important;text-decoration:none!important}.tota11y-toolbar{background-color:#333!important;color:#f2f2f2!important;position:fixed!important;top:auto!important;right:auto!important;bottom:0!important;left:10px!important;border-top-left-radius:5px!important;border-top-right-radius:5px!important;overflow:hidden!important;z-index:9998!important}.tota11y-toolbar-toggle{background-color:#333!important;display:block!important;padding:7px!important;width:100%!important}.tota11y-toolbar-logo{margin:0 auto!important;text-align:center!important;width:35px!important}.tota11y-toolbar-body{display:none!important}.tota11y-toolbar.tota11y-expanded .tota11y-toolbar-body{display:block!important}.tota11y-sr-only{border:0!important;clip:rect(0,0,0,0)!important;height:1px!important;margin:-1px!important;overflow:hidden!important;padding:0!important;position:absolute!important;width:1px!important}",""])},function(e,t,n){(e.exports=n(5)()).push([e.id,".tota11y-dark-color-scheme{background-color:#333!important;color:#f2f2f2!important}.tota11y-no-select{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.tota11y-outlined{outline:#7882c8 solid 2px!important}.tota11y-nothingness{color:#888!important}",""])},function(e,t,n){(e.exports=n(5)()).push([e.id,".tota11y-swatches{margin-left:5px!important;margin-right:5px!important;position:relative!important;top:1px!important}.tota11y-swatch{border:1px solid #000!important;display:inline-block!important;height:12px!important;width:12px!important}.tota11y-contrast-suggestion{margin:0 0 15px 15px!important}.tota11y-color-hexes{font-family:monospace!important}",""])},function(e,t,n){(e.exports=n(5)()).push([e.id,".tota11y-dark-color-scheme{background-color:#333!important;color:#f2f2f2!important}.tota11y-no-select{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.tota11y-heading-outline{color:#333!important}.tota11y-heading-outline-entry{margin-bottom:8px!important}.tota11y-heading-outline-entry.heading-level-1{margin-left:0!important}.tota11y-heading-outline-entry.heading-level-2{margin-left:20px!important}.tota11y-heading-outline-entry.heading-level-3{margin-left:40px!important}.tota11y-heading-outline-entry.heading-level-4{margin-left:60px!important}.tota11y-heading-outline-entry.heading-level-5{margin-left:80px!important}.tota11y-heading-outline-entry.heading-level-6{margin-left:100px!important}.tota11y-heading-outline-level{position:relative!important;top:-2px!important;right:auto!important;bottom:auto!important;left:auto!important;margin-right:5px!important;padding:2px 3px!important;pointer-events:none!important}",""])},function(e,t,n){(e.exports=n(5)()).push([e.id,".tota11y-label-help,.tota11y-label-text{float:left!important}.tota11y-dark-color-scheme{background-color:#333!important;color:#f2f2f2!important}.tota11y-no-select{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.tota11y-label{background-color:#ffe800!important;border:1px solid rgba(0,0,0,.1)!important;cursor:default!important;padding:3px!important;position:absolute!important;z-index:9997!important}.tota11y-label-error{background-color:#ffaeae!important}.tota11y-label-error-icon{display:block!important;float:left!important;margin-right:3px!important;width:12px!important}.tota11y-label-success{background-color:#b9eda9!important}.tota11y-label-warning{background-color:#ffe800!important}.tota11y-label,.tota11y-label-detail,.tota11y-label-help,.tota11y-label-link,.tota11y-label-text{color:#333!important;font-size:12px!important}.tota11y-label-detail{clear:both!important;display:none!important;max-width:300px!important}.tota11y-label:hover .tota11y-label-detail{display:block!important}.tota11y-label-help{margin-left:5px!important}.tota11y-label-link:focus,.tota11y-label-link:hover{opacity:.6!important;text-decoration:underline!important}.tota11y-highlight{background-color:rgba(120,130,200,.4)!important;pointer-events:none!important;position:absolute!important;z-index:9999!important}",""])},function(e,t,n){(e.exports=n(5)()).push([e.id,".tota11y-dark-color-scheme,.tota11y-info{background-color:#333!important;color:#f2f2f2!important}.tota11y-no-select{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.tota11y-info{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important;border-radius:5px!important;position:fixed!important;z-index:9998!important}.tota11y-info-section,.tota11y-info-section *,.tota11y-info-tab.active .tota11y-info-tab-anchor-text{color:#333!important}.tota11y-info-controls{float:right!important}.tota11y-info-annotation-toggle{float:left!important;margin-right:10px!important}.tota11y-info-hidden{display:none!important}.tota11y-info-dismiss-trigger{font-size:25px!important;line-height:25px!important;position:relative!important;top:-2px!important}.tota11y-info-section,.tota11y-info-tab-anchor{top:0!important;right:0!important;bottom:0!important;left:0!important}.tota11y-info-body,.tota11y-info-title{padding:10px 10px 0!important}.tota11y-info-title:hover{cursor:move!important}.tota11y-info-tabs{display:-webkit-box!important;display:flex!important;margin:0!important;padding:0 0 10px!important}.tota11y-info-tab{height:30px!important;list-style:none!important;position:relative!important;text-align:center!important;width:100%!important;-webkit-box-flex:1!important;flex-grow:1!important}.tota11y-info-tab-anchor{position:absolute!important;text-align:center!important}.tota11y-info-tab-anchor-text{line-height:30px!important}.tota11y-info-tab:hover{background-color:#555!important}.tota11y-info-section,.tota11y-info-tab.active,.tota11y-info-tab.active:hover{background-color:#f2f2f2!important}.tota11y-info-sections{position:relative!important;height:270px!important;width:400px!important}.tota11y-info-section{position:absolute!important;display:none!important;overflow-y:scroll!important;padding:10px!important}.tota11y-info-error-trigger,.tota11y-info-section.active{display:block!important}.tota11y-info-errors{margin:0!important;padding:0!important}.tota11y-info-error{list-style:none!important;margin-bottom:10px!important}.tota11y-info-error-trigger.trigger-highlight{background-color:rgba(120,130,200,.4)!important}.tota11y-info-error-chevron{display:inline-block!important;font-size:20px!important;height:14px!important;line-height:14px!important;margin-right:3px!important;-webkit-transform:rotateZ(90deg)!important;transform:rotateZ(90deg)!important;-webkit-transform-origin:3px 8px!important;transform-origin:3px 8px!important;-webkit-transition:-webkit-transform ease-in-out 50ms!important;transition:transform ease-in-out 50ms!important}.tota11y-info-error-trigger.tota11y-collapsed .tota11y-info-error-chevron{-webkit-transform:rotateZ(0)!important;transform:rotateZ(0)!important}.tota11y-info-error-title{font-weight:700!important}.tota11y-info-error-scroll{float:right!important;margin-top:3px!important;padding-left:5px!important}.tota11y-info-error-scroll-glyph{border-color:#333!important}.tota11y-info-error-scroll:hover .tota11y-info-error-scroll-glyph{border-color:#999!important}.tota11y-info-error-scroll-lens{border:1px solid!important;border-radius:50%!important;height:8px!important;width:8px!important}.tota11y-info-error-scroll-handle{border-left:1px solid!important;height:7px!important;-webkit-transform:translateX(-2px) translateY(-2px) rotate(45deg)!important;transform:translateX(-2px) translateY(-2px) rotate(45deg)!important;width:1px!important}.tota11y-info-error-description{font-size:13px!important;padding:10px 0 0!important;-webkit-user-select:text!important;-moz-user-select:text!important;-ms-user-select:text!important;user-select:text!important}.tota11y-info-error-description-code-container{margin-top:10px!important}.tota11y-info-error-description-code-container code{display:block!important;margin-top:10px!important;padding:5px 10px!important;word-wrap:break-word!important}.tota11y-info-error-description.tota11y-collapsed{display:none!important}.tota11y-info-error-count{background-color:red!important;border-radius:20px!important;color:#fff!important;display:inline!important;margin-left:5px!important;padding:1px 8px!important}",""])},function(e,t,n){(e.exports=n(5)()).push([e.id,".tota11y-dark-color-scheme{background-color:#333!important;color:#f2f2f2!important}.tota11y-no-select{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.tota11y-plugin{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important;border-bottom:1px solid #555!important;list-style:none!important}.tota11y-plugin-switch{-webkit-box-align:center!important;align-items:center!important;cursor:pointer!important;display:-webkit-box!important;display:flex!important;padding:12px 12px 12px 0!important;margin:0!important}.tota11y-plugin-indicator{margin:0 15px!important;border-radius:16px!important;border:1px solid #999!important;color:transparent!important;font-size:13px!important;height:16px!important;line-height:16px!important;padding:0 0 0 1px!important;width:16px!important}.tota11y-plugin-checkbox:focus+.tota11y-plugin-indicator{border-color:#639b24!important;background-color:#49721a!important;color:#49721a!important}.tota11y-plugin-checkbox:checked+.tota11y-plugin-indicator{background-color:#639b24!important;border-color:#639b24!important;color:#fff!important}.tota11y-plugin-title{font-weight:700!important}.tota11y-plugin-description{font-size:11px!important;font-style:italic!important;width:200px!important;margin-right:3px!important}.tota11y-plugins-separator{font-size:12px!important;margin:7px 15px 0!important;text-transform:uppercase!important}",""])},function(e,t,n){var r=n(6);e.exports=(r.default||r).template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,r){var o,a=t.helperMissing,i="function",s=this.escapeExpression;return'<div>\n    <p>\n        The color combination\n        <span class="tota11y-color-hexes">'+s(typeof(o=null!=(o=t.fgColorHex||(null!=e?e.fgColorHex:e))?o:a)===i?o.call(e,{name:"fgColorHex",hash:{},data:r}):o)+"/"+s(typeof(o=null!=(o=t.bgColorHex||(null!=e?e.bgColorHex:e))?o:a)===i?o.call(e,{name:"bgColorHex",hash:{},data:r}):o)+"</span>\n        has a contrast ratio of <strong>"+s(typeof(o=null!=(o=t.contrastRatio||(null!=e?e.contrastRatio:e))?o:a)===i?o.call(e,{name:"contrastRatio",hash:{},data:r}):o)+"</strong>, which is not\n        sufficient. At this size, you will need a ratio of at least\n        <strong>"+s(typeof(o=null!=(o=t.requiredRatio||(null!=e?e.requiredRatio:e))?o:a)===i?o.call(e,{name:"requiredRatio",hash:{},data:r}):o)+'</strong>.\n    </p>\n\n    <p>\n        Consider using the following foreground/background combination:\n    </p>\n\n    <div class="tota11y-contrast-suggestion">\n        <span class="tota11y-color-hexes">\n            '+s(typeof(o=null!=(o=t.suggestedFgColorHex||(null!=e?e.suggestedFgColorHex:e))?o:a)===i?o.call(e,{name:"suggestedFgColorHex",hash:{},data:r}):o)+"/"+s(typeof(o=null!=(o=t.suggestedBgColorHex||(null!=e?e.suggestedBgColorHex:e))?o:a)===i?o.call(e,{name:"suggestedBgColorHex",hash:{},data:r}):o)+'\n        </span>\n\n        <span class="tota11y-swatches">\n            <span\n                class="tota11y-swatch"\n                style="background-color: '+s(typeof(o=null!=(o=t.suggestedFgColorHex||(null!=e?e.suggestedFgColorHex:e))?o:a)===i?o.call(e,{name:"suggestedFgColorHex",hash:{},data:r}):o)+' !important">\n            </span>\n            /\n            <span\n                class="tota11y-swatch"\n                style="background-color: '+s(typeof(o=null!=(o=t.suggestedBgColorHex||(null!=e?e.suggestedBgColorHex:e))?o:a)===i?o.call(e,{name:"suggestedBgColorHex",hash:{},data:r}):o)+' !important">\n            </span>\n        </span>\n\n        has a ratio of <strong>'+s(typeof(o=null!=(o=t.suggestedColorsRatio||(null!=e?e.suggestedColorsRatio:e))?o:a)===i?o.call(e,{name:"suggestedColorsRatio",hash:{},data:r}):o)+'</strong>\n        <br />\n\n        <label>\n            Preview:\n            <input class="preview-contrast-fix" type="checkbox">\n        </label>\n    </div>\n</div>\n'},useData:!0})},function(e,t,n){var r=n(6);e.exports=(r.default||r).template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,r){var o,a=t.helperMissing,i="function",s=this.escapeExpression;return"Insufficient contrast ratio ("+s(typeof(o=null!=(o=t.contrastRatio||(null!=e?e.contrastRatio:e))?o:a)===i?o.call(e,{name:"contrastRatio",hash:{},data:r}):o)+" &lt; "+s(typeof(o=null!=(o=t.requiredRatio||(null!=e?e.requiredRatio:e))?o:a)===i?o.call(e,{name:"requiredRatio",hash:{},data:r}):o)+')\n\n<span class="tota11y-swatches">\n    <span class="tota11y-swatch" style="background-color: '+s(typeof(o=null!=(o=t.fgColorHex||(null!=e?e.fgColorHex:e))?o:a)===i?o.call(e,{name:"fgColorHex",hash:{},data:r}):o)+' !important"></span>\n    /\n    <span class="tota11y-swatch" style="background-color: '+s(typeof(o=null!=(o=t.bgColorHex||(null!=e?e.bgColorHex:e))?o:a)===i?o.call(e,{name:"bgColorHex",hash:{},data:r}):o)+' !important"></span>\n</span>\n'},useData:!0})},function(e,t,n){var r=n(6);e.exports=(r.default||r).template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,r){var o,a=t.helperMissing,i="function",s=this.escapeExpression;return'<div class="tota11y-heading-outline-entry heading-level-'+s(typeof(o=null!=(o=t.level||(null!=e?e.level:e))?o:a)===i?o.call(e,{name:"level",hash:{},data:r}):o)+'">\n    <span class="tota11y-heading-outline-level tota11y-label">'+s(typeof(o=null!=(o=t.level||(null!=e?e.level:e))?o:a)===i?o.call(e,{name:"level",hash:{},data:r}):o)+'</span>\n    <span class="tota11y-heading-outline-heading-text">'+s(typeof(o=null!=(o=t.text||(null!=e?e.text:e))?o:a)===i?o.call(e,{name:"text",hash:{},data:r}):o)+"</span>\n</div>\n"},useData:!0})},function(e,t,n){var r=n(6);e.exports=(r.default||r).template({1:function(e,t,n,r){return"    <p>\n        The <code>placeholder</code> attribute is not guaranteed to be read by\n        assistive technologies. It is better to include a proper label.\n    </p>\n"},3:function(e,t,n,r){var o;return'    <p>\n        The simplest way to do so is by creating a <code>&lt;label&gt;</code>\n        tag with a <code>for</code> attribute like so:\n    </p>\n\n    <pre><code>&lt;label for="'+this.escapeExpression("function"==typeof(o=null!=(o=t.id||(null!=e?e.id:e))?o:t.helperMissing)?o.call(e,{name:"id",hash:{},data:r}):o)+'"&gt;\n    Label text here...\n&lt;/label&gt;</code></pre>\n'},5:function(e,t,n,r){var o;return'    <p>\n        You can give this element an <code>id</code> attribute and build a\n        <code>&lt;label&gt;</code> with a corresponding <code>for</code>\n        attribute like so:\n\n        <pre><code>&lt;label for="my-input"&gt;\n    Label text here...\n&lt;/label&gt;\n&lt;'+this.escapeExpression("function"==typeof(o=null!=(o=t.tagName||(null!=e?e.tagName:e))?o:t.helperMissing)?o.call(e,{name:"tagName",hash:{},data:r}):o)+' id="my-input"&gt;</code></pre>\n    </p>\n'},compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,r){var o;return(null!=(o=t.if.call(e,null!=e?e.placeholder:e,{name:"if",hash:{},fn:this.program(1,r,0),inverse:this.noop,data:r}))?o:"")+"\n"+(null!=(o=t.if.call(e,null!=e?e.id:e,{name:"if",hash:{},fn:this.program(3,r,0),inverse:this.program(5,r,0),data:r}))?o:"")},useData:!0})},function(e,t,n){var r=n(6);e.exports=(r.default||r).template({1:function(e,t,n,r){return'        <div class="tota11y-label-help">\n            (<a class="tota11y-label-link" href="#">?</a>)\n        </div>\n'},compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,r){var o,a,i=t.helperMissing,s="function";return'<span class="tota11y-label-error-icon">\n    \x3c!--\n        "Warning" icon by Lorena Salagre\n        https://thenounproject.com/lorens/\n\n        Licensed under Creative Commons by 3.0 US\n        http://creativecommons.org/licenses/by/3.0/us/legalcode\n    --\x3e\n    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">\n        <path d="M80.515,90.781H19.485c-6.145,0-10.779-2.168-13.052-6.103c-2.273-3.938-1.832-9.036,1.24-14.356l30.515-52.851  c3.07-5.321,7.266-8.251,11.811-8.251s8.741,2.93,11.811,8.251l30.515,52.851c3.072,5.32,3.513,10.418,1.24,14.356  C91.293,88.613,86.659,90.781,80.515,90.781z M50,12.384c-3.367,0-6.59,2.369-9.071,6.669L10.415,71.904  c-2.483,4.3-2.924,8.275-1.24,11.191c1.683,2.916,5.345,4.521,10.311,4.521h61.029c4.966,0,8.628-1.605,10.311-4.521  c1.683-2.916,1.243-6.89-1.24-11.191L59.071,19.053C56.59,14.753,53.367,12.384,50,12.384z M56.227,72.18  c0-3.172-2.572-5.744-5.744-5.744s-5.744,2.572-5.744,5.744c0,3.172,2.572,5.744,5.744,5.744S56.227,75.352,56.227,72.18z   M56.382,37.613c0-3.257-2.641-5.898-5.898-5.898c-3.257,0-5.898,2.641-5.898,5.898l1.393,20.932h0.019  c0.202,2.312,2.121,4.132,4.486,4.132c2.187,0,4.012-1.551,4.434-3.613c0.034-0.167,0.037-0.345,0.052-0.518h0.04L56.382,37.613z"/>\n    </svg>\n</span>\n\n<span class="tota11y-label-content">\n    <div class="tota11y-label-text">'+(null!=(o=typeof(a=null!=(a=t.text||(null!=e?e.text:e))?a:i)===s?a.call(e,{name:"text",hash:{},data:r}):a)?o:"")+"</div>\n"+(null!=(o=t.if.call(e,null!=e?e.hasErrorEntry:e,{name:"if",hash:{},fn:this.program(1,r,0),inverse:this.noop,data:r}))?o:"")+'    <div class="tota11y-label-detail">'+(null!=(o=typeof(a=null!=(a=t.detail||(null!=e?e.detail:e))?a:i)===s?a.call(e,{name:"detail",hash:{},data:r}):a)?o:"")+"</div>\n</span>\n"},useData:!0})},function(e,t,n){var r=n(6);e.exports=(r.default||r).template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,r){var o,a;return'<li class="tota11y-info-error">\n    <a aria-label="Scroll to error" href="#" class="tota11y-info-error-scroll">\n        <div class="tota11y-info-error-scroll-glyph tota11y-info-error-scroll-lens"></div>\n        <div class="tota11y-info-error-scroll-glyph tota11y-info-error-scroll-handle"></div>\n    </a>\n    <a href="#" class="tota11y-info-error-trigger tota11y-collapsed">\n        <div class="tota11y-info-error-title">\n            <span class="tota11y-info-error-chevron">\n                &#8250;\n            </span>\n            '+(null!=(o="function"==typeof(a=null!=(a=t.title||(null!=e?e.title:e))?a:t.helperMissing)?a.call(e,{name:"title",hash:{},data:r}):a)?o:"")+'\n        </div>\n    </a>\n    <div class="tota11y-info-error-description tota11y-collapsed">\n        <div class="tota11y-info-error-description-code-container">\n            <em>Relevant code:</em>\n            <code></code>\n        </div>\n    </div>\n</li>\n'},useData:!0})},function(e,t,n){var r=n(6);e.exports=(r.default||r).template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,r){return'\x3c!--\n    "Glasses" icon by Kyle Scott\n    https://thenounproject.com/Kyle/\n\n    Licensed under Creative Commons by 3.0 US\n    http://creativecommons.org/licenses/by/3.0/us/legalcode\n--\x3e\n<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">\n    <path fill="#ffffff" d="M74.466,35.24c-1.069-0.19-2.208-0.267-3.228-0.562c-0.639-0.184-1.348-0.622-1.965-1.075  c-1.246-0.919-2.479-1.557-3.928-2.152c-0.671-0.276-1.617-0.698-2.432-0.608c-0.582,0.064-1.196,0.664-1.73,1.029  c-1.196,0.818-2.186,1.442-3.32,2.198c-0.524,0.35-1.308,0.798-1.543,1.263c-0.142,0.279-0.13,0.736-0.281,1.029  c-0.35,0.679-1.069,1.434-1.777,1.403c-0.835-0.038-1.773-1.518-1.449-2.619c0.177-0.602,1.126-0.902,1.776-1.262  c2.041-1.134,3.803-2.3,5.52-3.602c1.106-0.841,2.579-1.471,4.536-1.542c1.889-0.071,4.45-0.083,6.22,0  c1.465,0.066,2.698,0.164,3.976,0.42c7.308,1.469,14.698,2.788,21.607,4.77c0.739,0.213,2.896,0.613,3.086,1.311  c0.121,0.439-0.236,1.435-0.375,2.151c-0.165,0.865-0.292,1.626-0.42,2.246c-0.12,0.574-0.65,1.174-0.936,1.776  c-0.842,1.778-1.379,3.821-2.104,5.753c-0.954,2.545-2.02,4.859-3.554,6.968c-1.46,2.005-3.442,3.33-5.987,4.536  c-1.128,0.534-2.43,1.083-3.835,1.403c-1.355,0.311-3.263,0.63-4.817,0.28c-2.233-0.501-3.081-2.543-3.882-4.536  c-0.848-2.115-1.351-4.049-1.636-6.827c-2.692,0.176-3.259,2.014-4.163,3.928c-0.384,0.812-0.792,1.623-1.168,2.385  c-1.542,3.115-3.197,6.47-5.473,8.746c-1.215,1.213-2.581,2.03-4.35,2.758c-3.331,1.373-6.847,2.569-10.757,3.462  c-3.598,0.821-8.923,1.642-12.252-0.093c-2.136-1.113-3.105-3.939-4.023-6.268c-0.458-1.159-0.835-2.459-1.262-3.882  c-0.378-1.259-0.708-2.778-1.543-3.602c-1.053-1.037-2.78-1.414-3.227-2.993c-0.815-0.307-1.563-0.821-2.292-1.308  c-4.349-2.915-8.693-5.774-13.141-8.606c-0.727-0.462-1.667-0.958-2.151-1.497c-0.712-0.792-1.108-2.117-1.684-3.133  c-0.265-0.469-0.588-0.92-0.888-1.357c-0.275-0.4-0.536-0.997-1.076-1.076C2.223,36.823,2.365,37.469,2.349,38  c-0.017,0.549-0.077,1.172-0.047,1.823c0.028,0.606,0.297,1.049,0.28,1.544c-0.018,0.515-0.291,1.036-0.841,1.029  c-0.727-0.009-0.8-0.98-0.983-1.686c-0.209-0.807-0.483-1.551-0.421-2.245c0.049-0.531,0.341-1.223,0.468-2.057  c0.246-1.599,0.126-3.078,1.451-3.415C3.004,32.804,4,33.38,4.781,33.649c0.789,0.272,1.597,0.428,2.339,0.702  c0.854,0.316,1.706,0.875,2.524,1.355c2.526,1.484,4.626,3.112,7.062,4.63c3.273,2.041,6.545,3.955,9.307,6.267  c7.434-2.179,16.722-3.566,25.863-4.302c4.176-0.337,8.326-0.174,12.253,0.374c5.624,0.787,10.073-1.58,13.844-3.18  c2.035-0.864,4.078-1.653,6.173-2.573C80.804,36.331,77.705,35.814,74.466,35.24z M93.968,39.729  c-1.838-0.388-3.732-0.737-5.471-1.075c-0.059-0.012-0.127-0.067-0.188-0.046c-1.143,0.392-2.279,0.613-3.367,1.029  c-2.033,0.773-4.015,1.775-5.752,3.039C78.33,43.3,77.372,44,76.897,44.733c-1.609,2.489-1.206,7.214-0.467,10.149  c0.27,1.071,0.411,1.79,0.889,2.666c3.022,1.287,6.88-0.183,8.885-1.684c1.526-1.142,2.676-2.75,3.602-4.35  C91.815,48.042,93.102,43.946,93.968,39.729z M64.878,46.089c-6.121-1.937-14.865-0.822-21.232,0.467  c-4.477,0.907-9.474,1.92-10.944,5.753c-0.801,2.086-1.009,5.098-0.701,7.903c0.284,2.599,1.076,4.892,2.011,6.594  c2.943,2.698,10.038,1.581,14.124,0.375c2.523-0.745,4.112-1.389,5.845-2.197c1.973-0.921,4.636-1.939,5.285-4.116  c0.179-0.597,0.115-1.244,0.188-1.824c0.492-3.909,1.942-7.447,4.303-9.634c0.477-0.441,1.146-0.679,1.357-1.262  C65.37,47.428,65.13,46.709,64.878,46.089z"/>\n</svg>\n'},useData:!0})},function(e,t,n){"use strict";function r(){var e=new a.HandlebarsEnvironment;return l.extend(e,a),e.SafeString=i.default,e.Exception=s.default,e.Utils=l,e.escapeExpression=l.escapeExpression,e.VM=c,e.template=function(t){return c.template(t,e)},e}var o=function(e){return e&&e.__esModule?e:{default:e}};t.__esModule=!0;var a=o(n(12)),i=o(n(39)),s=o(n(9)),l=o(n(10)),c=o(n(38)),u=o(n(37)),d=r();d.create=r,u.default(d),d.default=d,t.default=d,e.exports=t.default},function(e,t){(function(n){"use strict";t.__esModule=!0,t.default=function(e){var t=void 0!==n?n:window,r=t.Handlebars;e.noConflict=function(){t.Handlebars===e&&(t.Handlebars=r)}},e.exports=t.default}).call(t,function(){return this}())},function(e,t,n){"use strict";function r(e,t,n,r,o,a,i){function s(t){var o=void 0===arguments[1]?{}:arguments[1];return n.call(e,t,e.helpers,e.partials,o.data||r,a&&[o.blockParams].concat(a),i&&[t].concat(i))}return s.program=t,s.depth=i?i.length:0,s.blockParams=o||0,s}var o=function(e){return e&&e.__esModule?e:{default:e}};t.__esModule=!0,t.checkRevision=function(e){var t=e&&e[0]||1,n=s.COMPILER_REVISION;if(t!==n){if(n>t){var r=s.REVISION_CHANGES[n],o=s.REVISION_CHANGES[t];throw new i.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+r+") or downgrade your runtime to an older version ("+o+").")}throw new i.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+e[1]+").")}},t.template=function(e,t){function n(t){var r=void 0===arguments[1]?{}:arguments[1],a=r.data;n._setup(r),!r.partial&&e.useData&&(a=function(e,t){return t&&"root"in t||((t=t?s.createFrame(t):{}).root=e),t}(t,a));var i=void 0,l=e.useBlockParams?[]:void 0;return e.useDepths&&(i=r.depths?[t].concat(r.depths):[t]),e.main.call(o,t,o.helpers,o.partials,a,l,i)}if(!t)throw new i.default("No environment passed to template");if(!e||!e.main)throw new i.default("Unknown template object: "+typeof e);t.VM.checkRevision(e.compiler);var o={strict:function(e,t){if(!(t in e))throw new i.default('"'+t+'" not defined in '+e);return e[t]},lookup:function(e,t){for(var n=e.length,r=0;n>r;r++)if(e[r]&&null!=e[r][t])return e[r][t]},lambda:function(e,t){return"function"==typeof e?e.call(t):e},escapeExpression:a.escapeExpression,invokePartial:function(n,r,o){o.hash&&(r=a.extend({},r,o.hash)),n=t.VM.resolvePartial.call(this,n,r,o);var s=t.VM.invokePartial.call(this,n,r,o);if(null==s&&t.compile&&(o.partials[o.name]=t.compile(n,e.compilerOptions,t),s=o.partials[o.name](r,o)),null!=s){if(o.indent){for(var l=s.split("\n"),c=0,u=l.length;u>c&&(l[c]||c+1!==u);c++)l[c]=o.indent+l[c];s=l.join("\n")}return s}throw new i.default("The partial "+o.name+" could not be compiled when running in runtime-only mode")},fn:function(t){return e[t]},programs:[],program:function(e,t,n,o,a){var i=this.programs[e],s=this.fn(e);return t||a||o||n?i=r(this,e,s,t,n,o,a):i||(i=this.programs[e]=r(this,e,s)),i},data:function(e,t){for(;e&&t--;)e=e._parent;return e},merge:function(e,t){var n=e||t;return e&&t&&e!==t&&(n=a.extend({},t,e)),n},noop:t.VM.noop,compilerInfo:e.compiler};return n.isTop=!0,n._setup=function(n){n.partial?(o.helpers=n.helpers,o.partials=n.partials):(o.helpers=o.merge(n.helpers,t.helpers),e.usePartial&&(o.partials=o.merge(n.partials,t.partials)))},n._child=function(t,n,a,s){if(e.useBlockParams&&!a)throw new i.default("must pass block params");if(e.useDepths&&!s)throw new i.default("must pass parent depths");return r(o,t,e[t],n,0,a,s)},n},t.wrapProgram=r,t.resolvePartial=function(e,t,n){return e?e.call||n.name||(n.name=e,e=n.partials[e]):e=n.partials[n.name],e},t.invokePartial=function(e,t,n){if(n.partial=!0,void 0===e)throw new i.default("The partial "+n.name+" could not be found");return e instanceof Function?e(t,n):void 0},t.noop=function(){return""};var a=o(n(10)),i=o(n(9)),s=n(12)},function(e,t){"use strict";function n(e){this.string=e}t.__esModule=!0,n.prototype.toString=n.prototype.toHTML=function(){return""+this.string},t.default=n,e.exports=t.default},function(e,t){e.exports='/*\n * Copyright 2015 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Generated from http://github.com/GoogleChrome/accessibility-developer-tools/tree/952a710bc74ae546473b239e32b76cb3946c6fad\n *\n * See project README for build steps.\n */\n\n// AUTO-GENERATED CONTENT BELOW: DO NOT EDIT! See above for details.\n\nvar fn = (function() {\n  var COMPILED = !0, goog = goog || {};\ngoog.global = this;\ngoog.isDef = function(a) {\n  return void 0 !== a;\n};\ngoog.exportPath_ = function(a, b, c) {\n  a = a.split(".");\n  c = c || goog.global;\n  a[0] in c || !c.execScript || c.execScript("var " + a[0]);\n  for (var d;a.length && (d = a.shift());) {\n    !a.length && goog.isDef(b) ? c[d] = b : c = c[d] ? c[d] : c[d] = {};\n  }\n};\ngoog.define = function(a, b) {\n  var c = b;\n  COMPILED || (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, a) ? c = goog.global.CLOSURE_UNCOMPILED_DEFINES[a] : goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (c = goog.global.CLOSURE_DEFINES[a]));\n  goog.exportPath_(a, c);\n};\ngoog.DEBUG = !0;\ngoog.LOCALE = "en";\ngoog.TRUSTED_SITE = !0;\ngoog.STRICT_MODE_COMPATIBLE = !1;\ngoog.provide = function(a) {\n  if (!COMPILED) {\n    if (goog.isProvided_(a)) {\n      throw Error(\'Namespace "\' + a + \'" already declared.\');\n    }\n    delete goog.implicitNamespaces_[a];\n    for (var b = a;(b = b.substring(0, b.lastIndexOf("."))) && !goog.getObjectByName(b);) {\n      goog.implicitNamespaces_[b] = !0;\n    }\n  }\n  goog.exportPath_(a);\n};\ngoog.setTestOnly = function(a) {\n  if (COMPILED && !goog.DEBUG) {\n    throw a = a || "", Error("Importing test-only code into non-debug environment" + a ? ": " + a : ".");\n  }\n};\ngoog.forwardDeclare = function(a) {\n};\nCOMPILED || (goog.isProvided_ = function(a) {\n  return !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));\n}, goog.implicitNamespaces_ = {});\ngoog.getObjectByName = function(a, b) {\n  for (var c = a.split("."), d = b || goog.global, e;e = c.shift();) {\n    if (goog.isDefAndNotNull(d[e])) {\n      d = d[e];\n    } else {\n      return null;\n    }\n  }\n  return d;\n};\ngoog.globalize = function(a, b) {\n  var c = b || goog.global, d;\n  for (d in a) {\n    c[d] = a[d];\n  }\n};\ngoog.addDependency = function(a, b, c) {\n  if (goog.DEPENDENCIES_ENABLED) {\n    var d;\n    a = a.replace(/\\\\/g, "/");\n    for (var e = goog.dependencies_, f = 0;d = b[f];f++) {\n      e.nameToPath[d] = a, a in e.pathToNames || (e.pathToNames[a] = {}), e.pathToNames[a][d] = !0;\n    }\n    for (d = 0;b = c[d];d++) {\n      a in e.requires || (e.requires[a] = {}), e.requires[a][b] = !0;\n    }\n  }\n};\ngoog.ENABLE_DEBUG_LOADER = !0;\ngoog.require = function(a) {\n  if (!COMPILED && !goog.isProvided_(a)) {\n    if (goog.ENABLE_DEBUG_LOADER) {\n      var b = goog.getPathFromDeps_(a);\n      if (b) {\n        goog.included_[b] = !0;\n        goog.writeScripts_();\n        return;\n      }\n    }\n    a = "goog.require could not find: " + a;\n    goog.global.console && goog.global.console.error(a);\n    throw Error(a);\n  }\n};\ngoog.basePath = "";\ngoog.nullFunction = function() {\n};\ngoog.identityFunction = function(a, b) {\n  return a;\n};\ngoog.abstractMethod = function() {\n  throw Error("unimplemented abstract method");\n};\ngoog.addSingletonGetter = function(a) {\n  a.getInstance = function() {\n    if (a.instance_) {\n      return a.instance_;\n    }\n    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);\n    return a.instance_ = new a;\n  };\n};\ngoog.instantiatedSingletons_ = [];\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\ngoog.DEPENDENCIES_ENABLED && (goog.included_ = {}, goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}}, goog.inHtmlDocument_ = function() {\n  var a = goog.global.document;\n  return "undefined" != typeof a && "write" in a;\n}, goog.findBasePath_ = function() {\n  if (goog.global.CLOSURE_BASE_PATH) {\n    goog.basePath = goog.global.CLOSURE_BASE_PATH;\n  } else {\n    if (goog.inHtmlDocument_()) {\n      for (var a = goog.global.document.getElementsByTagName("script"), b = a.length - 1;0 <= b;--b) {\n        var c = a[b].src, d = c.lastIndexOf("?"), d = -1 == d ? c.length : d;\n        if ("base.js" == c.substr(d - 7, 7)) {\n          goog.basePath = c.substr(0, d - 7);\n          break;\n        }\n      }\n    }\n  }\n}, goog.importScript_ = function(a) {\n  var b = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;\n  !goog.dependencies_.written[a] && b(a) && (goog.dependencies_.written[a] = !0);\n}, goog.writeScriptTag_ = function(a) {\n  if (goog.inHtmlDocument_()) {\n    var b = goog.global.document;\n    if ("complete" == b.readyState) {\n      if (/\\bdeps.js$/.test(a)) {\n        return !1;\n      }\n      throw Error(\'Cannot write "\' + a + \'" after document load\');\n    }\n    b.write(\'<script type="text/javascript" src="\' + a + \'">\\x3c/script>\');\n    return !0;\n  }\n  return !1;\n}, goog.writeScripts_ = function() {\n  function a(e) {\n    if (!(e in d.written)) {\n      if (!(e in d.visited) && (d.visited[e] = !0, e in d.requires)) {\n        for (var g in d.requires[e]) {\n          if (!goog.isProvided_(g)) {\n            if (g in d.nameToPath) {\n              a(d.nameToPath[g]);\n            } else {\n              throw Error("Undefined nameToPath for " + g);\n            }\n          }\n        }\n      }\n      e in c || (c[e] = !0, b.push(e));\n    }\n  }\n  var b = [], c = {}, d = goog.dependencies_, e;\n  for (e in goog.included_) {\n    d.written[e] || a(e);\n  }\n  for (e = 0;e < b.length;e++) {\n    if (b[e]) {\n      goog.importScript_(goog.basePath + b[e]);\n    } else {\n      throw Error("Undefined script input");\n    }\n  }\n}, goog.getPathFromDeps_ = function(a) {\n  return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null;\n}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + "deps.js"));\ngoog.typeOf = function(a) {\n  var b = typeof a;\n  if ("object" == b) {\n    if (a) {\n      if (a instanceof Array) {\n        return "array";\n      }\n      if (a instanceof Object) {\n        return b;\n      }\n      var c = Object.prototype.toString.call(a);\n      if ("[object Window]" == c) {\n        return "object";\n      }\n      if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) {\n        return "array";\n      }\n      if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) {\n        return "function";\n      }\n    } else {\n      return "null";\n    }\n  } else {\n    if ("function" == b && "undefined" == typeof a.call) {\n      return "object";\n    }\n  }\n  return b;\n};\ngoog.isNull = function(a) {\n  return null === a;\n};\ngoog.isDefAndNotNull = function(a) {\n  return null != a;\n};\ngoog.isArray = function(a) {\n  return "array" == goog.typeOf(a);\n};\ngoog.isArrayLike = function(a) {\n  var b = goog.typeOf(a);\n  return "array" == b || "object" == b && "number" == typeof a.length;\n};\ngoog.isDateLike = function(a) {\n  return goog.isObject(a) && "function" == typeof a.getFullYear;\n};\ngoog.isString = function(a) {\n  return "string" == typeof a;\n};\ngoog.isBoolean = function(a) {\n  return "boolean" == typeof a;\n};\ngoog.isNumber = function(a) {\n  return "number" == typeof a;\n};\ngoog.isFunction = function(a) {\n  return "function" == goog.typeOf(a);\n};\ngoog.isObject = function(a) {\n  var b = typeof a;\n  return "object" == b && null != a || "function" == b;\n};\ngoog.getUid = function(a) {\n  return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\ngoog.hasUid = function(a) {\n  return !!a[goog.UID_PROPERTY_];\n};\ngoog.removeUid = function(a) {\n  "removeAttribute" in a && a.removeAttribute(goog.UID_PROPERTY_);\n  try {\n    delete a[goog.UID_PROPERTY_];\n  } catch (b) {\n  }\n};\ngoog.UID_PROPERTY_ = "closure_uid_" + (1E9 * Math.random() >>> 0);\ngoog.uidCounter_ = 0;\ngoog.getHashCode = goog.getUid;\ngoog.removeHashCode = goog.removeUid;\ngoog.cloneObject = function(a) {\n  var b = goog.typeOf(a);\n  if ("object" == b || "array" == b) {\n    if (a.clone) {\n      return a.clone();\n    }\n    var b = "array" == b ? [] : {}, c;\n    for (c in a) {\n      b[c] = goog.cloneObject(a[c]);\n    }\n    return b;\n  }\n  return a;\n};\ngoog.bindNative_ = function(a, b, c) {\n  return a.call.apply(a.bind, arguments);\n};\ngoog.bindJs_ = function(a, b, c) {\n  if (!a) {\n    throw Error();\n  }\n  if (2 < arguments.length) {\n    var d = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      var c = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(c, d);\n      return a.apply(b, c);\n    };\n  }\n  return function() {\n    return a.apply(b, arguments);\n  };\n};\ngoog.bind = function(a, b, c) {\n  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;\n  return goog.bind.apply(null, arguments);\n};\ngoog.partial = function(a, b) {\n  var c = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    var b = c.slice();\n    b.push.apply(b, arguments);\n    return a.apply(this, b);\n  };\n};\ngoog.mixin = function(a, b) {\n  for (var c in b) {\n    a[c] = b[c];\n  }\n};\ngoog.now = goog.TRUSTED_SITE && Date.now || function() {\n  return +new Date;\n};\ngoog.globalEval = function(a) {\n  if (goog.global.execScript) {\n    goog.global.execScript(a, "JavaScript");\n  } else {\n    if (goog.global.eval) {\n      if (null == goog.evalWorksForGlobals_ && (goog.global.eval("var _et_ = 1;"), "undefined" != typeof goog.global._et_ ? (delete goog.global._et_, goog.evalWorksForGlobals_ = !0) : goog.evalWorksForGlobals_ = !1), goog.evalWorksForGlobals_) {\n        goog.global.eval(a);\n      } else {\n        var b = goog.global.document, c = b.createElement("script");\n        c.type = "text/javascript";\n        c.defer = !1;\n        c.appendChild(b.createTextNode(a));\n        b.body.appendChild(c);\n        b.body.removeChild(c);\n      }\n    } else {\n      throw Error("goog.globalEval not available");\n    }\n  }\n};\ngoog.evalWorksForGlobals_ = null;\ngoog.getCssName = function(a, b) {\n  var c = function(a) {\n    return goog.cssNameMapping_[a] || a;\n  }, d = function(a) {\n    a = a.split("-");\n    for (var b = [], d = 0;d < a.length;d++) {\n      b.push(c(a[d]));\n    }\n    return b.join("-");\n  }, d = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c : d : function(a) {\n    return a;\n  };\n  return b ? a + "-" + d(b) : d(a);\n};\ngoog.setCssNameMapping = function(a, b) {\n  goog.cssNameMapping_ = a;\n  goog.cssNameMappingStyle_ = b;\n};\n!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);\ngoog.getMsg = function(a, b) {\n  var c = b || {}, d;\n  for (d in c) {\n    var e = ("" + c[d]).replace(/\\$/g, "$$$$");\n    a = a.replace(new RegExp("\\\\{\\\\$" + d + "\\\\}", "gi"), e);\n  }\n  return a;\n};\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\ngoog.exportSymbol = function(a, b, c) {\n  goog.exportPath_(a, b, c);\n};\ngoog.exportProperty = function(a, b, c) {\n  a[b] = c;\n};\ngoog.inherits = function(a, b) {\n  function c() {\n  }\n  c.prototype = b.prototype;\n  a.superClass_ = b.prototype;\n  a.prototype = new c;\n  a.prototype.constructor = a;\n  a.base = function(a, c, f) {\n    var g = Array.prototype.slice.call(arguments, 2);\n    return b.prototype[c].apply(a, g);\n  };\n};\ngoog.base = function(a, b, c) {\n  var d = arguments.callee.caller;\n  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) {\n    throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");\n  }\n  if (d.superClass_) {\n    return d.superClass_.constructor.apply(a, Array.prototype.slice.call(arguments, 1));\n  }\n  for (var e = Array.prototype.slice.call(arguments, 2), f = !1, g = a.constructor;g;g = g.superClass_ && g.superClass_.constructor) {\n    if (g.prototype[b] === d) {\n      f = !0;\n    } else {\n      if (f) {\n        return g.prototype[b].apply(a, e);\n      }\n    }\n  }\n  if (a[b] === d) {\n    return a.constructor.prototype[b].apply(a, e);\n  }\n  throw Error("goog.base called from a method of one name to a method of a different name");\n};\ngoog.scope = function(a) {\n  a.call(goog.global);\n};\nvar axs = {};\naxs.browserUtils = {};\naxs.browserUtils.matchSelector = function(a, b) {\n  return a.matches ? a.matches(b) : a.webkitMatchesSelector ? a.webkitMatchesSelector(b) : a.mozMatchesSelector ? a.mozMatchesSelector(b) : a.msMatchesSelector ? a.msMatchesSelector(b) : !1;\n};\naxs.constants = {};\naxs.constants.ARIA_ROLES = {alert:{namefrom:["author"], parent:["region"]}, alertdialog:{namefrom:["author"], namerequired:!0, parent:["alert", "dialog"]}, application:{namefrom:["author"], namerequired:!0, parent:["landmark"]}, article:{namefrom:["author"], parent:["document", "region"]}, banner:{namefrom:["author"], parent:["landmark"]}, button:{childpresentational:!0, namefrom:["contents", "author"], namerequired:!0, parent:["command"], properties:["aria-expanded", "aria-pressed"]}, checkbox:{namefrom:["contents", \n"author"], namerequired:!0, parent:["input"], requiredProperties:["aria-checked"], properties:["aria-checked"]}, columnheader:{namefrom:["contents", "author"], namerequired:!0, parent:["gridcell", "sectionhead", "widget"], properties:["aria-sort"], scope:["row"]}, combobox:{mustcontain:["listbox", "textbox"], namefrom:["author"], namerequired:!0, parent:["select"], requiredProperties:["aria-expanded"], properties:["aria-expanded", "aria-autocomplete", "aria-required"]}, command:{"abstract":!0, namefrom:["author"], \nparent:["widget"]}, complementary:{namefrom:["author"], parent:["landmark"]}, composite:{"abstract":!0, childpresentational:!1, namefrom:["author"], parent:["widget"], properties:["aria-activedescendant"]}, contentinfo:{namefrom:["author"], parent:["landmark"]}, definition:{namefrom:["author"], parent:["section"]}, dialog:{namefrom:["author"], namerequired:!0, parent:["window"]}, directory:{namefrom:["contents", "author"], parent:["list"]}, document:{namefrom:[" author"], namerequired:!0, parent:["structure"], \nproperties:["aria-expanded"]}, form:{namefrom:["author"], parent:["landmark"]}, grid:{mustcontain:["row", "rowgroup"], namefrom:["author"], namerequired:!0, parent:["composite", "region"], properties:["aria-level", "aria-multiselectable", "aria-readonly"]}, gridcell:{namefrom:["contents", "author"], namerequired:!0, parent:["section", "widget"], properties:["aria-readonly", "aria-required", "aria-selected"], scope:["row"]}, group:{namefrom:[" author"], parent:["section"], properties:["aria-activedescendant"]}, \nheading:{namerequired:!0, parent:["sectionhead"], properties:["aria-level"]}, img:{childpresentational:!0, namefrom:["author"], namerequired:!0, parent:["section"]}, input:{"abstract":!0, namefrom:["author"], parent:["widget"]}, landmark:{"abstract":!0, namefrom:["contents", "author"], namerequired:!1, parent:["region"]}, link:{namefrom:["contents", "author"], namerequired:!0, parent:["command"], properties:["aria-expanded"]}, list:{mustcontain:["group", "listitem"], namefrom:["author"], parent:["region"]}, \nlistbox:{mustcontain:["option"], namefrom:["author"], namerequired:!0, parent:["list", "select"], properties:["aria-multiselectable", "aria-required"]}, listitem:{namefrom:["contents", "author"], namerequired:!0, parent:["section"], properties:["aria-level", "aria-posinset", "aria-setsize"], scope:["list"]}, log:{namefrom:[" author"], namerequired:!0, parent:["region"]}, main:{namefrom:["author"], parent:["landmark"]}, marquee:{namerequired:!0, parent:["section"]}, math:{childpresentational:!0, namefrom:["author"], \nparent:["section"]}, menu:{mustcontain:["group", "menuitemradio", "menuitem", "menuitemcheckbox"], namefrom:["author"], namerequired:!0, parent:["list", "select"]}, menubar:{namefrom:["author"], parent:["menu"]}, menuitem:{namefrom:["contents", "author"], namerequired:!0, parent:["command"], scope:["menu", "menubar"]}, menuitemcheckbox:{namefrom:["contents", "author"], namerequired:!0, parent:["checkbox", "menuitem"], scope:["menu", "menubar"]}, menuitemradio:{namefrom:["contents", "author"], namerequired:!0, \nparent:["menuitemcheckbox", "radio"], scope:["menu", "menubar"]}, navigation:{namefrom:["author"], parent:["landmark"]}, note:{namefrom:["author"], parent:["section"]}, option:{namefrom:["contents", "author"], namerequired:!0, parent:["input"], properties:["aria-checked", "aria-posinset", "aria-selected", "aria-setsize"]}, presentation:{parent:["structure"]}, progressbar:{childpresentational:!0, namefrom:["author"], namerequired:!0, parent:["range"]}, radio:{namefrom:["contents", "author"], namerequired:!0, \nparent:["checkbox", "option"]}, radiogroup:{mustcontain:["radio"], namefrom:["author"], namerequired:!0, parent:["select"], properties:["aria-required"]}, range:{"abstract":!0, namefrom:["author"], parent:["widget"], properties:["aria-valuemax", "aria-valuemin", "aria-valuenow", "aria-valuetext"]}, region:{namefrom:[" author"], parent:["section"]}, roletype:{"abstract":!0, properties:"aria-atomic aria-busy aria-controls aria-describedby aria-disabled aria-dropeffect aria-flowto aria-grabbed aria-haspopup aria-hidden aria-invalid aria-label aria-labelledby aria-live aria-owns aria-relevant".split(" ")}, \nrow:{mustcontain:["columnheader", "gridcell", "rowheader"], namefrom:["contents", "author"], parent:["group", "widget"], properties:["aria-level", "aria-selected"], scope:["grid", "rowgroup", "treegrid"]}, rowgroup:{mustcontain:["row"], namefrom:["contents", "author"], parent:["group"], scope:["grid"]}, rowheader:{namefrom:["contents", "author"], namerequired:!0, parent:["gridcell", "sectionhead", "widget"], properties:["aria-sort"], scope:["row"]}, search:{namefrom:["author"], parent:["landmark"]}, \nsection:{"abstract":!0, namefrom:["contents", "author"], parent:["structure"], properties:["aria-expanded"]}, sectionhead:{"abstract":!0, namefrom:["contents", "author"], parent:["structure"], properties:["aria-expanded"]}, select:{"abstract":!0, namefrom:["author"], parent:["composite", "group", "input"]}, separator:{childpresentational:!0, namefrom:["author"], parent:["structure"], properties:["aria-expanded", "aria-orientation"]}, scrollbar:{childpresentational:!0, namefrom:["author"], namerequired:!1, \nparent:["input", "range"], requiredProperties:["aria-controls", "aria-orientation", "aria-valuemax", "aria-valuemin", "aria-valuenow"], properties:["aria-controls", "aria-orientation", "aria-valuemax", "aria-valuemin", "aria-valuenow"]}, slider:{childpresentational:!0, namefrom:["author"], namerequired:!0, parent:["input", "range"], requiredProperties:["aria-valuemax", "aria-valuemin", "aria-valuenow"], properties:["aria-valuemax", "aria-valuemin", "aria-valuenow", "aria-orientation"]}, spinbutton:{namefrom:["author"], \nnamerequired:!0, parent:["input", "range"], requiredProperties:["aria-valuemax", "aria-valuemin", "aria-valuenow"], properties:["aria-valuemax", "aria-valuemin", "aria-valuenow", "aria-required"]}, status:{parent:["region"]}, structure:{"abstract":!0, parent:["roletype"]}, tab:{namefrom:["contents", "author"], parent:["sectionhead", "widget"], properties:["aria-selected"], scope:["tablist"]}, tablist:{mustcontain:["tab"], namefrom:["author"], parent:["composite", "directory"], properties:["aria-level"]}, \ntabpanel:{namefrom:["author"], namerequired:!0, parent:["region"]}, textbox:{namefrom:["author"], namerequired:!0, parent:["input"], properties:["aria-activedescendant", "aria-autocomplete", "aria-multiline", "aria-readonly", "aria-required"]}, timer:{namefrom:["author"], namerequired:!0, parent:["status"]}, toolbar:{namefrom:["author"], parent:["group"]}, tooltip:{namerequired:!0, parent:["section"]}, tree:{mustcontain:["group", "treeitem"], namefrom:["author"], namerequired:!0, parent:["select"], \nproperties:["aria-multiselectable", "aria-required"]}, treegrid:{mustcontain:["row"], namefrom:["author"], namerequired:!0, parent:["grid", "tree"]}, treeitem:{namefrom:["contents", "author"], namerequired:!0, parent:["listitem", "option"], scope:["group", "tree"]}, widget:{"abstract":!0, parent:["roletype"]}, window:{"abstract":!0, namefrom:[" author"], parent:["roletype"], properties:["aria-expanded"]}};\naxs.constants.WIDGET_ROLES = {};\naxs.constants.addAllParentRolesToSet_ = function(a, b) {\n  if (a.parent) {\n    for (var c = a.parent, d = 0;d < c.length;d++) {\n      var e = c[d];\n      b[e] = !0;\n      axs.constants.addAllParentRolesToSet_(axs.constants.ARIA_ROLES[e], b);\n    }\n  }\n};\naxs.constants.addAllPropertiesToSet_ = function(a, b, c) {\n  var d = a[b];\n  if (d) {\n    for (var e = 0;e < d.length;e++) {\n      c[d[e]] = !0;\n    }\n  }\n  if (a.parent) {\n    for (a = a.parent, d = 0;d < a.length;d++) {\n      axs.constants.addAllPropertiesToSet_(axs.constants.ARIA_ROLES[a[d]], b, c);\n    }\n  }\n};\nfor (var roleName in axs.constants.ARIA_ROLES) {\n  var role = axs.constants.ARIA_ROLES[roleName], propertiesSet = {};\n  axs.constants.addAllPropertiesToSet_(role, "properties", propertiesSet);\n  role.propertiesSet = propertiesSet;\n  var requiredPropertiesSet = {};\n  axs.constants.addAllPropertiesToSet_(role, "requiredProperties", requiredPropertiesSet);\n  role.requiredPropertiesSet = requiredPropertiesSet;\n  var parentRolesSet = {};\n  axs.constants.addAllParentRolesToSet_(role, parentRolesSet);\n  role.allParentRolesSet = parentRolesSet;\n  "widget" in parentRolesSet && (axs.constants.WIDGET_ROLES[roleName] = role);\n}\naxs.constants.ARIA_PROPERTIES = {activedescendant:{type:"property", valueType:"idref"}, atomic:{defaultValue:"false", type:"property", valueType:"boolean"}, autocomplete:{defaultValue:"none", type:"property", valueType:"token", values:["inline", "list", "both", "none"]}, busy:{defaultValue:"false", type:"state", valueType:"boolean"}, checked:{defaultValue:"undefined", type:"state", valueType:"token", values:["true", "false", "mixed", "undefined"]}, controls:{type:"property", valueType:"idref_list"}, \ndescribedby:{type:"property", valueType:"idref_list"}, disabled:{defaultValue:"false", type:"state", valueType:"boolean"}, dropeffect:{defaultValue:"none", type:"property", valueType:"token_list", values:"copy move link execute popup none".split(" ")}, expanded:{defaultValue:"undefined", type:"state", valueType:"token", values:["true", "false", "undefined"]}, flowto:{type:"property", valueType:"idref_list"}, grabbed:{defaultValue:"undefined", type:"state", valueType:"token", values:["true", "false", \n"undefined"]}, haspopup:{defaultValue:"false", type:"property", valueType:"boolean"}, hidden:{defaultValue:"false", type:"state", valueType:"boolean"}, invalid:{defaultValue:"false", type:"state", valueType:"token", values:["grammar", "false", "spelling", "true"]}, label:{type:"property", valueType:"string"}, labelledby:{type:"property", valueType:"idref_list"}, level:{type:"property", valueType:"integer"}, live:{defaultValue:"off", type:"property", valueType:"token", values:["off", "polite", "assertive"]}, \nmultiline:{defaultValue:"false", type:"property", valueType:"boolean"}, multiselectable:{defaultValue:"false", type:"property", valueType:"boolean"}, orientation:{defaultValue:"vertical", type:"property", valueType:"token", values:["horizontal", "vertical"]}, owns:{type:"property", valueType:"idref_list"}, posinset:{type:"property", valueType:"integer"}, pressed:{defaultValue:"undefined", type:"state", valueType:"token", values:["true", "false", "mixed", "undefined"]}, readonly:{defaultValue:"false", \ntype:"property", valueType:"boolean"}, relevant:{defaultValue:"additions text", type:"property", valueType:"token_list", values:["additions", "removals", "text", "all"]}, required:{defaultValue:"false", type:"property", valueType:"boolean"}, selected:{defaultValue:"undefined", type:"state", valueType:"token", values:["true", "false", "undefined"]}, setsize:{type:"property", valueType:"integer"}, sort:{defaultValue:"none", type:"property", valueType:"token", values:["ascending", "descending", "none", \n"other"]}, valuemax:{type:"property", valueType:"decimal"}, valuemin:{type:"property", valueType:"decimal"}, valuenow:{type:"property", valueType:"decimal"}, valuetext:{type:"property", valueType:"string"}};\n(function() {\n  for (var a in axs.constants.ARIA_PROPERTIES) {\n    var b = axs.constants.ARIA_PROPERTIES[a];\n    if (b.values) {\n      for (var c = {}, d = 0;d < b.values.length;d++) {\n        c[b.values[d]] = !0;\n      }\n      b.valuesSet = c;\n    }\n  }\n})();\naxs.constants.GLOBAL_PROPERTIES = axs.constants.ARIA_ROLES.roletype.propertiesSet;\naxs.constants.NO_ROLE_NAME = " ";\naxs.constants.WIDGET_ROLE_TO_NAME = {alert:"aria_role_alert", alertdialog:"aria_role_alertdialog", button:"aria_role_button", checkbox:"aria_role_checkbox", columnheader:"aria_role_columnheader", combobox:"aria_role_combobox", dialog:"aria_role_dialog", grid:"aria_role_grid", gridcell:"aria_role_gridcell", link:"aria_role_link", listbox:"aria_role_listbox", log:"aria_role_log", marquee:"aria_role_marquee", menu:"aria_role_menu", menubar:"aria_role_menubar", menuitem:"aria_role_menuitem", menuitemcheckbox:"aria_role_menuitemcheckbox", \nmenuitemradio:"aria_role_menuitemradio", option:axs.constants.NO_ROLE_NAME, progressbar:"aria_role_progressbar", radio:"aria_role_radio", radiogroup:"aria_role_radiogroup", rowheader:"aria_role_rowheader", scrollbar:"aria_role_scrollbar", slider:"aria_role_slider", spinbutton:"aria_role_spinbutton", status:"aria_role_status", tab:"aria_role_tab", tabpanel:"aria_role_tabpanel", textbox:"aria_role_textbox", timer:"aria_role_timer", toolbar:"aria_role_toolbar", tooltip:"aria_role_tooltip", treeitem:"aria_role_treeitem"};\naxs.constants.STRUCTURE_ROLE_TO_NAME = {article:"aria_role_article", application:"aria_role_application", banner:"aria_role_banner", columnheader:"aria_role_columnheader", complementary:"aria_role_complementary", contentinfo:"aria_role_contentinfo", definition:"aria_role_definition", directory:"aria_role_directory", document:"aria_role_document", form:"aria_role_form", group:"aria_role_group", heading:"aria_role_heading", img:"aria_role_img", list:"aria_role_list", listitem:"aria_role_listitem", \nmain:"aria_role_main", math:"aria_role_math", navigation:"aria_role_navigation", note:"aria_role_note", region:"aria_role_region", rowheader:"aria_role_rowheader", search:"aria_role_search", separator:"aria_role_separator"};\naxs.constants.ATTRIBUTE_VALUE_TO_STATUS = [{name:"aria-autocomplete", values:{inline:"aria_autocomplete_inline", list:"aria_autocomplete_list", both:"aria_autocomplete_both"}}, {name:"aria-checked", values:{"true":"aria_checked_true", "false":"aria_checked_false", mixed:"aria_checked_mixed"}}, {name:"aria-disabled", values:{"true":"aria_disabled_true"}}, {name:"aria-expanded", values:{"true":"aria_expanded_true", "false":"aria_expanded_false"}}, {name:"aria-invalid", values:{"true":"aria_invalid_true", \ngrammar:"aria_invalid_grammar", spelling:"aria_invalid_spelling"}}, {name:"aria-multiline", values:{"true":"aria_multiline_true"}}, {name:"aria-multiselectable", values:{"true":"aria_multiselectable_true"}}, {name:"aria-pressed", values:{"true":"aria_pressed_true", "false":"aria_pressed_false", mixed:"aria_pressed_mixed"}}, {name:"aria-readonly", values:{"true":"aria_readonly_true"}}, {name:"aria-required", values:{"true":"aria_required_true"}}, {name:"aria-selected", values:{"true":"aria_selected_true", \n"false":"aria_selected_false"}}];\naxs.constants.INPUT_TYPE_TO_INFORMATION_TABLE_MSG = {button:"input_type_button", checkbox:"input_type_checkbox", color:"input_type_color", datetime:"input_type_datetime", "datetime-local":"input_type_datetime_local", date:"input_type_date", email:"input_type_email", file:"input_type_file", image:"input_type_image", month:"input_type_month", number:"input_type_number", password:"input_type_password", radio:"input_type_radio", range:"input_type_range", reset:"input_type_reset", search:"input_type_search", \nsubmit:"input_type_submit", tel:"input_type_tel", text:"input_type_text", url:"input_type_url", week:"input_type_week"};\naxs.constants.TAG_TO_INFORMATION_TABLE_VERBOSE_MSG = {A:"tag_link", BUTTON:"tag_button", H1:"tag_h1", H2:"tag_h2", H3:"tag_h3", H4:"tag_h4", H5:"tag_h5", H6:"tag_h6", LI:"tag_li", OL:"tag_ol", SELECT:"tag_select", TEXTAREA:"tag_textarea", UL:"tag_ul", SECTION:"tag_section", NAV:"tag_nav", ARTICLE:"tag_article", ASIDE:"tag_aside", HGROUP:"tag_hgroup", HEADER:"tag_header", FOOTER:"tag_footer", TIME:"tag_time", MARK:"tag_mark"};\naxs.constants.TAG_TO_INFORMATION_TABLE_BRIEF_MSG = {BUTTON:"tag_button", SELECT:"tag_select", TEXTAREA:"tag_textarea"};\naxs.constants.MIXED_VALUES = {"true":!0, "false":!0, mixed:!0};\naxs.constants.Severity = {INFO:"Info", WARNING:"Warning", SEVERE:"Severe"};\naxs.constants.AuditResult = {PASS:"PASS", FAIL:"FAIL", NA:"NA"};\naxs.constants.InlineElements = {TT:!0, I:!0, B:!0, BIG:!0, SMALL:!0, EM:!0, STRONG:!0, DFN:!0, CODE:!0, SAMP:!0, KBD:!0, VAR:!0, CITE:!0, ABBR:!0, ACRONYM:!0, A:!0, IMG:!0, OBJECT:!0, BR:!0, SCRIPT:!0, MAP:!0, Q:!0, SUB:!0, SUP:!0, SPAN:!0, BDO:!0, INPUT:!0, SELECT:!0, TEXTAREA:!0, LABEL:!0, BUTTON:!0};\naxs.constants.NATIVELY_DISABLEABLE = {BUTTON:!0, INPUT:!0, SELECT:!0, TEXTAREA:!0, FIELDSET:!0, OPTGROUP:!0, OPTION:!0};\naxs.constants.ARIA_TO_HTML_ATTRIBUTE = {"aria-checked":"checked", "aria-disabled":"disabled", "aria-hidden":"hidden", "aria-expanded":"open", "aria-valuemax":"max", "aria-valuemin":"min", "aria-readonly":"readonly", "aria-required":"required", "aria-selected":"selected", "aria-valuenow":"value"};\naxs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO = {A:[{role:"link", allowed:"button checkbox menuitem menuitemcheckbox menuitemradio tab treeitem".split(" "), selector:"a[href]"}], ADDRESS:[{role:"", allowed:["contentinfo", "presentation"]}], AREA:[{role:"link", selector:"area[href]"}], ARTICLE:[{role:"article", allowed:["presentation", "article", "document", "application", "main"]}], ASIDE:[{role:"complementary", allowed:["note", "complementary", "search", "presentation"]}], AUDIO:[{role:"", allowed:["application", \n"presentation"]}], BASE:[{role:"", reserved:!0}], BODY:[{role:"document", allowed:["presentation"]}], BUTTON:[{role:"button", allowed:["link", "menuitem", "menuitemcheckbox", "menuitemradio", "radio"], selector:\'button:not([aria-pressed]):not([type="menu"])\'}, {role:"button", allowed:["button"], selector:"button[aria-pressed]"}, {role:"button", attributes:{"aria-haspopup":!0}, allowed:["link", "menuitem", "menuitemcheckbox", "menuitemradio", "radio"], selector:\'button[type="menu"]\'}], CAPTION:[{role:"", \nallowed:["presentation"]}], COL:[{role:"", reserved:!0}], COLGROUP:[{role:"", reserved:!0}], DATALIST:[{role:"listbox", attributes:{"aria-multiselectable":!1}, allowed:["presentation"]}], DEL:[{role:"", allowed:["*"]}], DD:[{role:"", allowed:["presentation"]}], DT:[{role:"", allowed:["presentation"]}], DETAILS:[{role:"group", allowed:["group", "presentation"]}], DIALOG:[{role:"dialog", allowed:"dialog alert alertdialog application log marquee status".split(" "), selector:"dialog[open]"}, {role:"dialog", \nattributes:{"aria-hidden":!0}, allowed:"dialog alert alertdialog application log marquee status".split(" "), selector:"dialog:not([open])"}], DIV:[{role:"", allowed:["*"]}], DL:[{role:"list", allowed:["presentation"]}], EMBED:[{role:"", allowed:["application", "document", "img", "presentation"]}], FIGURE:[{role:"", allowed:["*"]}], FOOTER:[{role:"", allowed:["contentinfo", "presentation"]}], FORM:[{role:"form", allowed:["presentation"]}], P:[{role:"", allowed:["*"]}], PRE:[{role:"", allowed:["*"]}], \nBLOCKQUOTE:[{role:"", allowed:["*"]}], H1:[{role:"heading"}], H2:[{role:"heading"}], H3:[{role:"heading"}], H4:[{role:"heading"}], H5:[{role:"heading"}], H6:[{role:"heading"}], HEAD:[{role:"", reserved:!0}], HEADER:[{role:"", allowed:["banner", "presentation"]}], HR:[{role:"separator", allowed:["presentation"]}], HTML:[{role:"", reserved:!0}], IFRAME:[{role:"", allowed:["application", "document", "img", "presentation"], selector:"iframe:not([seamless])"}, {role:"", allowed:["application", "document", \n"img", "presentation", "group"], selector:"iframe[seamless]"}], IMG:[{role:"presentation", reserved:!0, selector:\'img[alt=""]\'}, {role:"img", allowed:["*"], selector:\'img[alt]:not([alt=""])\'}], INPUT:[{role:"button", allowed:["link", "menuitem", "menuitemcheckbox", "menuitemradio", "radio"], selector:\'input[type="button"]:not([aria-pressed])\'}, {role:"button", allowed:["button"], selector:\'input[type="button"][aria-pressed]\'}, {role:"checkbox", allowed:["checkbox"], selector:\'input[type="checkbox"]\'}, \n{role:"", selector:\'input[type="color"]\'}, {role:"", selector:\'input[type="date"]\'}, {role:"", selector:\'input[type="datetime"]\'}, {role:"textbox", selector:\'input[type="email"]:not([list])\'}, {role:"", selector:\'input[type="file"]\'}, {role:"", reserved:!0, selector:\'input[type="hidden"]\'}, {role:"button", allowed:["button"], selector:\'input[type="image"][aria-pressed]\'}, {role:"button", allowed:["link", "menuitem", "menuitemcheckbox", "menuitemradio", "radio"], selector:\'input[type="image"]:not([aria-pressed])\'}, \n{role:"", selector:\'input[type="month"]\'}, {role:"", selector:\'input[type="number"]\'}, {role:"textbox", selector:\'input[type="password"]\'}, {role:"radio", allowed:["menuitemradio"], selector:\'input[type="radio"]\'}, {role:"slider", selector:\'input[type="range"]\'}, {role:"button", selector:\'input[type="reset"]\'}, {role:"combobox", selector:\'input[type="search"][list]\'}, {role:"textbox", selector:\'input[type="search"]:not([list])\'}, {role:"button", selector:\'input[type="submit"]\'}, {role:"combobox", \nselector:\'input[type="tel"][list]\'}, {role:"textbox", selector:\'input[type="tel"]:not([list])\'}, {role:"combobox", selector:\'input[type="text"][list]\'}, {role:"textbox", selector:\'input[type="text"]:not([list])\'}, {role:"textbox", selector:"input:not([type])"}, {role:"", selector:\'input[type="time"]\'}, {role:"combobox", selector:\'input[type="url"][list]\'}, {role:"textbox", selector:\'input[type="url"]:not([list])\'}, {role:"", selector:\'input[type="week"]\'}], INS:[{role:"", allowed:["*"]}], KEYGEN:[{role:""}], \nLABEL:[{role:"", allowed:["presentation"]}], LI:[{role:"listitem", allowed:"menuitem menuitemcheckbox menuitemradio option tab treeitem presentation".split(" "), selector:\'ol:not([role="presentation"])>li, ul:not([role="presentation"])>li\'}, {role:"listitem", allowed:"listitem menuitem menuitemcheckbox menuitemradio option tab treeitem presentation".split(" "), selector:\'ol[role="presentation"]>li, ul[role="presentation"]>li\'}], LINK:[{role:"link", reserved:!0, selector:"link[href]"}], MAIN:[{role:"", \nallowed:["main", "presentation"]}], MAP:[{role:"", reserved:!0}], MATH:[{role:"", allowed:["presentation"]}], MENU:[{role:"toolbar", selector:\'menu[type="toolbar"]\'}], MENUITEM:[{role:"menuitem", selector:\'menuitem[type="command"]\'}, {role:"menuitemcheckbox", selector:\'menuitem[type="checkbox"]\'}, {role:"menuitemradio", selector:\'menuitem[type="radio"]\'}], META:[{role:"", reserved:!0}], METER:[{role:"progressbar", allowed:["presentation"]}], NAV:[{role:"navigation", allowed:["navigation", "presentation"]}], \nNOSCRIPT:[{role:"", reserved:!0}], OBJECT:[{role:"", allowed:["application", "document", "img", "presentation"]}], OL:[{role:"list", allowed:"directory group listbox menu menubar tablist toolbar tree presentation".split(" ")}], OPTGROUP:[{role:"", allowed:["presentation"]}], OPTION:[{role:"option"}], OUTPUT:[{role:"status", allowed:["*"]}], PARAM:[{role:"", reserved:!0}], PICTURE:[{role:"", reserved:!0}], PROGRESS:[{role:"progressbar", allowed:["presentation"]}], SCRIPT:[{role:"", reserved:!0}], \nSECTION:[{role:"region", allowed:"alert alertdialog application contentinfo dialog document log marquee search status presentation".split(" ")}], SELECT:[{role:"listbox"}], SOURCE:[{role:"", reserved:!0}], SPAN:[{role:"", allowed:["*"]}], STYLE:[{role:"", reserved:!0}], SVG:[{role:"", allowed:["application", "document", "img", "presentation"]}], SUMMARY:[{role:"", allowed:["presentation"]}], TABLE:[{role:"", allowed:["*"]}], TEMPLATE:[{role:"", reserved:!0}], TEXTAREA:[{role:"textbox"}], TBODY:[{role:"rowgroup", \nallowed:["*"]}], THEAD:[{role:"rowgroup", allowed:["*"]}], TFOOT:[{role:"rowgroup", allowed:["*"]}], TITLE:[{role:"", reserved:!0}], TD:[{role:"", allowed:["*"]}], TH:[{role:"", allowed:["*"]}], TR:[{role:"", allowed:["*"]}], TRACK:[{role:"", reserved:!0}], UL:[{role:"list", allowed:"directory group listbox menu menubar tablist toolbar tree presentation".split(" ")}], VIDEO:[{role:"", allowed:["application", "presentation"]}]};\naxs.color = {};\naxs.color.Color = function(a, b, c, d) {\n  this.red = a;\n  this.green = b;\n  this.blue = c;\n  this.alpha = d;\n};\naxs.color.YCbCr = function(a) {\n  this.luma = this.z = a[0];\n  this.Cb = this.x = a[1];\n  this.Cr = this.y = a[2];\n};\naxs.color.YCbCr.prototype = {multiply:function(a) {\n  return new axs.color.YCbCr([this.luma * a, this.Cb * a, this.Cr * a]);\n}, add:function(a) {\n  return new axs.color.YCbCr([this.luma + a.luma, this.Cb + a.Cb, this.Cr + a.Cr]);\n}, subtract:function(a) {\n  return new axs.color.YCbCr([this.luma - a.luma, this.Cb - a.Cb, this.Cr - a.Cr]);\n}};\naxs.color.calculateContrastRatio = function(a, b) {\n  1 > a.alpha && (a = axs.color.flattenColors(a, b));\n  var c = axs.color.calculateLuminance(a), d = axs.color.calculateLuminance(b);\n  return (Math.max(c, d) + .05) / (Math.min(c, d) + .05);\n};\naxs.color.calculateLuminance = function(a) {\n  return axs.color.toYCbCr(a).luma;\n};\naxs.color.luminanceRatio = function(a, b) {\n  return (Math.max(a, b) + .05) / (Math.min(a, b) + .05);\n};\naxs.color.parseColor = function(a) {\n  if ("transparent" === a) {\n    return new axs.color.Color(0, 0, 0, 0);\n  }\n  var b = a.match(/^rgb\\((\\d+), (\\d+), (\\d+)\\)$/);\n  if (b) {\n    a = parseInt(b[1], 10);\n    var c = parseInt(b[2], 10), d = parseInt(b[3], 10);\n    return new axs.color.Color(a, c, d, 1);\n  }\n  return (b = a.match(/^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/)) ? (a = parseInt(b[1], 10), c = parseInt(b[2], 10), d = parseInt(b[3], 10), b = parseFloat(b[4]), new axs.color.Color(a, c, d, b)) : null;\n};\naxs.color.colorChannelToString = function(a) {\n  a = Math.round(a);\n  return 15 >= a ? "0" + a.toString(16) : a.toString(16);\n};\naxs.color.colorToString = function(a) {\n  return 1 == a.alpha ? "#" + axs.color.colorChannelToString(a.red) + axs.color.colorChannelToString(a.green) + axs.color.colorChannelToString(a.blue) : "rgba(" + [a.red, a.green, a.blue, a.alpha].join() + ")";\n};\naxs.color.luminanceFromContrastRatio = function(a, b, c) {\n  return c ? (a + .05) * b - .05 : (a + .05) / b - .05;\n};\naxs.color.translateColor = function(a, b) {\n  for (var c = b > a.luma ? axs.color.WHITE_YCC : axs.color.BLACK_YCC, d = c == axs.color.WHITE_YCC ? axs.color.YCC_CUBE_FACES_WHITE : axs.color.YCC_CUBE_FACES_BLACK, e = new axs.color.YCbCr([0, a.Cb, a.Cr]), f = new axs.color.YCbCr([1, a.Cb, a.Cr]), f = {a:e, b:f}, e = null, g = 0;g < d.length && !(e = axs.color.findIntersection(f, d[g]), 0 <= e.z && 1 >= e.z);g++) {\n  }\n  if (!e) {\n    throw "Couldn\'t find intersection with YCbCr color cube for Cb=" + a.Cb + ", Cr=" + a.Cr + ".";\n  }\n  if (e.x != a.x || e.y != a.y) {\n    throw "Intersection has wrong Cb/Cr values.";\n  }\n  if (Math.abs(c.luma - e.luma) < Math.abs(c.luma - b)) {\n    return c = [b, a.Cb, a.Cr], axs.color.fromYCbCrArray(c);\n  }\n  c = (b - e.luma) / (c.luma - e.luma);\n  c = [b, e.Cb - e.Cb * c, e.Cr - e.Cr * c];\n  return axs.color.fromYCbCrArray(c);\n};\naxs.color.suggestColors = function(a, b, c) {\n  var d = {}, e = axs.color.calculateLuminance(a), f = axs.color.calculateLuminance(b), g = f > e, h = axs.color.toYCbCr(b), k = axs.color.toYCbCr(a), m;\n  for (m in c) {\n    var l = c[m], n = axs.color.luminanceFromContrastRatio(e, l + .02, g);\n    if (1 >= n && 0 <= n) {\n      var p = axs.color.translateColor(h, n), l = axs.color.calculateContrastRatio(p, a), n = {};\n      n.fg = axs.color.colorToString(p);\n      n.bg = axs.color.colorToString(a);\n      n.contrast = l.toFixed(2);\n      d[m] = n;\n    } else {\n      l = axs.color.luminanceFromContrastRatio(f, l + .02, !g), 1 >= l && 0 <= l && (p = axs.color.translateColor(k, l), l = axs.color.calculateContrastRatio(b, p), n = {}, n.bg = axs.color.colorToString(p), n.fg = axs.color.colorToString(b), n.contrast = l.toFixed(2), d[m] = n);\n    }\n  }\n  return d;\n};\naxs.color.flattenColors = function(a, b) {\n  var c = a.alpha;\n  return new axs.color.Color((1 - c) * b.red + c * a.red, (1 - c) * b.green + c * a.green, (1 - c) * b.blue + c * a.blue, a.alpha + b.alpha * (1 - a.alpha));\n};\naxs.color.multiplyMatrixVector = function(a, b) {\n  var c = b[0], d = b[1], e = b[2];\n  return [a[0][0] * c + a[0][1] * d + a[0][2] * e, a[1][0] * c + a[1][1] * d + a[1][2] * e, a[2][0] * c + a[2][1] * d + a[2][2] * e];\n};\naxs.color.toYCbCr = function(a) {\n  var b = a.red / 255, c = a.green / 255;\n  a = a.blue / 255;\n  b = .03928 >= b ? b / 12.92 : Math.pow((b + .055) / 1.055, 2.4);\n  c = .03928 >= c ? c / 12.92 : Math.pow((c + .055) / 1.055, 2.4);\n  a = .03928 >= a ? a / 12.92 : Math.pow((a + .055) / 1.055, 2.4);\n  return new axs.color.YCbCr(axs.color.multiplyMatrixVector(axs.color.YCC_MATRIX, [b, c, a]));\n};\naxs.color.fromYCbCr = function(a) {\n  return axs.color.fromYCbCrArray([a.luma, a.Cb, a.Cr]);\n};\naxs.color.fromYCbCrArray = function(a) {\n  var b = axs.color.multiplyMatrixVector(axs.color.INVERTED_YCC_MATRIX, a), c = b[0];\n  a = b[1];\n  b = b[2];\n  c = .00303949 >= c ? 12.92 * c : 1.055 * Math.pow(c, 1 / 2.4) - .055;\n  a = .00303949 >= a ? 12.92 * a : 1.055 * Math.pow(a, 1 / 2.4) - .055;\n  b = .00303949 >= b ? 12.92 * b : 1.055 * Math.pow(b, 1 / 2.4) - .055;\n  c = Math.min(Math.max(Math.round(255 * c), 0), 255);\n  a = Math.min(Math.max(Math.round(255 * a), 0), 255);\n  b = Math.min(Math.max(Math.round(255 * b), 0), 255);\n  return new axs.color.Color(c, a, b, 1);\n};\naxs.color.RGBToYCbCrMatrix = function(a, b) {\n  return [[a, 1 - a - b, b], [-a / (2 - 2 * b), (a + b - 1) / (2 - 2 * b), (1 - b) / (2 - 2 * b)], [(1 - a) / (2 - 2 * a), (a + b - 1) / (2 - 2 * a), -b / (2 - 2 * a)]];\n};\naxs.color.invert3x3Matrix = function(a) {\n  var b = a[0][0], c = a[0][1], d = a[0][2], e = a[1][0], f = a[1][1], g = a[1][2], h = a[2][0], k = a[2][1];\n  a = a[2][2];\n  return axs.color.scalarMultiplyMatrix([[f * a - g * k, d * k - c * a, c * g - d * f], [g * h - e * a, b * a - d * h, d * e - b * g], [e * k - f * h, h * c - b * k, b * f - c * e]], 1 / (b * (f * a - g * k) - c * (a * e - g * h) + d * (e * k - f * h)));\n};\naxs.color.findIntersection = function(a, b) {\n  var c = [a.a.x - b.p0.x, a.a.y - b.p0.y, a.a.z - b.p0.z], d = axs.color.invert3x3Matrix([[a.a.x - a.b.x, b.p1.x - b.p0.x, b.p2.x - b.p0.x], [a.a.y - a.b.y, b.p1.y - b.p0.y, b.p2.y - b.p0.y], [a.a.z - a.b.z, b.p1.z - b.p0.z, b.p2.z - b.p0.z]]), c = axs.color.multiplyMatrixVector(d, c)[0];\n  return a.a.add(a.b.subtract(a.a).multiply(c));\n};\naxs.color.scalarMultiplyMatrix = function(a, b) {\n  for (var c = [], d = 0;3 > d;d++) {\n    c[d] = axs.color.scalarMultiplyVector(a[d], b);\n  }\n  return c;\n};\naxs.color.scalarMultiplyVector = function(a, b) {\n  for (var c = [], d = 0;d < a.length;d++) {\n    c[d] = a[d] * b;\n  }\n  return c;\n};\naxs.color.kR = .2126;\naxs.color.kB = .0722;\naxs.color.YCC_MATRIX = axs.color.RGBToYCbCrMatrix(axs.color.kR, axs.color.kB);\naxs.color.INVERTED_YCC_MATRIX = axs.color.invert3x3Matrix(axs.color.YCC_MATRIX);\naxs.color.BLACK = new axs.color.Color(0, 0, 0, 1);\naxs.color.BLACK_YCC = axs.color.toYCbCr(axs.color.BLACK);\naxs.color.WHITE = new axs.color.Color(255, 255, 255, 1);\naxs.color.WHITE_YCC = axs.color.toYCbCr(axs.color.WHITE);\naxs.color.RED = new axs.color.Color(255, 0, 0, 1);\naxs.color.RED_YCC = axs.color.toYCbCr(axs.color.RED);\naxs.color.GREEN = new axs.color.Color(0, 255, 0, 1);\naxs.color.GREEN_YCC = axs.color.toYCbCr(axs.color.GREEN);\naxs.color.BLUE = new axs.color.Color(0, 0, 255, 1);\naxs.color.BLUE_YCC = axs.color.toYCbCr(axs.color.BLUE);\naxs.color.CYAN = new axs.color.Color(0, 255, 255, 1);\naxs.color.CYAN_YCC = axs.color.toYCbCr(axs.color.CYAN);\naxs.color.MAGENTA = new axs.color.Color(255, 0, 255, 1);\naxs.color.MAGENTA_YCC = axs.color.toYCbCr(axs.color.MAGENTA);\naxs.color.YELLOW = new axs.color.Color(255, 255, 0, 1);\naxs.color.YELLOW_YCC = axs.color.toYCbCr(axs.color.YELLOW);\naxs.color.YCC_CUBE_FACES_BLACK = [{p0:axs.color.BLACK_YCC, p1:axs.color.RED_YCC, p2:axs.color.GREEN_YCC}, {p0:axs.color.BLACK_YCC, p1:axs.color.GREEN_YCC, p2:axs.color.BLUE_YCC}, {p0:axs.color.BLACK_YCC, p1:axs.color.BLUE_YCC, p2:axs.color.RED_YCC}];\naxs.color.YCC_CUBE_FACES_WHITE = [{p0:axs.color.WHITE_YCC, p1:axs.color.CYAN_YCC, p2:axs.color.MAGENTA_YCC}, {p0:axs.color.WHITE_YCC, p1:axs.color.MAGENTA_YCC, p2:axs.color.YELLOW_YCC}, {p0:axs.color.WHITE_YCC, p1:axs.color.YELLOW_YCC, p2:axs.color.CYAN_YCC}];\naxs.utils = {};\naxs.utils.FOCUSABLE_ELEMENTS_SELECTOR = "input:not([type=hidden]):not([disabled]),select:not([disabled]),textarea:not([disabled]),button:not([disabled]),a[href],iframe,[tabindex]";\naxs.utils.LABELABLE_ELEMENTS_SELECTOR = "button,input:not([type=hidden]),keygen,meter,output,progress,select,textarea";\naxs.utils.parentElement = function(a) {\n  if (!a) {\n    return null;\n  }\n  if (a.nodeType == Node.DOCUMENT_FRAGMENT_NODE) {\n    return a.host;\n  }\n  var b = a.parentElement;\n  if (b) {\n    return b;\n  }\n  a = a.parentNode;\n  if (!a) {\n    return null;\n  }\n  switch(a.nodeType) {\n    case Node.ELEMENT_NODE:\n      return a;\n    case Node.DOCUMENT_FRAGMENT_NODE:\n      return a.host;\n    default:\n      return null;\n  }\n};\naxs.utils.asElement = function(a) {\n  switch(a.nodeType) {\n    case Node.COMMENT_NODE:\n      return null;\n    case Node.ELEMENT_NODE:\n      if ("script" == a.tagName.toLowerCase()) {\n        return null;\n      }\n      break;\n    case Node.TEXT_NODE:\n      a = axs.utils.parentElement(a);\n      break;\n    default:\n      return console.warn("Unhandled node type: ", a.nodeType), null;\n  }\n  return a;\n};\naxs.utils.elementIsTransparent = function(a) {\n  return "0" == a.style.opacity;\n};\naxs.utils.elementHasZeroArea = function(a) {\n  a = a.getBoundingClientRect();\n  var b = a.top - a.bottom;\n  return a.right - a.left && b ? !1 : !0;\n};\naxs.utils.elementIsOutsideScrollArea = function(a) {\n  for (var b = axs.utils.parentElement(a), c = a.ownerDocument.defaultView;b != c.document.body;) {\n    if (axs.utils.isClippedBy(a, b)) {\n      return !0;\n    }\n    if (axs.utils.canScrollTo(a, b) && !axs.utils.elementIsOutsideScrollArea(b)) {\n      return !1;\n    }\n    b = axs.utils.parentElement(b);\n  }\n  return !axs.utils.canScrollTo(a, c.document.body);\n};\naxs.utils.canScrollTo = function(a, b) {\n  var c = a.getBoundingClientRect(), d = b.getBoundingClientRect(), e = d.top, f = d.left, g = e - b.scrollTop, e = e - b.scrollTop + b.scrollHeight, h = f - b.scrollLeft + b.scrollWidth;\n  if (c.right < f - b.scrollLeft || c.bottom < g || c.left > h || c.top > e) {\n    return !1;\n  }\n  f = a.ownerDocument.defaultView;\n  g = f.getComputedStyle(b);\n  return c.left > d.right || c.top > d.bottom ? "scroll" == g.overflow || "auto" == g.overflow || b instanceof f.HTMLBodyElement : !0;\n};\naxs.utils.isClippedBy = function(a, b) {\n  var c = a.getBoundingClientRect(), d = b.getBoundingClientRect(), e = d.top - b.scrollTop, f = d.left - b.scrollLeft, g = a.ownerDocument.defaultView.getComputedStyle(b);\n  return (c.right < d.left || c.bottom < d.top || c.left > d.right || c.top > d.bottom) && "hidden" == g.overflow ? !0 : c.right < f || c.bottom < e ? "visible" != g.overflow : !1;\n};\naxs.utils.isAncestor = function(a, b) {\n  return null == b ? !1 : b === a ? !0 : axs.utils.isAncestor(a, b.parentNode);\n};\naxs.utils.overlappingElements = function(a) {\n  if (axs.utils.elementHasZeroArea(a)) {\n    return null;\n  }\n  for (var b = [], c = a.getClientRects(), d = 0;d < c.length;d++) {\n    var e = c[d], e = document.elementFromPoint((e.left + e.right) / 2, (e.top + e.bottom) / 2);\n    if (null != e && e != a && !axs.utils.isAncestor(e, a) && !axs.utils.isAncestor(a, e)) {\n      var f = window.getComputedStyle(e, null);\n      f && (f = axs.utils.getBgColor(f, e)) && 0 < f.alpha && 0 > b.indexOf(e) && b.push(e);\n    }\n  }\n  return b;\n};\naxs.utils.elementIsHtmlControl = function(a) {\n  var b = a.ownerDocument.defaultView;\n  return a instanceof b.HTMLButtonElement || a instanceof b.HTMLInputElement || a instanceof b.HTMLSelectElement || a instanceof b.HTMLTextAreaElement ? !0 : !1;\n};\naxs.utils.elementIsAriaWidget = function(a) {\n  return a.hasAttribute("role") && (a = a.getAttribute("role")) && (a = axs.constants.ARIA_ROLES[a]) && "widget" in a.allParentRolesSet ? !0 : !1;\n};\naxs.utils.elementIsVisible = function(a) {\n  return axs.utils.elementIsTransparent(a) || axs.utils.elementHasZeroArea(a) || axs.utils.elementIsOutsideScrollArea(a) || axs.utils.overlappingElements(a).length ? !1 : !0;\n};\naxs.utils.isLargeFont = function(a) {\n  var b = a.fontSize;\n  a = "bold" == a.fontWeight;\n  var c = b.match(/(\\d+)px/);\n  if (c) {\n    b = parseInt(c[1], 10);\n    if (c = window.getComputedStyle(document.body, null).fontSize.match(/(\\d+)px/)) {\n      var d = parseInt(c[1], 10), c = 1.2 * d, d = 1.5 * d\n    } else {\n      c = 19.2, d = 24;\n    }\n    return a && b >= c || b >= d;\n  }\n  if (c = b.match(/(\\d+)em/)) {\n    return b = parseInt(c[1], 10), a && 1.2 <= b || 1.5 <= b ? !0 : !1;\n  }\n  if (c = b.match(/(\\d+)%/)) {\n    return b = parseInt(c[1], 10), a && 120 <= b || 150 <= b ? !0 : !1;\n  }\n  if (c = b.match(/(\\d+)pt/)) {\n    if (b = parseInt(c[1], 10), a && 14 <= b || 18 <= b) {\n      return !0;\n    }\n  }\n  return !1;\n};\naxs.utils.getBgColor = function(a, b) {\n  var c = axs.color.parseColor(a.backgroundColor);\n  if (!c) {\n    return null;\n  }\n  1 > a.opacity && (c.alpha *= a.opacity);\n  if (1 > c.alpha) {\n    var d = axs.utils.getParentBgColor(b);\n    if (null == d) {\n      return null;\n    }\n    c = axs.color.flattenColors(c, d);\n  }\n  return c;\n};\naxs.utils.getParentBgColor = function(a) {\n  var b = a;\n  a = [];\n  for (var c = null;b = axs.utils.parentElement(b);) {\n    var d = window.getComputedStyle(b, null);\n    if (d) {\n      var e = axs.color.parseColor(d.backgroundColor);\n      if (e && (1 > d.opacity && (e.alpha *= d.opacity), 0 != e.alpha && (a.push(e), 1 == e.alpha))) {\n        c = !0;\n        break;\n      }\n    }\n  }\n  c || a.push(new axs.color.Color(255, 255, 255, 1));\n  for (b = a.pop();a.length;) {\n    c = a.pop(), b = axs.color.flattenColors(c, b);\n  }\n  return b;\n};\naxs.utils.getFgColor = function(a, b, c) {\n  var d = axs.color.parseColor(a.color);\n  if (!d) {\n    return null;\n  }\n  1 > d.alpha && (d = axs.color.flattenColors(d, c));\n  1 > a.opacity && (b = axs.utils.getParentBgColor(b), d.alpha *= a.opacity, d = axs.color.flattenColors(d, b));\n  return d;\n};\naxs.utils.getContrastRatioForElement = function(a) {\n  var b = window.getComputedStyle(a, null);\n  return axs.utils.getContrastRatioForElementWithComputedStyle(b, a);\n};\naxs.utils.getContrastRatioForElementWithComputedStyle = function(a, b) {\n  if (axs.utils.isElementHidden(b)) {\n    return null;\n  }\n  var c = axs.utils.getBgColor(a, b);\n  if (!c) {\n    return null;\n  }\n  var d = axs.utils.getFgColor(a, b, c);\n  return d ? axs.color.calculateContrastRatio(d, c) : null;\n};\naxs.utils.isNativeTextElement = function(a) {\n  var b = a.tagName.toLowerCase();\n  a = a.type ? a.type.toLowerCase() : "";\n  if ("textarea" == b) {\n    return !0;\n  }\n  if ("input" != b) {\n    return !1;\n  }\n  switch(a) {\n    case "email":\n    ;\n    case "number":\n    ;\n    case "password":\n    ;\n    case "search":\n    ;\n    case "text":\n    ;\n    case "tel":\n    ;\n    case "url":\n    ;\n    case "":\n      return !0;\n    default:\n      return !1;\n  }\n};\naxs.utils.isLowContrast = function(a, b, c) {\n  a = Math.round(10 * a) / 10;\n  return c ? 4.5 > a || !axs.utils.isLargeFont(b) && 7 > a : 3 > a || !axs.utils.isLargeFont(b) && 4.5 > a;\n};\naxs.utils.hasLabel = function(a) {\n  var b = a.tagName.toLowerCase(), c = a.type ? a.type.toLowerCase() : "";\n  if (a.hasAttribute("aria-label") || a.hasAttribute("title") || "img" == b && a.hasAttribute("alt") || "input" == b && "image" == c && a.hasAttribute("alt") || "input" == b && ("submit" == c || "reset" == c) || a.hasAttribute("aria-labelledby") || a.hasAttribute("id") && 0 < document.querySelectorAll(\'label[for="\' + a.id + \'"]\').length) {\n    return !0;\n  }\n  for (b = axs.utils.parentElement(a);b;) {\n    if ("label" == b.tagName.toLowerCase() && b.control == a) {\n      return !0;\n    }\n    b = axs.utils.parentElement(b);\n  }\n  return !1;\n};\naxs.utils.isNativelyDisableable = function(a) {\n  return a.tagName.toUpperCase() in axs.constants.NATIVELY_DISABLEABLE;\n};\naxs.utils.isElementDisabled = function(a) {\n  if (axs.browserUtils.matchSelector(a, "[aria-disabled=true], [aria-disabled=true] *")) {\n    return !0;\n  }\n  if (!axs.utils.isNativelyDisableable(a) || axs.browserUtils.matchSelector(a, "fieldset>legend:first-of-type *")) {\n    return !1;\n  }\n  for (;null !== a;a = axs.utils.parentElement(a)) {\n    if (axs.utils.isNativelyDisableable(a) && a.hasAttribute("disabled")) {\n      return !0;\n    }\n  }\n  return !1;\n};\naxs.utils.isElementHidden = function(a) {\n  if (!(a instanceof a.ownerDocument.defaultView.HTMLElement)) {\n    return !1;\n  }\n  if (a.hasAttribute("chromevoxignoreariahidden")) {\n    var b = !0\n  }\n  var c = window.getComputedStyle(a, null);\n  return "none" == c.display || "hidden" == c.visibility ? !0 : a.hasAttribute("aria-hidden") && "true" == a.getAttribute("aria-hidden").toLowerCase() ? !b : !1;\n};\naxs.utils.isElementOrAncestorHidden = function(a) {\n  return axs.utils.isElementHidden(a) ? !0 : axs.utils.parentElement(a) ? axs.utils.isElementOrAncestorHidden(axs.utils.parentElement(a)) : !1;\n};\naxs.utils.isInlineElement = function(a) {\n  a = a.tagName.toUpperCase();\n  return axs.constants.InlineElements[a];\n};\naxs.utils.getRoles = function(a, b) {\n  if (!a || a.nodeType !== Node.ELEMENT_NODE || !a.hasAttribute("role") && !b) {\n    return null;\n  }\n  var c = a.getAttribute("role");\n  !c && b && (c = axs.properties.getImplicitRole(a));\n  if (!c) {\n    return null;\n  }\n  for (var c = c.split(" "), d = {roles:[], valid:!1}, e = 0;e < c.length;e++) {\n    var f = c[e], g = axs.constants.ARIA_ROLES[f], f = {name:f};\n    g && !g.abstract ? (f.details = g, d.applied || (d.applied = f), f.valid = d.valid = !0) : f.valid = !1;\n    d.roles.push(f);\n  }\n  return d;\n};\naxs.utils.getAriaPropertyValue = function(a, b, c) {\n  var d = a.replace(/^aria-/, ""), e = axs.constants.ARIA_PROPERTIES[d], d = {name:a, rawValue:b};\n  if (!e) {\n    return d.valid = !1, d.reason = \'"\' + a + \'" is not a valid ARIA property\', d;\n  }\n  e = e.valueType;\n  if (!e) {\n    return d.valid = !1, d.reason = \'"\' + a + \'" is not a valid ARIA property\', d;\n  }\n  switch(e) {\n    case "idref":\n      a = axs.utils.isValidIDRefValue(b, c), d.valid = a.valid, d.reason = a.reason, d.idref = a.idref;\n    case "idref_list":\n      a = b.split(/\\s+/);\n      d.valid = !0;\n      for (b = 0;b < a.length;b++) {\n        e = axs.utils.isValidIDRefValue(a[b], c), e.valid || (d.valid = !1), d.values ? d.values.push(e) : d.values = [e];\n      }\n      return d;\n    case "integer":\n      c = axs.utils.isValidNumber(b);\n      if (!c.valid) {\n        return d.valid = !1, d.reason = c.reason, d;\n      }\n      Math.floor(c.value) !== c.value ? (d.valid = !1, d.reason = "" + b + " is not a whole integer") : (d.valid = !0, d.value = c.value);\n      return d;\n    case "decimal":\n    ;\n    case "number":\n      c = axs.utils.isValidNumber(b);\n      d.valid = c.valid;\n      if (!c.valid) {\n        return d.reason = c.reason, d;\n      }\n      d.value = c.value;\n      return d;\n    case "string":\n      return d.valid = !0, d.value = b, d;\n    case "token":\n      return c = axs.utils.isValidTokenValue(a, b.toLowerCase()), c.valid ? (d.valid = !0, d.value = c.value) : (d.valid = !1, d.value = b, d.reason = c.reason), d;\n    case "token_list":\n      e = b.split(/\\s+/);\n      d.valid = !0;\n      for (b = 0;b < e.length;b++) {\n        c = axs.utils.isValidTokenValue(a, e[b].toLowerCase()), c.valid || (d.valid = !1, d.reason ? (d.reason = [d.reason], d.reason.push(c.reason)) : (d.reason = c.reason, d.possibleValues = c.possibleValues)), d.values ? d.values.push(c.value) : d.values = [c.value];\n      }\n      return d;\n    case "tristate":\n      return c = axs.utils.isPossibleValue(b.toLowerCase(), axs.constants.MIXED_VALUES, a), c.valid ? (d.valid = !0, d.value = c.value) : (d.valid = !1, d.value = b, d.reason = c.reason), d;\n    case "boolean":\n      return c = axs.utils.isValidBoolean(b), c.valid ? (d.valid = !0, d.value = c.value) : (d.valid = !1, d.value = b, d.reason = c.reason), d;\n  }\n  d.valid = !1;\n  d.reason = "Not a valid ARIA property";\n  return d;\n};\naxs.utils.isValidTokenValue = function(a, b) {\n  var c = a.replace(/^aria-/, "");\n  return axs.utils.isPossibleValue(b, axs.constants.ARIA_PROPERTIES[c].valuesSet, a);\n};\naxs.utils.isPossibleValue = function(a, b, c) {\n  return b[a] ? {valid:!0, value:a} : {valid:!1, value:a, reason:\'"\' + a + \'" is not a valid value for \' + c, possibleValues:Object.keys(b)};\n};\naxs.utils.isValidBoolean = function(a) {\n  try {\n    var b = JSON.parse(a);\n  } catch (c) {\n    b = "";\n  }\n  return "boolean" != typeof b ? {valid:!1, value:a, reason:\'"\' + a + \'" is not a true/false value\'} : {valid:!0, value:b};\n};\naxs.utils.isValidIDRefValue = function(a, b) {\n  return 0 == a.length ? {valid:!0, idref:a} : b.ownerDocument.getElementById(a) ? {valid:!0, idref:a} : {valid:!1, idref:a, reason:\'No element with ID "\' + a + \'"\'};\n};\naxs.utils.isValidNumber = function(a) {\n  var b = {valid:!1, value:a, reason:\'"\' + a + \'" is not a number\'};\n  if (!a) {\n    return b;\n  }\n  if (/^0x/i.test(a)) {\n    return b.reason = \'"\' + a + \'" is not a decimal number\', b;\n  }\n  a *= 1;\n  return isFinite(a) ? {valid:!0, value:a} : b;\n};\naxs.utils.isElementImplicitlyFocusable = function(a) {\n  var b = a.ownerDocument.defaultView;\n  return a instanceof b.HTMLAnchorElement || a instanceof b.HTMLAreaElement ? a.hasAttribute("href") : a instanceof b.HTMLInputElement || a instanceof b.HTMLSelectElement || a instanceof b.HTMLTextAreaElement || a instanceof b.HTMLButtonElement || a instanceof b.HTMLIFrameElement ? !a.disabled : !1;\n};\naxs.utils.values = function(a) {\n  var b = [], c;\n  for (c in a) {\n    a.hasOwnProperty(c) && "function" != typeof a[c] && b.push(a[c]);\n  }\n  return b;\n};\naxs.utils.namedValues = function(a) {\n  var b = {}, c;\n  for (c in a) {\n    a.hasOwnProperty(c) && "function" != typeof a[c] && (b[c] = a[c]);\n  }\n  return b;\n};\naxs.utils.getQuerySelectorText = function(a) {\n  if (null == a || "HTML" == a.tagName) {\n    return "html";\n  }\n  if ("BODY" == a.tagName) {\n    return "body";\n  }\n  if (a.hasAttribute) {\n    if (a.id) {\n      return "#" + a.id;\n    }\n    if (a.className) {\n      for (var b = "", c = 0;c < a.classList.length;c++) {\n        b += "." + a.classList[c];\n      }\n      var d = 0;\n      if (a.parentNode) {\n        for (c = 0;c < a.parentNode.children.length;c++) {\n          var e = a.parentNode.children[c];\n          axs.browserUtils.matchSelector(e, b) && d++;\n          if (e === a) {\n            break;\n          }\n        }\n      } else {\n        d = 1;\n      }\n      if (1 == d) {\n        return axs.utils.getQuerySelectorText(a.parentNode) + " > " + b;\n      }\n    }\n    if (a.parentNode) {\n      b = a.parentNode.children;\n      d = 1;\n      for (c = 0;b[c] !== a;) {\n        b[c].tagName == a.tagName && d++, c++;\n      }\n      c = "";\n      "BODY" != a.parentNode.tagName && (c = axs.utils.getQuerySelectorText(a.parentNode) + " > ");\n      return 1 == d ? c + a.tagName : c + a.tagName + ":nth-of-type(" + d + ")";\n    }\n  } else {\n    if (a.selectorText) {\n      return a.selectorText;\n    }\n  }\n  return "";\n};\naxs.utils.getIdReferrers = function(a, b) {\n  if (!b) {\n    return null;\n  }\n  var c = b.id, d = a.replace(/^aria-/, ""), d = axs.constants.ARIA_PROPERTIES[d];\n  if (!c || !d) {\n    return null;\n  }\n  d = d.valueType;\n  return "idref_list" === d || "idref" === d ? (c = c.replace(/\'/g, "\\\\\'"), b.ownerDocument.querySelectorAll("[" + a + "~=\'" + c + "\']")) : null;\n};\naxs.utils.getIdReferents = function(a, b) {\n  var c = [], d = a.replace(/^aria-/, ""), d = axs.constants.ARIA_PROPERTIES[d];\n  if (!d || !b.hasAttribute(a)) {\n    return c;\n  }\n  d = d.valueType;\n  if ("idref_list" === d || "idref" === d) {\n    for (var d = b.ownerDocument, e = b.getAttribute(a), e = e.split(/\\s+/), f = 0, g = e.length;f < g;f++) {\n      var h = d.getElementById(e[f]);\n      h && (c[c.length] = h);\n    }\n  }\n  return c;\n};\naxs.utils.getAriaPropertiesByValueType = function(a) {\n  var b = {}, c;\n  for (c in axs.constants.ARIA_PROPERTIES) {\n    var d = axs.constants.ARIA_PROPERTIES[c];\n    d && 0 <= a.indexOf(d.valueType) && (b[c] = d);\n  }\n  return b;\n};\naxs.utils.getSelectorForAriaProperties = function(a) {\n  a = Object.keys(a).map(function(a) {\n    return "[aria-" + a + "]";\n  });\n  a.sort();\n  return a.join(",");\n};\naxs.utils.findDescendantsWithRole = function(a, b) {\n  if (!a || !b) {\n    return [];\n  }\n  var c = axs.properties.getSelectorForRole(b);\n  if (c && (c = a.querySelectorAll(c))) {\n    c = Array.prototype.map.call(c, function(a) {\n      return a;\n    });\n  } else {\n    return [];\n  }\n  return c;\n};\naxs.properties = {};\naxs.properties.TEXT_CONTENT_XPATH = \'.//text()[normalize-space(.)!=""]/parent::*[name()!="script"]\';\naxs.properties.getFocusProperties = function(a) {\n  var b = {}, c = a.getAttribute("tabindex");\n  void 0 != c ? b.tabindex = {value:c, valid:!0} : axs.utils.isElementImplicitlyFocusable(a) && (b.implicitlyFocusable = {value:!0, valid:!0});\n  if (0 == Object.keys(b).length) {\n    return null;\n  }\n  var d = axs.utils.elementIsTransparent(a), e = axs.utils.elementHasZeroArea(a), f = axs.utils.elementIsOutsideScrollArea(a), g = axs.utils.overlappingElements(a);\n  if (d || e || f || 0 < g.length) {\n    var c = axs.utils.isElementOrAncestorHidden(a), h = {value:!1, valid:c};\n    d && (h.transparent = !0);\n    e && (h.zeroArea = !0);\n    f && (h.outsideScrollArea = !0);\n    g && 0 < g.length && (h.overlappingElements = g);\n    d = {value:c, valid:c};\n    c && (d.reason = axs.properties.getHiddenReason(a));\n    h.hidden = d;\n    b.visible = h;\n  } else {\n    b.visible = {value:!0, valid:!0};\n  }\n  return b;\n};\naxs.properties.getHiddenReason = function(a) {\n  if (!(a && a instanceof a.ownerDocument.defaultView.HTMLElement)) {\n    return null;\n  }\n  if (a.hasAttribute("chromevoxignoreariahidden")) {\n    var b = !0\n  }\n  var c = window.getComputedStyle(a, null);\n  return "none" == c.display ? {property:"display: none", on:a} : "hidden" == c.visibility ? {property:"visibility: hidden", on:a} : a.hasAttribute("aria-hidden") && "true" == a.getAttribute("aria-hidden").toLowerCase() && !b ? {property:"aria-hidden", on:a} : axs.properties.getHiddenReason(axs.utils.parentElement(a));\n};\naxs.properties.getColorProperties = function(a) {\n  var b = {};\n  (a = axs.properties.getContrastRatioProperties(a)) && (b.contrastRatio = a);\n  return 0 == Object.keys(b).length ? null : b;\n};\naxs.properties.hasDirectTextDescendant = function(a) {\n  function b() {\n    for (var b = c.evaluate(axs.properties.TEXT_CONTENT_XPATH, a, null, XPathResult.ANY_TYPE, null), e = b.iterateNext();null != e;e = b.iterateNext()) {\n      if (e === a) {\n        return !0;\n      }\n    }\n    return !1;\n  }\n  var c;\n  c = a.nodeType == Node.DOCUMENT_NODE ? a : a.ownerDocument;\n  return c.evaluate ? b() : function() {\n    for (var b = c.createTreeWalker(a, NodeFilter.SHOW_TEXT, null, !1);b.nextNode();) {\n      var e = b.currentNode, f = e.parentNode.tagName.toLowerCase();\n      if (e.nodeValue.trim() && "script" !== f && a !== e) {\n        return !0;\n      }\n    }\n    return !1;\n  }();\n};\naxs.properties.getContrastRatioProperties = function(a) {\n  if (!axs.properties.hasDirectTextDescendant(a)) {\n    return null;\n  }\n  var b = {}, c = window.getComputedStyle(a, null), d = axs.utils.getBgColor(c, a);\n  if (!d) {\n    return null;\n  }\n  b.backgroundColor = axs.color.colorToString(d);\n  var e = axs.utils.getFgColor(c, a, d);\n  b.foregroundColor = axs.color.colorToString(e);\n  a = axs.utils.getContrastRatioForElementWithComputedStyle(c, a);\n  if (!a) {\n    return null;\n  }\n  b.value = a.toFixed(2);\n  axs.utils.isLowContrast(a, c) && (b.alert = !0);\n  var f = axs.utils.isLargeFont(c) ? 3 : 4.5, c = axs.utils.isLargeFont(c) ? 4.5 : 7, g = {};\n  f > a && (g.AA = f);\n  c > a && (g.AAA = c);\n  if (!Object.keys(g).length) {\n    return b;\n  }\n  (d = axs.color.suggestColors(d, e, g)) && Object.keys(d).length && (b.suggestedColors = d);\n  return b;\n};\naxs.properties.findTextAlternatives = function(a, b, c, d) {\n  var e = c || !1;\n  c = axs.utils.asElement(a);\n  if (!c || !e && !d && axs.utils.isElementOrAncestorHidden(c)) {\n    return null;\n  }\n  if (a.nodeType == Node.TEXT_NODE) {\n    return c = {type:"text"}, c.text = a.textContent, c.lastWord = axs.properties.getLastWord(c.text), b.content = c, a.textContent;\n  }\n  a = null;\n  e || (a = axs.properties.getTextFromAriaLabelledby(c, b));\n  c.hasAttribute("aria-label") && (d = {type:"text"}, d.text = c.getAttribute("aria-label"), d.lastWord = axs.properties.getLastWord(d.text), a ? d.unused = !0 : e && axs.utils.elementIsHtmlControl(c) || (a = d.text), b.ariaLabel = d);\n  c.hasAttribute("role") && "presentation" == c.getAttribute("role") || (a = axs.properties.getTextFromHostLanguageAttributes(c, b, a, e));\n  if (e && axs.utils.elementIsHtmlControl(c)) {\n    d = c.ownerDocument.defaultView;\n    if (c instanceof d.HTMLInputElement) {\n      var f = c;\n      "text" == f.type && f.value && 0 < f.value.length && (b.controlValue = {text:f.value});\n      "range" == f.type && (b.controlValue = {text:f.value});\n    }\n    c instanceof d.HTMLSelectElement && (b.controlValue = {text:c.value});\n    b.controlValue && (d = b.controlValue, a ? d.unused = !0 : a = d.text);\n  }\n  if (e && axs.utils.elementIsAriaWidget(c)) {\n    e = c.getAttribute("role");\n    "textbox" == e && c.textContent && 0 < c.textContent.length && (b.controlValue = {text:c.textContent});\n    if ("slider" == e || "spinbutton" == e) {\n      c.hasAttribute("aria-valuetext") ? b.controlValue = {text:c.getAttribute("aria-valuetext")} : c.hasAttribute("aria-valuenow") && (b.controlValue = {value:c.getAttribute("aria-valuenow"), text:"" + c.getAttribute("aria-valuenow")});\n    }\n    if ("menu" == e) {\n      var g = c.querySelectorAll("[role=menuitemcheckbox], [role=menuitemradio]");\n      d = [];\n      for (f = 0;f < g.length;f++) {\n        "true" == g[f].getAttribute("aria-checked") && d.push(g[f]);\n      }\n      if (0 < d.length) {\n        g = "";\n        for (f = 0;f < d.length;f++) {\n          g += axs.properties.findTextAlternatives(d[f], {}, !0), f < d.length - 1 && (g += ", ");\n        }\n        b.controlValue = {text:g};\n      }\n    }\n    if ("combobox" == e || "select" == e) {\n      b.controlValue = {text:"TODO"};\n    }\n    b.controlValue && (d = b.controlValue, a ? d.unused = !0 : a = d.text);\n  }\n  d = !0;\n  c.hasAttribute("role") && (e = c.getAttribute("role"), (e = axs.constants.ARIA_ROLES[e]) && (!e.namefrom || 0 > e.namefrom.indexOf("contents")) && (d = !1));\n  (e = axs.properties.getTextFromDescendantContent(c)) && d && (d = {type:"text"}, d.text = e, d.lastWord = axs.properties.getLastWord(d.text), a ? d.unused = !0 : a = e, b.content = d);\n  c.hasAttribute("title") && (e = {type:"string", valid:!0}, e.text = c.getAttribute("title"), e.lastWord = axs.properties.getLastWord(e.lastWord), a ? e.unused = !0 : a = e.text, b.title = e);\n  return 0 == Object.keys(b).length && null == a ? null : a;\n};\naxs.properties.getTextFromDescendantContent = function(a) {\n  var b = a.childNodes;\n  a = [];\n  for (var c = 0;c < b.length;c++) {\n    var d = axs.properties.findTextAlternatives(b[c], {}, !0);\n    d && a.push(d.trim());\n  }\n  if (a.length) {\n    b = "";\n    for (c = 0;c < a.length;c++) {\n      b = [b, a[c]].join(" ").trim();\n    }\n    return b;\n  }\n  return null;\n};\naxs.properties.getTextFromAriaLabelledby = function(a, b) {\n  var c = null;\n  if (!a.hasAttribute("aria-labelledby")) {\n    return c;\n  }\n  for (var d = a.getAttribute("aria-labelledby").split(/\\s+/), e = {valid:!0}, f = [], g = [], h = 0;h < d.length;h++) {\n    var k = {type:"element"}, m = d[h];\n    k.value = m;\n    var l = document.getElementById(m);\n    l ? (k.valid = !0, k.text = axs.properties.findTextAlternatives(l, {}, !0), k.lastWord = axs.properties.getLastWord(k.text), f.push(l.textContent.trim()), k.element = l) : (k.valid = !1, e.valid = !1, k.errorMessage = {messageKey:"noElementWithId", args:[m]});\n    g.push(k);\n  }\n  0 < g.length && (g[g.length - 1].last = !0, e.values = g, e.text = f.join(" "), e.lastWord = axs.properties.getLastWord(e.text), c = e.text, b.ariaLabelledby = e);\n  return c;\n};\naxs.properties.getTextFromHostLanguageAttributes = function(a, b, c, d) {\n  if (axs.browserUtils.matchSelector(a, "img") && a.hasAttribute("alt")) {\n    var e = {type:"string", valid:!0};\n    e.text = a.getAttribute("alt");\n    c ? e.unused = !0 : c = e.text;\n    b.alt = e;\n  }\n  if (axs.browserUtils.matchSelector(a, \'input:not([type="hidden"]):not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), video:not([disabled])\') && !d) {\n    if (a.hasAttribute("id")) {\n      d = document.querySelectorAll(\'label[for="\' + a.id + \'"]\');\n      for (var e = {}, f = [], g = [], h = 0;h < d.length;h++) {\n        var k = {type:"element"}, m = d[h], l = axs.properties.findTextAlternatives(m, {}, !0);\n        l && 0 < l.trim().length && (k.text = l.trim(), g.push(l.trim()));\n        k.element = m;\n        f.push(k);\n      }\n      0 < f.length && (f[f.length - 1].last = !0, e.values = f, e.text = g.join(" "), e.lastWord = axs.properties.getLastWord(e.text), c ? e.unused = !0 : c = e.text, b.labelFor = e);\n    }\n    d = axs.utils.parentElement(a);\n    for (e = {};d;) {\n      if ("label" == d.tagName.toLowerCase() && (f = d, f.control == a)) {\n        e.type = "element";\n        e.text = axs.properties.findTextAlternatives(f, {}, !0);\n        e.lastWord = axs.properties.getLastWord(e.text);\n        e.element = f;\n        break;\n      }\n      d = axs.utils.parentElement(d);\n    }\n    e.text && (c ? e.unused = !0 : c = e.text, b.labelWrapped = e);\n    Object.keys(b).length || (b.noLabel = !0);\n  }\n  return c;\n};\naxs.properties.getLastWord = function(a) {\n  if (!a) {\n    return null;\n  }\n  var b = a.lastIndexOf(" ") + 1, c = a.length - 10;\n  return a.substring(b > c ? b : c);\n};\naxs.properties.getTextProperties = function(a) {\n  var b = {}, c = axs.properties.findTextAlternatives(a, b, !1, !0);\n  if (0 == Object.keys(b).length && ((a = axs.utils.asElement(a)) && axs.browserUtils.matchSelector(a, "img") && (b.alt = {valid:!1, errorMessage:"No alt value provided"}, a = a.src, "string" == typeof a && (c = a.split("/").pop(), b.filename = {text:c})), !c)) {\n    return null;\n  }\n  b.hasProperties = Boolean(Object.keys(b).length);\n  b.computedText = c;\n  b.lastWord = axs.properties.getLastWord(c);\n  return b;\n};\naxs.properties.getAriaProperties = function(a) {\n  var b = {}, c = axs.properties.getGlobalAriaProperties(a), d;\n  for (d in axs.constants.ARIA_PROPERTIES) {\n    var e = "aria-" + d;\n    if (a.hasAttribute(e)) {\n      var f = a.getAttribute(e);\n      c[e] = axs.utils.getAriaPropertyValue(e, f, a);\n    }\n  }\n  0 < Object.keys(c).length && (b.properties = axs.utils.values(c));\n  f = axs.utils.getRoles(a);\n  if (!f) {\n    return Object.keys(b).length ? b : null;\n  }\n  b.roles = f;\n  if (!f.valid || !f.roles) {\n    return b;\n  }\n  for (var e = f.roles, g = 0;g < e.length;g++) {\n    var h = e[g];\n    if (h.details && h.details.propertiesSet) {\n      for (d in h.details.propertiesSet) {\n        d in c || (a.hasAttribute(d) ? (f = a.getAttribute(d), c[d] = axs.utils.getAriaPropertyValue(d, f, a), "values" in c[d] && (f = c[d].values, f[f.length - 1].isLast = !0)) : h.details.requiredPropertiesSet[d] && (c[d] = {name:d, valid:!1, reason:"Required property not set"}));\n      }\n    }\n  }\n  0 < Object.keys(c).length && (b.properties = axs.utils.values(c));\n  return 0 < Object.keys(b).length ? b : null;\n};\naxs.properties.getGlobalAriaProperties = function(a) {\n  var b = {}, c;\n  for (c in axs.constants.GLOBAL_PROPERTIES) {\n    if (a.hasAttribute(c)) {\n      var d = a.getAttribute(c);\n      b[c] = axs.utils.getAriaPropertyValue(c, d, a);\n    }\n  }\n  return b;\n};\naxs.properties.getVideoProperties = function(a) {\n  if (!axs.browserUtils.matchSelector(a, "video")) {\n    return null;\n  }\n  var b = {};\n  b.captionTracks = axs.properties.getTrackElements(a, "captions");\n  b.descriptionTracks = axs.properties.getTrackElements(a, "descriptions");\n  b.chapterTracks = axs.properties.getTrackElements(a, "chapters");\n  return b;\n};\naxs.properties.getTrackElements = function(a, b) {\n  var c = a.querySelectorAll("track[kind=" + b + "]"), d = {};\n  if (!c.length) {\n    return d.valid = !1, d.reason = {messageKey:"noTracksProvided", args:[[b]]}, d;\n  }\n  d.valid = !0;\n  for (var e = [], f = 0;f < c.length;f++) {\n    var g = {}, h = c[f].getAttribute("src"), k = c[f].getAttribute("srcLang"), m = c[f].getAttribute("label");\n    h ? (g.valid = !0, g.src = h) : (g.valid = !1, g.reason = {messageKey:"noSrcProvided"});\n    h = "";\n    m && (h += m, k && (h += " "));\n    k && (h += "(" + k + ")");\n    "" == h && (h = "[[object Object]]");\n    g.name = h;\n    e.push(g);\n  }\n  d.values = e;\n  return d;\n};\naxs.properties.getAllProperties = function(a) {\n  var b = axs.utils.asElement(a);\n  if (!b) {\n    return {};\n  }\n  var c = {};\n  c.ariaProperties = axs.properties.getAriaProperties(b);\n  c.colorProperties = axs.properties.getColorProperties(b);\n  c.focusProperties = axs.properties.getFocusProperties(b);\n  c.textProperties = axs.properties.getTextProperties(a);\n  c.videoProperties = axs.properties.getVideoProperties(b);\n  return c;\n};\n(function() {\n  function a(a) {\n    if (!a) {\n      return null;\n    }\n    var c = a.tagName;\n    if (!c) {\n      return null;\n    }\n    c = c.toUpperCase();\n    c = axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO[c];\n    if (!c || !c.length) {\n      return null;\n    }\n    for (var d = null, e = 0, f = c.length;e < f;e++) {\n      var g = c[e];\n      if (g.selector) {\n        if (axs.browserUtils.matchSelector(a, g.selector)) {\n          return g;\n        }\n      } else {\n        d = g;\n      }\n    }\n    return d;\n  }\n  axs.properties.getImplicitRole = function(b) {\n    return (b = a(b)) ? b.role : "";\n  };\n  axs.properties.canTakeAriaAttributes = function(b) {\n    return (b = a(b)) ? !b.reserved : !0;\n  };\n})();\naxs.properties.getNativelySupportedAttributes = function(a) {\n  var b = [];\n  if (!a) {\n    return b;\n  }\n  a = a.cloneNode(!1);\n  for (var c = Object.keys(axs.constants.ARIA_TO_HTML_ATTRIBUTE), d = 0;d < c.length;d++) {\n    var e = c[d];\n    axs.constants.ARIA_TO_HTML_ATTRIBUTE[e] in a && (b[b.length] = e);\n  }\n  return b;\n};\n(function() {\n  var a = {};\n  axs.properties.getSelectorForRole = function(b) {\n    if (!b) {\n      return "";\n    }\n    if (a[b] && a.hasOwnProperty(b)) {\n      return a[b];\n    }\n    var c = [\'[role="\' + b + \'"]\'];\n    Object.keys(axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO).forEach(function(a) {\n      var e = axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO[a];\n      if (e && e.length) {\n        for (var f = 0;f < e.length;f++) {\n          var g = e[f];\n          if (g.role === b) {\n            if (g.selector) {\n              c[c.length] = g.selector;\n            } else {\n              c[c.length] = a;\n              break;\n            }\n          }\n        }\n      }\n    });\n    return a[b] = c.join(",");\n  };\n})();\naxs.AuditRule = function(a) {\n  for (var b = !0, c = [], d = 0;d < axs.AuditRule.requiredFields.length;d++) {\n    var e = axs.AuditRule.requiredFields[d];\n    e in a || (b = !1, c.push(e));\n  }\n  if (!b) {\n    throw "Invalid spec; the following fields were not specified: " + c.join(", ") + "\\n" + JSON.stringify(a);\n  }\n  this.name = a.name;\n  this.severity = a.severity;\n  this.relevantElementMatcher_ = a.relevantElementMatcher;\n  this.test_ = a.test;\n  this.code = a.code;\n  this.heading = a.heading || "";\n  this.url = a.url || "";\n  this.requiresConsoleAPI = !!a.opt_requiresConsoleAPI;\n};\naxs.AuditRule.requiredFields = "name severity relevantElementMatcher test code heading".split(" ");\naxs.AuditRule.NOT_APPLICABLE = {result:axs.constants.AuditResult.NA};\naxs.AuditRule.prototype.addElement = function(a, b) {\n  a.push(b);\n};\naxs.AuditRule.collectMatchingElements = function(a, b, c, d) {\n  if (a.nodeType == Node.ELEMENT_NODE) {\n    var e = a\n  }\n  e && b.call(null, e) && c.push(e);\n  if (e) {\n    var f = e.shadowRoot || e.webkitShadowRoot;\n    if (f) {\n      axs.AuditRule.collectMatchingElements(f, b, c, f);\n      return;\n    }\n  }\n  if (e && "content" == e.localName) {\n    for (var f = e.getDistributedNodes(), g = 0;g < f.length;g++) {\n      axs.AuditRule.collectMatchingElements(f[g], b, c, d);\n    }\n  } else {\n    if (e && "shadow" == e.localName) {\n      if (f = e, d) {\n        for (f = f.getDistributedNodes(), g = 0;g < f.length;g++) {\n          axs.AuditRule.collectMatchingElements(f[g], b, c, d);\n        }\n      } else {\n        console.warn("ShadowRoot not provided for", e);\n      }\n    }\n    e && "iframe" == e.localName && e.contentDocument && axs.AuditRule.collectMatchingElements(e.contentDocument, b, c, d);\n    for (a = a.firstChild;null != a;) {\n      axs.AuditRule.collectMatchingElements(a, b, c, d), a = a.nextSibling;\n    }\n  }\n};\naxs.AuditRule.prototype.run = function(a) {\n  a = a || {};\n  var b = "ignoreSelectors" in a ? a.ignoreSelectors : [], c = "maxResults" in a ? a.maxResults : null, d = [];\n  axs.AuditRule.collectMatchingElements("scope" in a ? a.scope : document, this.relevantElementMatcher_, d);\n  var e = [];\n  if (!d.length) {\n    return {result:axs.constants.AuditResult.NA};\n  }\n  for (var f = 0;f < d.length && !(null != c && e.length >= c);f++) {\n    var g = d[f], h;\n    a: {\n      h = g;\n      for (var k = 0;k < b.length;k++) {\n        if (axs.browserUtils.matchSelector(h, b[k])) {\n          h = !0;\n          break a;\n        }\n      }\n      h = !1;\n    }\n    !h && this.test_(g, a.config) && this.addElement(e, g);\n  }\n  a = {result:e.length ? axs.constants.AuditResult.FAIL : axs.constants.AuditResult.PASS, elements:e};\n  f < d.length && (a.resultsTruncated = !0);\n  return a;\n};\naxs.AuditRules = {};\n(function() {\n  var a = {}, b = {};\n  axs.AuditRules.specs = {};\n  axs.AuditRules.addRule = function(c) {\n    var d = new axs.AuditRule(c);\n    if (d.code in b) {\n      throw Error(\'Can not add audit rule with same code: "\' + d.code + \'"\');\n    }\n    if (d.name in a) {\n      throw Error(\'Can not add audit rule with same name: "\' + d.name + \'"\');\n    }\n    a[d.name] = b[d.code] = d;\n    axs.AuditRules.specs[c.name] = c;\n  };\n  axs.AuditRules.getRule = function(c) {\n    return a[c] || b[c] || null;\n  };\n  axs.AuditRules.getRules = function(b) {\n    var d = Object.keys(a);\n    return b ? d : d.map(function(a) {\n      return this.getRule(a);\n    }, axs.AuditRules);\n  };\n})();\naxs.AuditResults = function() {\n  this.errors_ = [];\n  this.warnings_ = [];\n};\ngoog.exportSymbol("axs.AuditResults", axs.AuditResults);\naxs.AuditResults.prototype.addError = function(a) {\n  "" != a && this.errors_.push(a);\n};\ngoog.exportProperty(axs.AuditResults.prototype, "addError", axs.AuditResults.prototype.addError);\naxs.AuditResults.prototype.addWarning = function(a) {\n  "" != a && this.warnings_.push(a);\n};\ngoog.exportProperty(axs.AuditResults.prototype, "addWarning", axs.AuditResults.prototype.addWarning);\naxs.AuditResults.prototype.numErrors = function() {\n  return this.errors_.length;\n};\ngoog.exportProperty(axs.AuditResults.prototype, "numErrors", axs.AuditResults.prototype.numErrors);\naxs.AuditResults.prototype.numWarnings = function() {\n  return this.warnings_.length;\n};\ngoog.exportProperty(axs.AuditResults.prototype, "numWarnings", axs.AuditResults.prototype.numWarnings);\naxs.AuditResults.prototype.getErrors = function() {\n  return this.errors_;\n};\ngoog.exportProperty(axs.AuditResults.prototype, "getErrors", axs.AuditResults.prototype.getErrors);\naxs.AuditResults.prototype.getWarnings = function() {\n  return this.warnings_;\n};\ngoog.exportProperty(axs.AuditResults.prototype, "getWarnings", axs.AuditResults.prototype.getWarnings);\naxs.AuditResults.prototype.toString = function() {\n  for (var a = "", b = 0;b < this.errors_.length;b++) {\n    0 == b && (a += "\\nErrors:\\n");\n    var c = this.errors_[b], a = a + (c + "\\n\\n");\n  }\n  for (b = 0;b < this.warnings_.length;b++) {\n    0 == b && (a += "\\nWarnings:\\n"), c = this.warnings_[b], a += c + "\\n\\n";\n  }\n  return a;\n};\ngoog.exportProperty(axs.AuditResults.prototype, "toString", axs.AuditResults.prototype.toString);\naxs.Audit = {};\naxs.AuditConfiguration = function(a) {\n  null == a && (a = {});\n  this.rules_ = {};\n  this.maxResults = this.auditRulesToIgnore = this.auditRulesToRun = this.scope = null;\n  this.withConsoleApi = !1;\n  this.showUnsupportedRulesWarning = !0;\n  for (var b in this) {\n    this.hasOwnProperty(b) && b in a && (this[b] = a[b]);\n  }\n  goog.exportProperty(this, "scope", this.scope);\n  goog.exportProperty(this, "auditRulesToRun", this.auditRulesToRun);\n  goog.exportProperty(this, "auditRulesToIgnore", this.auditRulesToIgnore);\n  goog.exportProperty(this, "withConsoleApi", this.withConsoleApi);\n  goog.exportProperty(this, "showUnsupportedRulesWarning", this.showUnsupportedRulesWarning);\n};\ngoog.exportSymbol("axs.AuditConfiguration", axs.AuditConfiguration);\naxs.AuditConfiguration.prototype = {ignoreSelectors:function(a, b) {\n  a in this.rules_ || (this.rules_[a] = {});\n  "ignore" in this.rules_[a] || (this.rules_[a].ignore = []);\n  Array.prototype.push.call(this.rules_[a].ignore, b);\n}, getIgnoreSelectors:function(a) {\n  return a in this.rules_ && "ignore" in this.rules_[a] ? this.rules_[a].ignore : [];\n}, setSeverity:function(a, b) {\n  a in this.rules_ || (this.rules_[a] = {});\n  this.rules_[a].severity = b;\n}, getSeverity:function(a) {\n  return a in this.rules_ && "severity" in this.rules_[a] ? this.rules_[a].severity : null;\n}, setRuleConfig:function(a, b) {\n  a in this.rules_ || (this.rules_[a] = {});\n  this.rules_[a].config = b;\n}, getRuleConfig:function(a) {\n  return a in this.rules_ && "config" in this.rules_[a] ? this.rules_[a].config : null;\n}};\ngoog.exportProperty(axs.AuditConfiguration.prototype, "ignoreSelectors", axs.AuditConfiguration.prototype.ignoreSelectors);\ngoog.exportProperty(axs.AuditConfiguration.prototype, "getIgnoreSelectors", axs.AuditConfiguration.prototype.getIgnoreSelectors);\naxs.Audit.unsupportedRulesWarningShown = !1;\naxs.Audit.getRulesCannotRun = function(a) {\n  return a.withConsoleApi ? [] : axs.AuditRules.getRules().filter(function(a) {\n    return a.requiresConsoleAPI;\n  }).map(function(a) {\n    return a.code;\n  });\n};\naxs.Audit.run = function(a) {\n  a = a || new axs.AuditConfiguration;\n  var b = a.withConsoleApi, c = [], d;\n  d = a.auditRulesToRun && 0 < a.auditRulesToRun.length ? a.auditRulesToRun : axs.AuditRules.getRules(!0);\n  if (a.auditRulesToIgnore) {\n    for (var e = 0;e < a.auditRulesToIgnore.length;e++) {\n      var f = a.auditRulesToIgnore[e];\n      0 > d.indexOf(f) || d.splice(d.indexOf(f), 1);\n    }\n  }\n  !axs.Audit.unsupportedRulesWarningShown && a.showUnsupportedRulesWarning && (e = axs.Audit.getRulesCannotRun(a), 0 < e.length && (console.warn("Some rules cannot be checked using the axs.Audit.run() method call. Use the Chrome plugin to check these rules: " + e.join(", ")), console.warn("To remove this message, pass an AuditConfiguration object to axs.Audit.run() and set configuration.showUnsupportedRulesWarning = false.")), axs.Audit.unsupportedRulesWarningShown = !0);\n  for (e = 0;e < d.length;e++) {\n    var f = d[e], g = axs.AuditRules.getRule(f);\n    if (g && !g.disabled && (b || !g.requiresConsoleAPI)) {\n      var h = {}, k = a.getIgnoreSelectors(g.name);\n      if (0 < k.length || a.scope) {\n        h.ignoreSelectors = k;\n      }\n      k = a.getRuleConfig(g.name);\n      null != k && (h.config = k);\n      a.scope && (h.scope = a.scope);\n      a.maxResults && (h.maxResults = a.maxResults);\n      h = g.run.call(g, h);\n      g = axs.utils.namedValues(g);\n      g.severity = a.getSeverity(f) || g.severity;\n      h.rule = g;\n      c.push(h);\n    }\n  }\n  return c;\n};\ngoog.exportSymbol("axs.Audit.run", axs.Audit.run);\naxs.Audit.auditResults = function(a) {\n  for (var b = new axs.AuditResults, c = 0;c < a.length;c++) {\n    var d = a[c];\n    d.result == axs.constants.AuditResult.FAIL && (d.rule.severity == axs.constants.Severity.SEVERE ? b.addError(axs.Audit.accessibilityErrorMessage(d)) : b.addWarning(axs.Audit.accessibilityErrorMessage(d)));\n  }\n  return b;\n};\ngoog.exportSymbol("axs.Audit.auditResults", axs.Audit.auditResults);\naxs.Audit.createReport = function(a, b) {\n  var c;\n  c = "*** Begin accessibility audit results ***\\nAn accessibility audit found " + axs.Audit.auditResults(a).toString();\n  b && (c += "\\nFor more information, please see ", c += b);\n  return c += "\\n*** End accessibility audit results ***";\n};\ngoog.exportSymbol("axs.Audit.createReport", axs.Audit.createReport);\naxs.Audit.accessibilityErrorMessage = function(a) {\n  for (var b = a.rule.severity == axs.constants.Severity.SEVERE ? "Error: " : "Warning: ", b = b + (a.rule.code + " (" + a.rule.heading + ") failed on the following " + (1 == a.elements.length ? "element" : "elements")), b = 1 == a.elements.length ? b + ":" : b + (" (1 - " + Math.min(5, a.elements.length) + " of " + a.elements.length + "):"), c = Math.min(a.elements.length, 5), d = 0;d < c;d++) {\n    var e = a.elements[d], b = b + "\\n";\n    try {\n      b += axs.utils.getQuerySelectorText(e);\n    } catch (f) {\n      b += " tagName:" + e.tagName, b += " id:" + e.id;\n    }\n  }\n  "" != a.rule.url && (b += "\\nSee " + a.rule.url + " for more information.");\n  return b;\n};\ngoog.exportSymbol("axs.Audit.accessibilityErrorMessage", axs.Audit.accessibilityErrorMessage);\naxs.AuditRules.addRule({name:"ariaOnReservedElement", heading:"This element does not support ARIA roles, states and properties", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_12", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return !axs.properties.canTakeAriaAttributes(a);\n}, test:function(a) {\n  return null !== axs.properties.getAriaProperties(a);\n}, code:"AX_ARIA_12"});\naxs.AuditRules.addRule({name:"ariaOwnsDescendant", heading:"aria-owns should not be used if ownership is implicit in the DOM", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_06", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "[aria-owns]");\n}, test:function(a) {\n  return axs.utils.getIdReferents("aria-owns", a).some(function(b) {\n    return a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_CONTAINED_BY;\n  });\n}, code:"AX_ARIA_06"});\naxs.AuditRules.addRule({name:"ariaRoleNotScoped", heading:"Elements with ARIA roles must be in the correct scope", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_09", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "[role]");\n}, test:function(a) {\n  var b = axs.utils.getRoles(a);\n  if (!b || !b.applied) {\n    return !1;\n  }\n  b = b.applied.details.scope;\n  if (!b || 0 === b.length) {\n    return !1;\n  }\n  for (var c = a;c = c.parentNode;) {\n    var d = axs.utils.getRoles(c, !0);\n    if (d && d.applied && 0 <= b.indexOf(d.applied.name)) {\n      return !1;\n    }\n  }\n  if (a = axs.utils.getIdReferrers("aria-owns", a)) {\n    for (c = 0;c < a.length;c++) {\n      if ((d = axs.utils.getRoles(a[c], !0)) && d.applied && 0 <= b.indexOf(d.applied.name)) {\n        return !1;\n      }\n    }\n  }\n  return !0;\n}, code:"AX_ARIA_09"});\naxs.AuditRules.addRule({name:"audioWithoutControls", heading:"Audio elements should have controls", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_audio_01", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "audio[autoplay]");\n}, test:function(a) {\n  return !a.querySelectorAll("[controls]").length && 3 < a.duration;\n}, code:"AX_AUDIO_01"});\n(function() {\n  var a = /^aria\\-/;\n  axs.AuditRules.addRule({name:"badAriaAttribute", heading:"This element has an invalid ARIA attribute", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_11", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(b) {\n    b = b.attributes;\n    for (var c = 0, d = b.length;c < d;c++) {\n      if (a.test(b[c].name)) {\n        return !0;\n      }\n    }\n    return !1;\n  }, test:function(b) {\n    b = b.attributes;\n    for (var c = 0, d = b.length;c < d;c++) {\n      var e = b[c].name;\n      if (a.test(e) && (e = e.replace(a, ""), !axs.constants.ARIA_PROPERTIES.hasOwnProperty(e))) {\n        return !0;\n      }\n    }\n    return !1;\n  }, code:"AX_ARIA_11"});\n})();\naxs.AuditRules.addRule({name:"badAriaAttributeValue", heading:"ARIA state and property values must be valid", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_04", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  var b = axs.utils.getSelectorForAriaProperties(axs.constants.ARIA_PROPERTIES);\n  return axs.browserUtils.matchSelector(a, b);\n}, test:function(a) {\n  for (var b in axs.constants.ARIA_PROPERTIES) {\n    var c = "aria-" + b;\n    if (a.hasAttribute(c)) {\n      var d = a.getAttribute(c);\n      if (!axs.utils.getAriaPropertyValue(c, d, a).valid) {\n        return !0;\n      }\n    }\n  }\n  return !1;\n}, code:"AX_ARIA_04"});\naxs.AuditRules.addRule({name:"badAriaRole", heading:"Elements with ARIA roles must use a valid, non-abstract ARIA role", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_01", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "[role]");\n}, test:function(a) {\n  return !axs.utils.getRoles(a).valid;\n}, code:"AX_ARIA_01"});\naxs.AuditRules.addRule({name:"controlsWithoutLabel", heading:"Controls and media elements should have labels", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_text_01", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  if (!axs.browserUtils.matchSelector(a, \'input:not([type="hidden"]):not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), video:not([disabled])\') || "presentation" == a.getAttribute("role")) {\n    return !1;\n  }\n  if (0 <= a.tabIndex) {\n    return !0;\n  }\n  for (a = axs.utils.parentElement(a);null != a;a = axs.utils.parentElement(a)) {\n    if (axs.utils.elementIsAriaWidget(a)) {\n      return !1;\n    }\n  }\n  return !0;\n}, test:function(a) {\n  if (axs.utils.isElementOrAncestorHidden(a) || "input" == a.tagName.toLowerCase() && "button" == a.type && a.value.length || "button" == a.tagName.toLowerCase() && a.textContent.replace(/^\\s+|\\s+$/g, "").length || axs.utils.hasLabel(a)) {\n    return !1;\n  }\n  a = axs.properties.findTextAlternatives(a, {});\n  return null === a || "" === a.trim() ? !0 : !1;\n}, code:"AX_TEXT_01", ruleName:"Controls and media elements should have labels"});\naxs.AuditRules.addRule({name:"duplicateId", heading:"An element\'s ID must be unique in the DOM", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_html_02", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "[id]");\n}, test:function(a) {\n  var b = a.id;\n  if (!b) {\n    return !1;\n  }\n  b = "[id=\'" + b.replace(/\'/g, "\\\\\'") + "\']";\n  return 1 < a.ownerDocument.querySelectorAll(b).length;\n}, code:"AX_HTML_02"});\naxs.AuditRules.addRule({name:"focusableElementNotVisibleAndNotAriaHidden", heading:"These elements are focusable but either invisible or obscured by another element", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_focus_01", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  if (!axs.browserUtils.matchSelector(a, axs.utils.FOCUSABLE_ELEMENTS_SELECTOR)) {\n    return !1;\n  }\n  if (0 <= a.tabIndex) {\n    return !0;\n  }\n  for (var b = axs.utils.parentElement(a);null != b;b = axs.utils.parentElement(b)) {\n    if (axs.utils.elementIsAriaWidget(b)) {\n      return !1;\n    }\n  }\n  a = axs.properties.findTextAlternatives(a, {});\n  return null === a || "" === a.trim() ? !1 : !0;\n}, test:function(a) {\n  if (axs.utils.isElementOrAncestorHidden(a)) {\n    return !1;\n  }\n  a.focus();\n  return !axs.utils.elementIsVisible(a);\n}, code:"AX_FOCUS_01"});\naxs.AuditRules.addRule({name:"humanLangMissing", heading:"The web page should have the content\'s human language indicated in the markup", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_html_01", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return a instanceof a.ownerDocument.defaultView.HTMLHtmlElement;\n}, test:function(a) {\n  return a.lang ? !1 : !0;\n}, code:"AX_HTML_01"});\naxs.AuditRules.addRule({name:"imagesWithoutAltText", heading:"Images should have a text alternative or presentational role", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_text_02", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "img") && !axs.utils.isElementOrAncestorHidden(a);\n}, test:function(a) {\n  if (a.hasAttribute("alt") && "" == a.alt || "presentation" == a.getAttribute("role")) {\n    return !1;\n  }\n  var b = {};\n  axs.properties.findTextAlternatives(a, b);\n  return 0 == Object.keys(b).length ? !0 : !1;\n}, code:"AX_TEXT_02"});\naxs.AuditRules.addRule({name:"linkWithUnclearPurpose", heading:"The purpose of each link should be clear from the link text", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_text_04", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "a") && !axs.utils.isElementOrAncestorHidden(a);\n}, test:function(a, b) {\n  for (var c = b || {}, d = c.blacklistPhrases || [], e = /\\s+/, f = 0;f < d.length;f++) {\n    var g = "^\\\\s*" + d[f].trim().replace(e, "\\\\s*") + "s*[^a-z]$";\n    if ((new RegExp(g, "i")).test(a.textContent)) {\n      return !0;\n    }\n  }\n  c = c.stopwords || "click tap go here learn more this page link about".split(" ");\n  d = axs.properties.findTextAlternatives(a, {});\n  if (null === d || "" === d.trim()) {\n    return !0;\n  }\n  d = d.replace(/[^a-zA-Z ]/g, "");\n  for (f = 0;f < c.length;f++) {\n    if (d = d.replace(new RegExp("\\\\b" + c[f] + "\\\\b", "ig"), ""), "" == d.trim()) {\n      return !0;\n    }\n  }\n  return !1;\n}, code:"AX_TEXT_04"});\naxs.AuditRules.addRule({name:"lowContrastElements", heading:"Text elements should have a reasonable contrast ratio", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_color_01", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.properties.hasDirectTextDescendant(a) && !axs.utils.isElementDisabled(a);\n}, test:function(a) {\n  var b = window.getComputedStyle(a, null);\n  return (a = axs.utils.getContrastRatioForElementWithComputedStyle(b, a)) && axs.utils.isLowContrast(a, b);\n}, code:"AX_COLOR_01"});\naxs.AuditRules.addRule({name:"mainRoleOnInappropriateElement", heading:"role=main should only appear on significant elements", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_05", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "[role~=main]");\n}, test:function(a) {\n  if (axs.utils.isInlineElement(a)) {\n    return !0;\n  }\n  a = axs.properties.getTextFromDescendantContent(a);\n  return !a || 50 > a.length ? !0 : !1;\n}, code:"AX_ARIA_05"});\naxs.AuditRules.addRule({name:"elementsWithMeaningfulBackgroundImage", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return !axs.utils.isElementOrAncestorHidden(a);\n}, heading:"Meaningful images should not be used in element backgrounds", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_image_01", test:function(a) {\n  if (a.textContent && 0 < a.textContent.length) {\n    return !1;\n  }\n  a = window.getComputedStyle(a, null);\n  var b = a.backgroundImage;\n  if (!b || "undefined" === b || "none" === b || 0 != b.indexOf("url")) {\n    return !1;\n  }\n  b = parseInt(a.width, 10);\n  a = parseInt(a.height, 10);\n  return 150 > b && 150 > a;\n}, code:"AX_IMAGE_01"});\naxs.AuditRules.addRule({name:"multipleAriaOwners", heading:"An element\'s ID must not be present in more that one aria-owns attribute at any time", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_07", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "[aria-owns]");\n}, test:function(a) {\n  return axs.utils.getIdReferents("aria-owns", a).some(function(a) {\n    return 1 < axs.utils.getIdReferrers("aria-owns", a).length;\n  });\n}, code:"AX_ARIA_07"});\naxs.AuditRules.addRule({name:"multipleLabelableElementsPerLabel", heading:"A label element may not have labelable descendants other than its labeled control.", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#-ax_text_03--labels-should-only-contain-one-labelable-element", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "label");\n}, test:function(a) {\n  if (1 < a.querySelectorAll(axs.utils.LABELABLE_ELEMENTS_SELECTOR).length) {\n    return !0;\n  }\n}, code:"AX_TEXT_03"});\naxs.AuditRules.addRule({name:"nonExistentAriaRelatedElement", heading:"ARIA attributes which refer to other elements by ID should refer to elements which exist in the DOM", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_02", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  var b = axs.utils.getAriaPropertiesByValueType(["idref", "idref_list"]), b = axs.utils.getSelectorForAriaProperties(b);\n  return axs.browserUtils.matchSelector(a, b);\n}, test:function(a) {\n  for (var b = axs.utils.getAriaPropertiesByValueType(["idref", "idref_list"]), b = axs.utils.getSelectorForAriaProperties(b).split(","), c = 0, d = b.length;c < d;c++) {\n    var e = b[c];\n    if (axs.browserUtils.matchSelector(a, e)) {\n      var e = e.match(/aria-[^\\]]+/)[0], f = a.getAttribute(e);\n      if (!axs.utils.getAriaPropertyValue(e, f, a).valid) {\n        return !0;\n      }\n    }\n  }\n  return !1;\n}, code:"AX_ARIA_02"});\naxs.AuditRules.addRule({name:"pageWithoutTitle", heading:"The web page should have a title that describes topic or purpose", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_title_01", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return "html" == a.tagName.toLowerCase();\n}, test:function(a) {\n  a = a.querySelector("head");\n  return a ? (a = a.querySelector("title")) ? !a.textContent : !0 : !0;\n}, code:"AX_TITLE_01"});\naxs.AuditRules.addRule({name:"requiredAriaAttributeMissing", heading:"Elements with ARIA roles must have all required attributes for that role", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_03", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "[role]");\n}, test:function(a) {\n  var b = axs.utils.getRoles(a);\n  if (!b.valid) {\n    return !1;\n  }\n  for (var c = 0;c < b.roles.length;c++) {\n    var d = b.roles[c].details.requiredPropertiesSet, e;\n    for (e in d) {\n      if (d = e.replace(/^aria-/, ""), !("defaultValue" in axs.constants.ARIA_PROPERTIES[d] || a.hasAttribute(e)) && 0 > axs.properties.getNativelySupportedAttributes(a).indexOf(e)) {\n        return !0;\n      }\n    }\n  }\n}, code:"AX_ARIA_03"});\n(function() {\n  function a(a) {\n    a = axs.utils.getRoles(a);\n    if (!a || !a.applied) {\n      return [];\n    }\n    a = a.applied;\n    return a.valid ? a.details.mustcontain || [] : [];\n  }\n  axs.AuditRules.addRule({name:"requiredOwnedAriaRoleMissing", heading:"Elements with ARIA roles must ensure required owned elements are present", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_08", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(b) {\n    return axs.browserUtils.matchSelector(b, "[role]") ? 0 < a(b).length : !1;\n  }, test:function(b) {\n    if ("true" === b.getAttribute("aria-busy")) {\n      return !1;\n    }\n    for (var c = a(b), d = c.length - 1;0 <= d;d--) {\n      var e = axs.utils.findDescendantsWithRole(b, c[d]);\n      if (e && e.length) {\n        return !1;\n      }\n    }\n    b = axs.utils.getIdReferents("aria-owns", b);\n    for (d = b.length - 1;0 <= d;d--) {\n      if ((e = axs.utils.getRoles(b[d], !0)) && e.applied) {\n        for (var e = e.applied, f = c.length - 1;0 <= f;f--) {\n          if (e.name === c[f]) {\n            return !1;\n          }\n        }\n      }\n    }\n    return !0;\n  }, code:"AX_ARIA_08"});\n})();\naxs.AuditRules.addRule({name:"tabIndexGreaterThanZero", heading:"Avoid positive integer values for tabIndex", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_focus_03", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "[tabindex]");\n}, test:function(a) {\n  if (0 < a.tabIndex) {\n    return !0;\n  }\n}, code:"AX_FOCUS_03"});\naxs.AuditRules.addRule({name:"unfocusableElementsWithOnClick", heading:"Elements with onclick handlers must be focusable", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_focus_02", severity:axs.constants.Severity.WARNING, opt_requiresConsoleAPI:!0, relevantElementMatcher:function(a) {\n  return a instanceof a.ownerDocument.defaultView.HTMLBodyElement || axs.utils.isElementOrAncestorHidden(a) ? !1 : "click" in getEventListeners(a) ? !0 : !1;\n}, test:function(a) {\n  return !a.hasAttribute("tabindex") && !axs.utils.isElementImplicitlyFocusable(a) && !a.disabled;\n}, code:"AX_FOCUS_02"});\n(function() {\n  var a = /^aria\\-/, b = axs.utils.getSelectorForAriaProperties(axs.constants.ARIA_PROPERTIES);\n  axs.AuditRules.addRule({name:"unsupportedAriaAttribute", heading:"This element has an unsupported ARIA attribute", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_10", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n    return axs.browserUtils.matchSelector(a, b);\n  }, test:function(b) {\n    var d = axs.utils.getRoles(b, !0), d = d && d.applied ? d.applied.details.propertiesSet : axs.constants.GLOBAL_PROPERTIES;\n    b = b.attributes;\n    for (var e = 0, f = b.length;e < f;e++) {\n      var g = b[e].name;\n      if (a.test(g)) {\n        var h = g.replace(a, "");\n        if (axs.constants.ARIA_PROPERTIES.hasOwnProperty(h) && !(g in d)) {\n          return !0;\n        }\n      }\n    }\n    return !1;\n  }, code:"AX_ARIA_10"});\n})();\naxs.AuditRules.addRule({name:"videoWithoutCaptions", heading:"Video elements should use <track> elements to provide captions", url:"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_video_01", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, "video");\n}, test:function(a) {\n  return !a.querySelectorAll("track[kind=captions]").length;\n}, code:"AX_VIDEO_01"});\n\n  return axs;\n});\n\n// Define AMD module if possible, export globals otherwise.\nif (typeof define !== \'undefined\' && define.amd) {\n  define([], fn);\n} else {\n  var axs = fn.call(this);\n}\n\n'},function(e,t){e.exports=function(e){"function"==typeof execScript?execScript(e):eval.call(null,e)}},function(e,t,n){n(41)(n(40))},function(e,t,n){var r=n(22);"string"==typeof r&&(r=[[e.id,r,""]]),n(7)(r,{})},function(e,t,n){var r=n(23);"string"==typeof r&&(r=[[e.id,r,""]]),n(7)(r,{})},function(e,t,n){var r=n(24);"string"==typeof r&&(r=[[e.id,r,""]]),n(7)(r,{})},function(e,t,n){var r=n(25);"string"==typeof r&&(r=[[e.id,r,""]]),n(7)(r,{})},function(e,t,n){var r=n(26);"string"==typeof r&&(r=[[e.id,r,""]]),n(7)(r,{})},function(e,t,n){var r=n(27);"string"==typeof r&&(r=[[e.id,r,""]]),n(7)(r,{})},function(e,t,n){var r=n(28);"string"==typeof r&&(r=[[e.id,r,""]]),n(7)(r,{})}])},982:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,'*,*::after,*::before{box-sizing:border-box;-webkit-user-select:none;-khtml-user-select:none;-webkit-touch-callout:none;-moz-user-select:none;-o-user-select:none;user-select:none}.clearfix{display:table;content:"";clear:both}html{background-color:#000;font-size:100%}.page-header{position:fixed;top:0;left:0;width:100%;background-color:#a09e8e;height:90px}.page-header__logo{margin:2rem;font-size:2rem;font-weight:bold}@media all and (max-width: 400px){.page-header__logo{font-size:1.5rem}}@media all and (max-width: 320px){.page-header__logo{font-size:1rem}}.page-header__logo a{text-decoration:none}.page-header__logo a:link{color:#000}.page-header__logo a:visited{color:#000}.page-header__logo a:hover{text-shadow:1px 1px 10px red;text-decoration:none}.page-header__logo a:active{color:gray}.page-main{width:100%;overflow:auto;height:100vh;padding-top:100px;padding-bottom:90px;background-color:#94927c}.page-main__title{text-align:center;padding-bottom:10px;border-bottom:1px solid rgba(211,211,211,.6039215686)}@media all and (max-width: 400px){.page-main__title{font-size:1.5rem}}@media all and (max-width: 320px){.page-main__title{font-size:1rem}}.page-footer{position:fixed;bottom:0;left:0;width:100%;height:80px;padding:10px;text-align:center;background-color:#a09e8e}.page-footer *{margin:0 auto}.draw-container{margin:10 auto;text-align:center}.draw-wrapper{margin:10px auto;width:fit-content;height:fit-content;border:1px solid rgba(211,211,211,.6039215686);box-shadow:1px 1px 2px rgba(0,0,0,.753)}.draw__btn-wrapper{width:fit-content;margin:0 auto}.draw__btn-reset,.draw__btn-save,.draw__btn-undo{border:none;margin:1px auto;padding:2px 10px;border-radius:5px;height:1.5rem;box-shadow:1px 1px 4px #000;cursor:pointer;width:auto}.draw__btn-reset:hover,.draw__btn-save:hover,.draw__btn-undo:hover{transform:scale(0.95)}.draw__canvas{touch-action:none}.settings-wrapper{width:100%;padding:10px}.settings__draw-size{width:fit-content;margin:0 auto}.settings__draw-size input{border:none;margin:1px auto;padding:2px 10px;border-radius:5px;height:1.5rem;box-shadow:1px 1px 4px #000;cursor:pointer;cursor:auto}.settings__draw-size input:hover{transform:scale(0.95)}.settings__draw-size__title{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center;align-items:center;margin:5px auto;border-bottom:1px solid rgba(211,211,211,.6039215686)}.settings__draw-size__info{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center;align-items:center}.settings__stroke-style{width:fit-content;margin:10px auto}.settings__color-box{margin:10px 10px;width:30px;height:30px;border:none;box-shadow:1px 1px 4px #000;cursor:pointer}.settings__color-box:hover{opacity:.5}.settings__color-box.black{background-color:#000}.settings__color-box.white{background-color:#fff}.settings__color-box.red{background-color:red}.settings__color-box.green{background-color:green}.settings__color-box.blue{background-color:blue}.settings__line-join{width:fit-content;margin:10px auto}.settings__line-join__options{border:none;margin:1px auto;padding:2px 10px;border-radius:5px;height:1.5rem;box-shadow:1px 1px 4px #000;cursor:pointer;margin:10px 10px;width:90px;border:none;cursor:pointer}.settings__line-join__options:hover{transform:scale(0.95)}.settings__line-width{width:fit-content;margin:10px auto}.active{transform:scale(0.8)}',"",{version:3,sources:["webpack://./src/assets/styles/main.scss"],names:[],mappings:"AA6BA,qBAGE,qBAAA,CAEA,wBAAA,CACA,uBAAA,CACA,0BAAA,CACA,qBAAA,CACA,mBAAA,CACA,gBAAA,CAGF,UACE,aAAA,CACA,UAAA,CACA,UAAA,CAGF,KACE,qBAAA,CACA,cAAA,CAaA,aACE,cAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,wBApE2B,CAqE3B,WAjE2B,CAmE3B,mBACE,WAAA,CACA,cAAA,CACA,gBAAA,CAEA,kCALF,mBAMI,gBAAA,CAAA,CAGF,kCATF,mBAUI,cAAA,CAAA,CAGF,qBACE,oBAAA,CAEA,0BACE,UAAA,CAGF,6BACE,UAAA,CAGF,2BACE,4BAAA,CACA,oBAAA,CAGF,4BACE,UAAA,CAMR,WACE,UAAA,CACA,aAAA,CACA,YAAA,CACA,iBAAA,CACA,mBAAA,CACA,wBAhHkB,CAkHlB,kBACE,iBAAA,CACA,mBAAA,CACA,qDAAA,CAEA,kCALF,kBAMI,gBAAA,CAAA,CAGF,kCATF,kBAUI,cAAA,CAAA,CAKN,aACE,cAAA,CACA,QAAA,CACA,MAAA,CACA,UAAA,CACA,WA/HuB,CAgIvB,YAAA,CACA,iBAAA,CACA,wBA1I2B,CA4I3B,eACE,aAAA,CAMJ,gBACE,cAAA,CACA,iBAAA,CAGF,cACE,gBAAA,CACA,iBAAA,CACA,kBAAA,CACA,8CAAA,CACA,uCAAA,CAGF,mBACE,iBAAA,CACA,aAAA,CAIA,iDAtJF,WAAA,CACA,eAAA,CACA,gBAAA,CACA,iBAAA,CACA,aAAA,CACA,2BAAA,CACA,cAAA,CAoJI,UAAA,CAlJJ,mEACE,qBAAA,CAqJF,cACE,iBAAA,CAKF,kBACE,UAAA,CACA,YAAA,CAGF,qBACE,iBAAA,CACA,aAAA,CAEA,2BA7KF,WAAA,CACA,eAAA,CACA,gBAAA,CACA,iBAAA,CACA,aAAA,CACA,2BAAA,CACA,cAAA,CAyKI,WAAA,CAvKJ,iCACE,qBAAA,CAyKA,4BACE,YAAA,CACA,kBAAA,CACA,cAAA,CACA,sBAAA,CACA,kBAAA,CACA,eAAA,CACA,qDAAA,CAGF,2BACE,YAAA,CACA,kBAAA,CACA,cAAA,CACA,sBAAA,CACA,kBAAA,CAIJ,wBACE,iBAAA,CACA,gBAAA,CAGF,qBACE,gBAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,2BAAA,CACA,cAAA,CAEA,2BACE,UAAA,CAGF,2BACE,qBAAA,CAEF,2BACE,qBAAA,CAEF,yBACE,oBAAA,CAEF,2BACE,sBAAA,CAEF,0BACE,qBAAA,CAGJ,qBACE,iBAAA,CACA,gBAAA,CAEA,8BA1OF,WAAA,CACA,eAAA,CACA,gBAAA,CACA,iBAAA,CACA,aAAA,CACA,2BAAA,CACA,cAAA,CAsOI,gBAAA,CACA,UAAA,CACA,WAAA,CACA,cAAA,CAvOJ,oCACE,qBAAA,CA0OF,sBACE,iBAAA,CACA,gBAAA,CAIJ,QACE,oBAAA",sourcesContent:['$color-page-header-footer__bg: #a09e8e;\n$color-page-main__bg: #94927c;\n$color-border: #d3d3d39a;\n\n$size-page-header__height--v1: 90px;\n$size-page-header__width--breakpoint1: 400px;\n$size-page-header__width--breakpoint2: 320px;\n\n$size-page-footer__height: 80px;\n$size-additional-height: 10px;\n\n@mixin dark-mode {\n  // filter: invert(1) hue-rotate(100deg);\n}\n\n@mixin element-style--1 {\n  border: none;\n  margin: 1px auto;\n  padding: 2px 10px;\n  border-radius: 5px;\n  height: 1.5rem;\n  box-shadow: 1px 1px 4px black;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(0.95);\n  }\n}\n\n*,\n*::after,\n*::before {\n  box-sizing: border-box;\n\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -webkit-touch-callout: none;\n  -moz-user-select: none;\n  -o-user-select: none;\n  user-select: none;\n}\n\n.clearfix {\n  display: table;\n  content: "";\n  clear: both;\n}\n\nhtml {\n  background-color: #000000;\n  font-size: 100%;\n  @include dark-mode();\n}\n\nimg,\nvideo,\niframe,\ncanvas,\nsvg {\n  @include dark-mode();\n}\n\n.page {\n  &-header {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    background-color: $color-page-header-footer__bg;\n    height: $size-page-header__height--v1;\n\n    &__logo {\n      margin: 2rem;\n      font-size: 2rem;\n      font-weight: bold;\n\n      @media all and (max-width: $size-page-header__width--breakpoint1) {\n        font-size: 1.5rem;\n      }\n\n      @media all and (max-width: $size-page-header__width--breakpoint2) {\n        font-size: 1rem;\n      }\n\n      a {\n        text-decoration: none;\n\n        &:link {\n          color: #000000;\n        }\n\n        &:visited {\n          color: #000000;\n        }\n\n        &:hover {\n          text-shadow: 1px 1px 10px red;\n          text-decoration: none;\n        }\n\n        &:active {\n          color: #808080;\n        }\n      }\n    }\n  }\n\n  &-main {\n    width: 100%;\n    overflow: auto;\n    height: 100vh;\n    padding-top: calc($size-page-header__height--v1 + $size-additional-height);\n    padding-bottom: calc($size-page-footer__height + $size-additional-height);\n    background-color: $color-page-main__bg;\n\n    &__title {\n      text-align: center;\n      padding-bottom: 10px;\n      border-bottom: 1px solid $color-border;\n\n      @media all and (max-width: $size-page-header__width--breakpoint1) {\n        font-size: 1.5rem;\n      }\n\n      @media all and (max-width: $size-page-header__width--breakpoint2) {\n        font-size: 1rem;\n      }\n    }\n  }\n\n  &-footer {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: $size-page-footer__height;\n    padding: 10px;\n    text-align: center;\n    background-color: $color-page-header-footer__bg;\n\n    * {\n      margin: 0 auto;\n    }\n  }\n}\n\n.draw {\n  &-container {\n    margin: 10 auto;\n    text-align: center;\n  }\n\n  &-wrapper {\n    margin: 10px auto;\n    width: fit-content;\n    height: fit-content;\n    border: 1px solid $color-border;\n    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.753);\n  }\n\n  &__btn-wrapper {\n    width: fit-content;\n    margin: 0 auto;\n  }\n\n  &__btn {\n    &-reset,\n    &-save,\n    &-undo {\n      @include element-style--1();\n      width: auto;\n    }\n  }\n\n  &__canvas {\n    touch-action: none;\n  }\n}\n\n.settings {\n  &-wrapper {\n    width: 100%;\n    padding: 10px;\n  }\n\n  &__draw-size {\n    width: fit-content;\n    margin: 0 auto;\n\n    input {\n      @include element-style--1();\n      cursor: auto;\n    }\n\n    &__title {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: center;\n      align-items: center;\n      margin: 5px auto;\n      border-bottom: 1px solid $color-border;\n    }\n\n    &__info {\n      display: flex;\n      flex-direction: row;\n      flex-wrap: wrap;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  &__stroke-style {\n    width: fit-content;\n    margin: 10px auto;\n  }\n\n  &__color-box {\n    margin: 10px 10px;\n    width: 30px;\n    height: 30px;\n    border: none;\n    box-shadow: 1px 1px 4px black;\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.5;\n    }\n\n    &.black {\n      background-color: black;\n    }\n    &.white {\n      background-color: white;\n    }\n    &.red {\n      background-color: red;\n    }\n    &.green {\n      background-color: green;\n    }\n    &.blue {\n      background-color: blue;\n    }\n  }\n  &__line-join {\n    width: fit-content;\n    margin: 10px auto;\n\n    &__options {\n      @include element-style--1();\n      margin: 10px 10px;\n      width: 90px;\n      border: none;\n      cursor: pointer;\n    }\n  }\n\n  &__line-width {\n    width: fit-content;\n    margin: 10px auto;\n  }\n}\n\n.active {\n  transform: scale(0.8);\n}\n'],sourceRoot:""}]);const s=i},265:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}',"",{version:3,sources:["webpack://./src/assets/styles/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}'],sourceRoot:""}]);const s=i},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);r&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var l=e[s],c=r.base?l[0]+r.base:l[0],u=a[c]||0,d="".concat(c," ").concat(u);a[c]=u+1;var p=n(d),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var h=o(f,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=n(a[i]);t[s].references--}for(var l=r(e,o),c=0;c<a.length;c++){var u=n(a[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=l}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";n(766),n(584);var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),i=n.n(a),s=n(565),l=n.n(s),c=n(216),u=n.n(c),d=n(589),p=n.n(d),f=n(982),h={};h.styleTagTransform=p(),h.setAttributes=l(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=u(),t()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;var g=n(265),m={};m.styleTagTransform=p(),m.setAttributes=l(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=u(),t()(g.Z,m),g.Z&&g.Z.locals&&g.Z.locals;let b=!1;const v={clickX:[],clickY:[],clickDrag:[],lstStrokeStyle:[],lstLineJoin:[],lstLineWidth:[]},y={curStrokeStyle:"red",curLineJoin:"round",curLineWidth:15};let A=0,x=0,E={width:"300",height:"300"};const C=document.querySelector(".draw-wrapper"),w=document.createElement("canvas");w.setAttribute("width",E.width),w.setAttribute("height",E.height),w.setAttribute("id","canvas"),w.classList.add("draw__canvas"),C.appendChild(w),"undefined"!=typeof G_vmlCanvasManager&&(w=G_vmlCanvasManager.initElement(w));const _=w.getContext("2d");function T(e,t,n){v.clickX.push(e),v.clickY.push(t),v.clickDrag.push(n),v.lstStrokeStyle.push(y.curStrokeStyle),v.lstLineJoin.push(y.curLineJoin),v.lstLineWidth.push(y.curLineWidth)}function k(e){const t=e.target.getBoundingClientRect();return{mouseX:e.pageX-t.left,mouseY:e.pageY-t.top}}function S(){_.clearRect(0,0,_.canvas.width,_.canvas.height)}function R(){S();for(let e=0;e<v.clickX.length;e++)_.beginPath(),v.clickDrag[e]&&e?_.moveTo(v.clickX[e-1],v.clickY[e-1]):_.moveTo(v.clickX[e]-1,v.clickY[e]),_.lineTo(v.clickX[e],v.clickY[e]),_.closePath(),_.strokeStyle=v.lstStrokeStyle[e],_.lineWidth=v.lstLineWidth[e],_.lineJoin=v.lstLineJoin[e],_.stroke()}function N(e){e.forEach((function(e){e.classList.remove("active")}))}w.addEventListener("pointerdown",(function(e){if(e.target===w){const t=k(e).mouseX,n=k(e).mouseY;A=t,x=n,b=!0,T(t,n),R()}})),w.addEventListener("pointermove",(function(e){if(e.target===w&&b){const t=k(e).mouseX,n=k(e).mouseY;t!==A&&n!==x&&(T(t,n,!0),R()),A=t,x=n}})),w.addEventListener("pointerup",(function(e){e.target===w&&(b=!1)})),w.addEventListener("pointerleave",(function(e){e.target===w&&(b=!1)}));const O=document.querySelectorAll(".settings__color-box");O.forEach((e=>{e.addEventListener("click",(function(t){e.classList.contains("black")?y.curStrokeStyle="black":e.classList.contains("white")?y.curStrokeStyle="white":e.classList.contains("red")?y.curStrokeStyle="red":e.classList.contains("green")?y.curStrokeStyle="green":e.classList.contains("blue")&&(y.curStrokeStyle="blue"),N(O),e.classList.toggle("active")}))}));const I=document.querySelector("#line-width__slider"),L=document.querySelector("#current-line-width");L.innerText=y.curLineWidth,I.oninput=function(){y.curLineWidth=this.value,L.innerText=this.value};const M=document.querySelectorAll(".settings__line-join__options");function F(e){e?(console.log(e),v.clickX.splice(e),v.clickY.splice(e),v.clickDrag.splice(e),v.lstStrokeStyle.splice(e),v.lstLineJoin.splice(e),v.lstLineWidth.splice(e)):(v.clickX=[],v.clickY=[],v.clickDrag=[],v.lstStrokeStyle=[],v.lstLineJoin=[],v.lstLineWidth=[])}M.forEach((e=>{e.addEventListener("click",(function(t){"ROUND"===e.innerText?y.curLineJoin="round":"BEVEL"===e.innerText?y.curLineJoin="bevel":"MITER"===e.innerText&&(y.curLineJoin="miter"),N(M),e.classList.toggle("active")}))})),document.querySelector(".draw__btn-undo").addEventListener("click",(function(e){F(function(){let e=v.clickDrag.length-1;for(;e>0&&void 0!==v.clickDrag[e];)e--;return e}()),R()})),document.querySelector(".draw__btn-reset").addEventListener("click",(function(e){S(),F()})),document.querySelector(".draw__btn-save").addEventListener("click",(function(e){const t=document.createElement("a");t.download="my_signature.png",t.href=w.toDataURL(),t.click(),t.delete}));const B=document.querySelector("#draw-size__width"),D=document.querySelector("#draw-size__height"),P=(document.querySelector(".settings__draw-size__btn-set"),document.querySelector("#current-draw-size"));function j(){P.innerText=`${E.width} x ${E.height}`,B.style.color="black",D.style.color="black"}function H(e){let t=!0;const n=e.target,r=n.value;if(r>=5&&r<=500?(n.style.color="green",t=!0):(n.style.color="red",t=!1),t){const e=B.value,t=D.value;w.width=e,w.height=t,E.width=e,E.height=t,j(),R()}}B.value=E.width,D.value=E.height,j(),B.addEventListener("input",H),D.addEventListener("input",H)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,